// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PerformanceTest.proto

#ifndef PROTOBUF_PerformanceTest_2eproto__INCLUDED
#define PROTOBUF_PerformanceTest_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace performance {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_PerformanceTest_2eproto();
void protobuf_AssignDesc_PerformanceTest_2eproto();
void protobuf_ShutdownFile_PerformanceTest_2eproto();

class Performance;
class Performance_simplePerformance_10;
class Performance_simplePerformance_20;
class Performance_simplePerformance_30;
class Performance_simplePerformance_40;
class Performance_simplePerformance_50;
class Performance_complexPerformance_2;
class Performance_complexPerformance_4;
class Performance_complexPerformance_6;
class Performance_complexPerformance_8;
class Performance_complexPerformance_10;
class Performance_innersimplePerformance_2;
class Performance_outersimplePerformance_2;
class Performance_innersimplePerformance_4;
class Performance_outersimplePerformance_4;
class Performance_innersimplePerformance_6;
class Performance_outersimplePerformance_6;
class Performance_innersimplePerformance_8;
class Performance_outersimplePerformance_8;
class Performance_innersimplePerformance_10;
class Performance_outersimplePerformance_10;
class Performance_innercomplexPerformance_1;
class Performance_outercomplexPerformance_1;
class Performance_innercomplexPerformance_2;
class Performance_outercomplexPerformance_2;
class Performance_innercomplexPerformance_3;
class Performance_outercomplexPerformance_3;
class Performance_innercomplexPerformance_4;
class Performance_outercomplexPerformance_4;
class Performance_innercomplexPerformance_5;
class Performance_outercomplexPerformance_5;

// ===================================================================

class Performance_simplePerformance_10 : public ::google::protobuf::Message {
 public:
  Performance_simplePerformance_10();
  virtual ~Performance_simplePerformance_10();

  Performance_simplePerformance_10(const Performance_simplePerformance_10& from);

  inline Performance_simplePerformance_10& operator=(const Performance_simplePerformance_10& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Performance_simplePerformance_10& default_instance();

  void Swap(Performance_simplePerformance_10* other);

  // implements Message ----------------------------------------------

  Performance_simplePerformance_10* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Performance_simplePerformance_10& from);
  void MergeFrom(const Performance_simplePerformance_10& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 att1 = 1;
  inline bool has_att1() const;
  inline void clear_att1();
  static const int kAtt1FieldNumber = 1;
  inline ::google::protobuf::int32 att1() const;
  inline void set_att1(::google::protobuf::int32 value);

  // required int32 att2 = 2;
  inline bool has_att2() const;
  inline void clear_att2();
  static const int kAtt2FieldNumber = 2;
  inline ::google::protobuf::int32 att2() const;
  inline void set_att2(::google::protobuf::int32 value);

  // required int32 att3 = 3;
  inline bool has_att3() const;
  inline void clear_att3();
  static const int kAtt3FieldNumber = 3;
  inline ::google::protobuf::int32 att3() const;
  inline void set_att3(::google::protobuf::int32 value);

  // required int32 att4 = 4;
  inline bool has_att4() const;
  inline void clear_att4();
  static const int kAtt4FieldNumber = 4;
  inline ::google::protobuf::int32 att4() const;
  inline void set_att4(::google::protobuf::int32 value);

  // required int32 att5 = 5;
  inline bool has_att5() const;
  inline void clear_att5();
  static const int kAtt5FieldNumber = 5;
  inline ::google::protobuf::int32 att5() const;
  inline void set_att5(::google::protobuf::int32 value);

  // required int32 att6 = 6;
  inline bool has_att6() const;
  inline void clear_att6();
  static const int kAtt6FieldNumber = 6;
  inline ::google::protobuf::int32 att6() const;
  inline void set_att6(::google::protobuf::int32 value);

  // required int32 att7 = 7;
  inline bool has_att7() const;
  inline void clear_att7();
  static const int kAtt7FieldNumber = 7;
  inline ::google::protobuf::int32 att7() const;
  inline void set_att7(::google::protobuf::int32 value);

  // required int32 att8 = 8;
  inline bool has_att8() const;
  inline void clear_att8();
  static const int kAtt8FieldNumber = 8;
  inline ::google::protobuf::int32 att8() const;
  inline void set_att8(::google::protobuf::int32 value);

  // required int32 att9 = 9;
  inline bool has_att9() const;
  inline void clear_att9();
  static const int kAtt9FieldNumber = 9;
  inline ::google::protobuf::int32 att9() const;
  inline void set_att9(::google::protobuf::int32 value);

  // required int32 att10 = 10;
  inline bool has_att10() const;
  inline void clear_att10();
  static const int kAtt10FieldNumber = 10;
  inline ::google::protobuf::int32 att10() const;
  inline void set_att10(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:performance.Performance.simplePerformance_10)
 private:
  inline void set_has_att1();
  inline void clear_has_att1();
  inline void set_has_att2();
  inline void clear_has_att2();
  inline void set_has_att3();
  inline void clear_has_att3();
  inline void set_has_att4();
  inline void clear_has_att4();
  inline void set_has_att5();
  inline void clear_has_att5();
  inline void set_has_att6();
  inline void clear_has_att6();
  inline void set_has_att7();
  inline void clear_has_att7();
  inline void set_has_att8();
  inline void clear_has_att8();
  inline void set_has_att9();
  inline void clear_has_att9();
  inline void set_has_att10();
  inline void clear_has_att10();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 att1_;
  ::google::protobuf::int32 att2_;
  ::google::protobuf::int32 att3_;
  ::google::protobuf::int32 att4_;
  ::google::protobuf::int32 att5_;
  ::google::protobuf::int32 att6_;
  ::google::protobuf::int32 att7_;
  ::google::protobuf::int32 att8_;
  ::google::protobuf::int32 att9_;
  ::google::protobuf::int32 att10_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_PerformanceTest_2eproto();
  friend void protobuf_AssignDesc_PerformanceTest_2eproto();
  friend void protobuf_ShutdownFile_PerformanceTest_2eproto();

  void InitAsDefaultInstance();
  static Performance_simplePerformance_10* default_instance_;
};
// -------------------------------------------------------------------

class Performance_simplePerformance_20 : public ::google::protobuf::Message {
 public:
  Performance_simplePerformance_20();
  virtual ~Performance_simplePerformance_20();

  Performance_simplePerformance_20(const Performance_simplePerformance_20& from);

  inline Performance_simplePerformance_20& operator=(const Performance_simplePerformance_20& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Performance_simplePerformance_20& default_instance();

  void Swap(Performance_simplePerformance_20* other);

  // implements Message ----------------------------------------------

  Performance_simplePerformance_20* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Performance_simplePerformance_20& from);
  void MergeFrom(const Performance_simplePerformance_20& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 att1 = 1;
  inline bool has_att1() const;
  inline void clear_att1();
  static const int kAtt1FieldNumber = 1;
  inline ::google::protobuf::int32 att1() const;
  inline void set_att1(::google::protobuf::int32 value);

  // required int32 att2 = 2;
  inline bool has_att2() const;
  inline void clear_att2();
  static const int kAtt2FieldNumber = 2;
  inline ::google::protobuf::int32 att2() const;
  inline void set_att2(::google::protobuf::int32 value);

  // required int32 att3 = 3;
  inline bool has_att3() const;
  inline void clear_att3();
  static const int kAtt3FieldNumber = 3;
  inline ::google::protobuf::int32 att3() const;
  inline void set_att3(::google::protobuf::int32 value);

  // required int32 att4 = 4;
  inline bool has_att4() const;
  inline void clear_att4();
  static const int kAtt4FieldNumber = 4;
  inline ::google::protobuf::int32 att4() const;
  inline void set_att4(::google::protobuf::int32 value);

  // required int32 att5 = 5;
  inline bool has_att5() const;
  inline void clear_att5();
  static const int kAtt5FieldNumber = 5;
  inline ::google::protobuf::int32 att5() const;
  inline void set_att5(::google::protobuf::int32 value);

  // required int32 att6 = 6;
  inline bool has_att6() const;
  inline void clear_att6();
  static const int kAtt6FieldNumber = 6;
  inline ::google::protobuf::int32 att6() const;
  inline void set_att6(::google::protobuf::int32 value);

  // required int32 att7 = 7;
  inline bool has_att7() const;
  inline void clear_att7();
  static const int kAtt7FieldNumber = 7;
  inline ::google::protobuf::int32 att7() const;
  inline void set_att7(::google::protobuf::int32 value);

  // required int32 att8 = 8;
  inline bool has_att8() const;
  inline void clear_att8();
  static const int kAtt8FieldNumber = 8;
  inline ::google::protobuf::int32 att8() const;
  inline void set_att8(::google::protobuf::int32 value);

  // required int32 att9 = 9;
  inline bool has_att9() const;
  inline void clear_att9();
  static const int kAtt9FieldNumber = 9;
  inline ::google::protobuf::int32 att9() const;
  inline void set_att9(::google::protobuf::int32 value);

  // required int32 att10 = 10;
  inline bool has_att10() const;
  inline void clear_att10();
  static const int kAtt10FieldNumber = 10;
  inline ::google::protobuf::int32 att10() const;
  inline void set_att10(::google::protobuf::int32 value);

  // required int32 att11 = 11;
  inline bool has_att11() const;
  inline void clear_att11();
  static const int kAtt11FieldNumber = 11;
  inline ::google::protobuf::int32 att11() const;
  inline void set_att11(::google::protobuf::int32 value);

  // required int32 att12 = 12;
  inline bool has_att12() const;
  inline void clear_att12();
  static const int kAtt12FieldNumber = 12;
  inline ::google::protobuf::int32 att12() const;
  inline void set_att12(::google::protobuf::int32 value);

  // required int32 att13 = 13;
  inline bool has_att13() const;
  inline void clear_att13();
  static const int kAtt13FieldNumber = 13;
  inline ::google::protobuf::int32 att13() const;
  inline void set_att13(::google::protobuf::int32 value);

  // required int32 att14 = 14;
  inline bool has_att14() const;
  inline void clear_att14();
  static const int kAtt14FieldNumber = 14;
  inline ::google::protobuf::int32 att14() const;
  inline void set_att14(::google::protobuf::int32 value);

  // required int32 att15 = 15;
  inline bool has_att15() const;
  inline void clear_att15();
  static const int kAtt15FieldNumber = 15;
  inline ::google::protobuf::int32 att15() const;
  inline void set_att15(::google::protobuf::int32 value);

  // required int32 att16 = 16;
  inline bool has_att16() const;
  inline void clear_att16();
  static const int kAtt16FieldNumber = 16;
  inline ::google::protobuf::int32 att16() const;
  inline void set_att16(::google::protobuf::int32 value);

  // required int32 att17 = 17;
  inline bool has_att17() const;
  inline void clear_att17();
  static const int kAtt17FieldNumber = 17;
  inline ::google::protobuf::int32 att17() const;
  inline void set_att17(::google::protobuf::int32 value);

  // required int32 att18 = 18;
  inline bool has_att18() const;
  inline void clear_att18();
  static const int kAtt18FieldNumber = 18;
  inline ::google::protobuf::int32 att18() const;
  inline void set_att18(::google::protobuf::int32 value);

  // required int32 att19 = 19;
  inline bool has_att19() const;
  inline void clear_att19();
  static const int kAtt19FieldNumber = 19;
  inline ::google::protobuf::int32 att19() const;
  inline void set_att19(::google::protobuf::int32 value);

  // required int32 att20 = 20;
  inline bool has_att20() const;
  inline void clear_att20();
  static const int kAtt20FieldNumber = 20;
  inline ::google::protobuf::int32 att20() const;
  inline void set_att20(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:performance.Performance.simplePerformance_20)
 private:
  inline void set_has_att1();
  inline void clear_has_att1();
  inline void set_has_att2();
  inline void clear_has_att2();
  inline void set_has_att3();
  inline void clear_has_att3();
  inline void set_has_att4();
  inline void clear_has_att4();
  inline void set_has_att5();
  inline void clear_has_att5();
  inline void set_has_att6();
  inline void clear_has_att6();
  inline void set_has_att7();
  inline void clear_has_att7();
  inline void set_has_att8();
  inline void clear_has_att8();
  inline void set_has_att9();
  inline void clear_has_att9();
  inline void set_has_att10();
  inline void clear_has_att10();
  inline void set_has_att11();
  inline void clear_has_att11();
  inline void set_has_att12();
  inline void clear_has_att12();
  inline void set_has_att13();
  inline void clear_has_att13();
  inline void set_has_att14();
  inline void clear_has_att14();
  inline void set_has_att15();
  inline void clear_has_att15();
  inline void set_has_att16();
  inline void clear_has_att16();
  inline void set_has_att17();
  inline void clear_has_att17();
  inline void set_has_att18();
  inline void clear_has_att18();
  inline void set_has_att19();
  inline void clear_has_att19();
  inline void set_has_att20();
  inline void clear_has_att20();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 att1_;
  ::google::protobuf::int32 att2_;
  ::google::protobuf::int32 att3_;
  ::google::protobuf::int32 att4_;
  ::google::protobuf::int32 att5_;
  ::google::protobuf::int32 att6_;
  ::google::protobuf::int32 att7_;
  ::google::protobuf::int32 att8_;
  ::google::protobuf::int32 att9_;
  ::google::protobuf::int32 att10_;
  ::google::protobuf::int32 att11_;
  ::google::protobuf::int32 att12_;
  ::google::protobuf::int32 att13_;
  ::google::protobuf::int32 att14_;
  ::google::protobuf::int32 att15_;
  ::google::protobuf::int32 att16_;
  ::google::protobuf::int32 att17_;
  ::google::protobuf::int32 att18_;
  ::google::protobuf::int32 att19_;
  ::google::protobuf::int32 att20_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(20 + 31) / 32];

  friend void  protobuf_AddDesc_PerformanceTest_2eproto();
  friend void protobuf_AssignDesc_PerformanceTest_2eproto();
  friend void protobuf_ShutdownFile_PerformanceTest_2eproto();

  void InitAsDefaultInstance();
  static Performance_simplePerformance_20* default_instance_;
};
// -------------------------------------------------------------------

class Performance_simplePerformance_30 : public ::google::protobuf::Message {
 public:
  Performance_simplePerformance_30();
  virtual ~Performance_simplePerformance_30();

  Performance_simplePerformance_30(const Performance_simplePerformance_30& from);

  inline Performance_simplePerformance_30& operator=(const Performance_simplePerformance_30& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Performance_simplePerformance_30& default_instance();

  void Swap(Performance_simplePerformance_30* other);

  // implements Message ----------------------------------------------

  Performance_simplePerformance_30* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Performance_simplePerformance_30& from);
  void MergeFrom(const Performance_simplePerformance_30& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 att1 = 1;
  inline bool has_att1() const;
  inline void clear_att1();
  static const int kAtt1FieldNumber = 1;
  inline ::google::protobuf::int32 att1() const;
  inline void set_att1(::google::protobuf::int32 value);

  // required int32 att2 = 2;
  inline bool has_att2() const;
  inline void clear_att2();
  static const int kAtt2FieldNumber = 2;
  inline ::google::protobuf::int32 att2() const;
  inline void set_att2(::google::protobuf::int32 value);

  // required int32 att3 = 3;
  inline bool has_att3() const;
  inline void clear_att3();
  static const int kAtt3FieldNumber = 3;
  inline ::google::protobuf::int32 att3() const;
  inline void set_att3(::google::protobuf::int32 value);

  // required int32 att4 = 4;
  inline bool has_att4() const;
  inline void clear_att4();
  static const int kAtt4FieldNumber = 4;
  inline ::google::protobuf::int32 att4() const;
  inline void set_att4(::google::protobuf::int32 value);

  // required int32 att5 = 5;
  inline bool has_att5() const;
  inline void clear_att5();
  static const int kAtt5FieldNumber = 5;
  inline ::google::protobuf::int32 att5() const;
  inline void set_att5(::google::protobuf::int32 value);

  // required int32 att6 = 6;
  inline bool has_att6() const;
  inline void clear_att6();
  static const int kAtt6FieldNumber = 6;
  inline ::google::protobuf::int32 att6() const;
  inline void set_att6(::google::protobuf::int32 value);

  // required int32 att7 = 7;
  inline bool has_att7() const;
  inline void clear_att7();
  static const int kAtt7FieldNumber = 7;
  inline ::google::protobuf::int32 att7() const;
  inline void set_att7(::google::protobuf::int32 value);

  // required int32 att8 = 8;
  inline bool has_att8() const;
  inline void clear_att8();
  static const int kAtt8FieldNumber = 8;
  inline ::google::protobuf::int32 att8() const;
  inline void set_att8(::google::protobuf::int32 value);

  // required int32 att9 = 9;
  inline bool has_att9() const;
  inline void clear_att9();
  static const int kAtt9FieldNumber = 9;
  inline ::google::protobuf::int32 att9() const;
  inline void set_att9(::google::protobuf::int32 value);

  // required int32 att10 = 10;
  inline bool has_att10() const;
  inline void clear_att10();
  static const int kAtt10FieldNumber = 10;
  inline ::google::protobuf::int32 att10() const;
  inline void set_att10(::google::protobuf::int32 value);

  // required int32 att11 = 11;
  inline bool has_att11() const;
  inline void clear_att11();
  static const int kAtt11FieldNumber = 11;
  inline ::google::protobuf::int32 att11() const;
  inline void set_att11(::google::protobuf::int32 value);

  // required int32 att12 = 12;
  inline bool has_att12() const;
  inline void clear_att12();
  static const int kAtt12FieldNumber = 12;
  inline ::google::protobuf::int32 att12() const;
  inline void set_att12(::google::protobuf::int32 value);

  // required int32 att13 = 13;
  inline bool has_att13() const;
  inline void clear_att13();
  static const int kAtt13FieldNumber = 13;
  inline ::google::protobuf::int32 att13() const;
  inline void set_att13(::google::protobuf::int32 value);

  // required int32 att14 = 14;
  inline bool has_att14() const;
  inline void clear_att14();
  static const int kAtt14FieldNumber = 14;
  inline ::google::protobuf::int32 att14() const;
  inline void set_att14(::google::protobuf::int32 value);

  // required int32 att15 = 15;
  inline bool has_att15() const;
  inline void clear_att15();
  static const int kAtt15FieldNumber = 15;
  inline ::google::protobuf::int32 att15() const;
  inline void set_att15(::google::protobuf::int32 value);

  // required int32 att16 = 16;
  inline bool has_att16() const;
  inline void clear_att16();
  static const int kAtt16FieldNumber = 16;
  inline ::google::protobuf::int32 att16() const;
  inline void set_att16(::google::protobuf::int32 value);

  // required int32 att17 = 17;
  inline bool has_att17() const;
  inline void clear_att17();
  static const int kAtt17FieldNumber = 17;
  inline ::google::protobuf::int32 att17() const;
  inline void set_att17(::google::protobuf::int32 value);

  // required int32 att18 = 18;
  inline bool has_att18() const;
  inline void clear_att18();
  static const int kAtt18FieldNumber = 18;
  inline ::google::protobuf::int32 att18() const;
  inline void set_att18(::google::protobuf::int32 value);

  // required int32 att19 = 19;
  inline bool has_att19() const;
  inline void clear_att19();
  static const int kAtt19FieldNumber = 19;
  inline ::google::protobuf::int32 att19() const;
  inline void set_att19(::google::protobuf::int32 value);

  // required int32 att20 = 20;
  inline bool has_att20() const;
  inline void clear_att20();
  static const int kAtt20FieldNumber = 20;
  inline ::google::protobuf::int32 att20() const;
  inline void set_att20(::google::protobuf::int32 value);

  // required int32 att21 = 21;
  inline bool has_att21() const;
  inline void clear_att21();
  static const int kAtt21FieldNumber = 21;
  inline ::google::protobuf::int32 att21() const;
  inline void set_att21(::google::protobuf::int32 value);

  // required int32 att22 = 22;
  inline bool has_att22() const;
  inline void clear_att22();
  static const int kAtt22FieldNumber = 22;
  inline ::google::protobuf::int32 att22() const;
  inline void set_att22(::google::protobuf::int32 value);

  // required int32 att23 = 23;
  inline bool has_att23() const;
  inline void clear_att23();
  static const int kAtt23FieldNumber = 23;
  inline ::google::protobuf::int32 att23() const;
  inline void set_att23(::google::protobuf::int32 value);

  // required int32 att24 = 24;
  inline bool has_att24() const;
  inline void clear_att24();
  static const int kAtt24FieldNumber = 24;
  inline ::google::protobuf::int32 att24() const;
  inline void set_att24(::google::protobuf::int32 value);

  // required int32 att25 = 25;
  inline bool has_att25() const;
  inline void clear_att25();
  static const int kAtt25FieldNumber = 25;
  inline ::google::protobuf::int32 att25() const;
  inline void set_att25(::google::protobuf::int32 value);

  // required int32 att26 = 26;
  inline bool has_att26() const;
  inline void clear_att26();
  static const int kAtt26FieldNumber = 26;
  inline ::google::protobuf::int32 att26() const;
  inline void set_att26(::google::protobuf::int32 value);

  // required int32 att27 = 27;
  inline bool has_att27() const;
  inline void clear_att27();
  static const int kAtt27FieldNumber = 27;
  inline ::google::protobuf::int32 att27() const;
  inline void set_att27(::google::protobuf::int32 value);

  // required int32 att28 = 28;
  inline bool has_att28() const;
  inline void clear_att28();
  static const int kAtt28FieldNumber = 28;
  inline ::google::protobuf::int32 att28() const;
  inline void set_att28(::google::protobuf::int32 value);

  // required int32 att29 = 29;
  inline bool has_att29() const;
  inline void clear_att29();
  static const int kAtt29FieldNumber = 29;
  inline ::google::protobuf::int32 att29() const;
  inline void set_att29(::google::protobuf::int32 value);

  // required int32 att30 = 30;
  inline bool has_att30() const;
  inline void clear_att30();
  static const int kAtt30FieldNumber = 30;
  inline ::google::protobuf::int32 att30() const;
  inline void set_att30(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:performance.Performance.simplePerformance_30)
 private:
  inline void set_has_att1();
  inline void clear_has_att1();
  inline void set_has_att2();
  inline void clear_has_att2();
  inline void set_has_att3();
  inline void clear_has_att3();
  inline void set_has_att4();
  inline void clear_has_att4();
  inline void set_has_att5();
  inline void clear_has_att5();
  inline void set_has_att6();
  inline void clear_has_att6();
  inline void set_has_att7();
  inline void clear_has_att7();
  inline void set_has_att8();
  inline void clear_has_att8();
  inline void set_has_att9();
  inline void clear_has_att9();
  inline void set_has_att10();
  inline void clear_has_att10();
  inline void set_has_att11();
  inline void clear_has_att11();
  inline void set_has_att12();
  inline void clear_has_att12();
  inline void set_has_att13();
  inline void clear_has_att13();
  inline void set_has_att14();
  inline void clear_has_att14();
  inline void set_has_att15();
  inline void clear_has_att15();
  inline void set_has_att16();
  inline void clear_has_att16();
  inline void set_has_att17();
  inline void clear_has_att17();
  inline void set_has_att18();
  inline void clear_has_att18();
  inline void set_has_att19();
  inline void clear_has_att19();
  inline void set_has_att20();
  inline void clear_has_att20();
  inline void set_has_att21();
  inline void clear_has_att21();
  inline void set_has_att22();
  inline void clear_has_att22();
  inline void set_has_att23();
  inline void clear_has_att23();
  inline void set_has_att24();
  inline void clear_has_att24();
  inline void set_has_att25();
  inline void clear_has_att25();
  inline void set_has_att26();
  inline void clear_has_att26();
  inline void set_has_att27();
  inline void clear_has_att27();
  inline void set_has_att28();
  inline void clear_has_att28();
  inline void set_has_att29();
  inline void clear_has_att29();
  inline void set_has_att30();
  inline void clear_has_att30();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 att1_;
  ::google::protobuf::int32 att2_;
  ::google::protobuf::int32 att3_;
  ::google::protobuf::int32 att4_;
  ::google::protobuf::int32 att5_;
  ::google::protobuf::int32 att6_;
  ::google::protobuf::int32 att7_;
  ::google::protobuf::int32 att8_;
  ::google::protobuf::int32 att9_;
  ::google::protobuf::int32 att10_;
  ::google::protobuf::int32 att11_;
  ::google::protobuf::int32 att12_;
  ::google::protobuf::int32 att13_;
  ::google::protobuf::int32 att14_;
  ::google::protobuf::int32 att15_;
  ::google::protobuf::int32 att16_;
  ::google::protobuf::int32 att17_;
  ::google::protobuf::int32 att18_;
  ::google::protobuf::int32 att19_;
  ::google::protobuf::int32 att20_;
  ::google::protobuf::int32 att21_;
  ::google::protobuf::int32 att22_;
  ::google::protobuf::int32 att23_;
  ::google::protobuf::int32 att24_;
  ::google::protobuf::int32 att25_;
  ::google::protobuf::int32 att26_;
  ::google::protobuf::int32 att27_;
  ::google::protobuf::int32 att28_;
  ::google::protobuf::int32 att29_;
  ::google::protobuf::int32 att30_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(30 + 31) / 32];

  friend void  protobuf_AddDesc_PerformanceTest_2eproto();
  friend void protobuf_AssignDesc_PerformanceTest_2eproto();
  friend void protobuf_ShutdownFile_PerformanceTest_2eproto();

  void InitAsDefaultInstance();
  static Performance_simplePerformance_30* default_instance_;
};
// -------------------------------------------------------------------

class Performance_simplePerformance_40 : public ::google::protobuf::Message {
 public:
  Performance_simplePerformance_40();
  virtual ~Performance_simplePerformance_40();

  Performance_simplePerformance_40(const Performance_simplePerformance_40& from);

  inline Performance_simplePerformance_40& operator=(const Performance_simplePerformance_40& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Performance_simplePerformance_40& default_instance();

  void Swap(Performance_simplePerformance_40* other);

  // implements Message ----------------------------------------------

  Performance_simplePerformance_40* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Performance_simplePerformance_40& from);
  void MergeFrom(const Performance_simplePerformance_40& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 att1 = 1;
  inline bool has_att1() const;
  inline void clear_att1();
  static const int kAtt1FieldNumber = 1;
  inline ::google::protobuf::int32 att1() const;
  inline void set_att1(::google::protobuf::int32 value);

  // required int32 att2 = 2;
  inline bool has_att2() const;
  inline void clear_att2();
  static const int kAtt2FieldNumber = 2;
  inline ::google::protobuf::int32 att2() const;
  inline void set_att2(::google::protobuf::int32 value);

  // required int32 att3 = 3;
  inline bool has_att3() const;
  inline void clear_att3();
  static const int kAtt3FieldNumber = 3;
  inline ::google::protobuf::int32 att3() const;
  inline void set_att3(::google::protobuf::int32 value);

  // required int32 att4 = 4;
  inline bool has_att4() const;
  inline void clear_att4();
  static const int kAtt4FieldNumber = 4;
  inline ::google::protobuf::int32 att4() const;
  inline void set_att4(::google::protobuf::int32 value);

  // required int32 att5 = 5;
  inline bool has_att5() const;
  inline void clear_att5();
  static const int kAtt5FieldNumber = 5;
  inline ::google::protobuf::int32 att5() const;
  inline void set_att5(::google::protobuf::int32 value);

  // required int32 att6 = 6;
  inline bool has_att6() const;
  inline void clear_att6();
  static const int kAtt6FieldNumber = 6;
  inline ::google::protobuf::int32 att6() const;
  inline void set_att6(::google::protobuf::int32 value);

  // required int32 att7 = 7;
  inline bool has_att7() const;
  inline void clear_att7();
  static const int kAtt7FieldNumber = 7;
  inline ::google::protobuf::int32 att7() const;
  inline void set_att7(::google::protobuf::int32 value);

  // required int32 att8 = 8;
  inline bool has_att8() const;
  inline void clear_att8();
  static const int kAtt8FieldNumber = 8;
  inline ::google::protobuf::int32 att8() const;
  inline void set_att8(::google::protobuf::int32 value);

  // required int32 att9 = 9;
  inline bool has_att9() const;
  inline void clear_att9();
  static const int kAtt9FieldNumber = 9;
  inline ::google::protobuf::int32 att9() const;
  inline void set_att9(::google::protobuf::int32 value);

  // required int32 att10 = 10;
  inline bool has_att10() const;
  inline void clear_att10();
  static const int kAtt10FieldNumber = 10;
  inline ::google::protobuf::int32 att10() const;
  inline void set_att10(::google::protobuf::int32 value);

  // required int32 att11 = 11;
  inline bool has_att11() const;
  inline void clear_att11();
  static const int kAtt11FieldNumber = 11;
  inline ::google::protobuf::int32 att11() const;
  inline void set_att11(::google::protobuf::int32 value);

  // required int32 att12 = 12;
  inline bool has_att12() const;
  inline void clear_att12();
  static const int kAtt12FieldNumber = 12;
  inline ::google::protobuf::int32 att12() const;
  inline void set_att12(::google::protobuf::int32 value);

  // required int32 att13 = 13;
  inline bool has_att13() const;
  inline void clear_att13();
  static const int kAtt13FieldNumber = 13;
  inline ::google::protobuf::int32 att13() const;
  inline void set_att13(::google::protobuf::int32 value);

  // required int32 att14 = 14;
  inline bool has_att14() const;
  inline void clear_att14();
  static const int kAtt14FieldNumber = 14;
  inline ::google::protobuf::int32 att14() const;
  inline void set_att14(::google::protobuf::int32 value);

  // required int32 att15 = 15;
  inline bool has_att15() const;
  inline void clear_att15();
  static const int kAtt15FieldNumber = 15;
  inline ::google::protobuf::int32 att15() const;
  inline void set_att15(::google::protobuf::int32 value);

  // required int32 att16 = 16;
  inline bool has_att16() const;
  inline void clear_att16();
  static const int kAtt16FieldNumber = 16;
  inline ::google::protobuf::int32 att16() const;
  inline void set_att16(::google::protobuf::int32 value);

  // required int32 att17 = 17;
  inline bool has_att17() const;
  inline void clear_att17();
  static const int kAtt17FieldNumber = 17;
  inline ::google::protobuf::int32 att17() const;
  inline void set_att17(::google::protobuf::int32 value);

  // required int32 att18 = 18;
  inline bool has_att18() const;
  inline void clear_att18();
  static const int kAtt18FieldNumber = 18;
  inline ::google::protobuf::int32 att18() const;
  inline void set_att18(::google::protobuf::int32 value);

  // required int32 att19 = 19;
  inline bool has_att19() const;
  inline void clear_att19();
  static const int kAtt19FieldNumber = 19;
  inline ::google::protobuf::int32 att19() const;
  inline void set_att19(::google::protobuf::int32 value);

  // required int32 att20 = 20;
  inline bool has_att20() const;
  inline void clear_att20();
  static const int kAtt20FieldNumber = 20;
  inline ::google::protobuf::int32 att20() const;
  inline void set_att20(::google::protobuf::int32 value);

  // required int32 att21 = 21;
  inline bool has_att21() const;
  inline void clear_att21();
  static const int kAtt21FieldNumber = 21;
  inline ::google::protobuf::int32 att21() const;
  inline void set_att21(::google::protobuf::int32 value);

  // required int32 att22 = 22;
  inline bool has_att22() const;
  inline void clear_att22();
  static const int kAtt22FieldNumber = 22;
  inline ::google::protobuf::int32 att22() const;
  inline void set_att22(::google::protobuf::int32 value);

  // required int32 att23 = 23;
  inline bool has_att23() const;
  inline void clear_att23();
  static const int kAtt23FieldNumber = 23;
  inline ::google::protobuf::int32 att23() const;
  inline void set_att23(::google::protobuf::int32 value);

  // required int32 att24 = 24;
  inline bool has_att24() const;
  inline void clear_att24();
  static const int kAtt24FieldNumber = 24;
  inline ::google::protobuf::int32 att24() const;
  inline void set_att24(::google::protobuf::int32 value);

  // required int32 att25 = 25;
  inline bool has_att25() const;
  inline void clear_att25();
  static const int kAtt25FieldNumber = 25;
  inline ::google::protobuf::int32 att25() const;
  inline void set_att25(::google::protobuf::int32 value);

  // required int32 att26 = 26;
  inline bool has_att26() const;
  inline void clear_att26();
  static const int kAtt26FieldNumber = 26;
  inline ::google::protobuf::int32 att26() const;
  inline void set_att26(::google::protobuf::int32 value);

  // required int32 att27 = 27;
  inline bool has_att27() const;
  inline void clear_att27();
  static const int kAtt27FieldNumber = 27;
  inline ::google::protobuf::int32 att27() const;
  inline void set_att27(::google::protobuf::int32 value);

  // required int32 att28 = 28;
  inline bool has_att28() const;
  inline void clear_att28();
  static const int kAtt28FieldNumber = 28;
  inline ::google::protobuf::int32 att28() const;
  inline void set_att28(::google::protobuf::int32 value);

  // required int32 att29 = 29;
  inline bool has_att29() const;
  inline void clear_att29();
  static const int kAtt29FieldNumber = 29;
  inline ::google::protobuf::int32 att29() const;
  inline void set_att29(::google::protobuf::int32 value);

  // required int32 att30 = 30;
  inline bool has_att30() const;
  inline void clear_att30();
  static const int kAtt30FieldNumber = 30;
  inline ::google::protobuf::int32 att30() const;
  inline void set_att30(::google::protobuf::int32 value);

  // required int32 att31 = 31;
  inline bool has_att31() const;
  inline void clear_att31();
  static const int kAtt31FieldNumber = 31;
  inline ::google::protobuf::int32 att31() const;
  inline void set_att31(::google::protobuf::int32 value);

  // required int32 att32 = 32;
  inline bool has_att32() const;
  inline void clear_att32();
  static const int kAtt32FieldNumber = 32;
  inline ::google::protobuf::int32 att32() const;
  inline void set_att32(::google::protobuf::int32 value);

  // required int32 att33 = 33;
  inline bool has_att33() const;
  inline void clear_att33();
  static const int kAtt33FieldNumber = 33;
  inline ::google::protobuf::int32 att33() const;
  inline void set_att33(::google::protobuf::int32 value);

  // required int32 att34 = 34;
  inline bool has_att34() const;
  inline void clear_att34();
  static const int kAtt34FieldNumber = 34;
  inline ::google::protobuf::int32 att34() const;
  inline void set_att34(::google::protobuf::int32 value);

  // required int32 att35 = 35;
  inline bool has_att35() const;
  inline void clear_att35();
  static const int kAtt35FieldNumber = 35;
  inline ::google::protobuf::int32 att35() const;
  inline void set_att35(::google::protobuf::int32 value);

  // required int32 att36 = 36;
  inline bool has_att36() const;
  inline void clear_att36();
  static const int kAtt36FieldNumber = 36;
  inline ::google::protobuf::int32 att36() const;
  inline void set_att36(::google::protobuf::int32 value);

  // required int32 att37 = 37;
  inline bool has_att37() const;
  inline void clear_att37();
  static const int kAtt37FieldNumber = 37;
  inline ::google::protobuf::int32 att37() const;
  inline void set_att37(::google::protobuf::int32 value);

  // required int32 att38 = 38;
  inline bool has_att38() const;
  inline void clear_att38();
  static const int kAtt38FieldNumber = 38;
  inline ::google::protobuf::int32 att38() const;
  inline void set_att38(::google::protobuf::int32 value);

  // required int32 att39 = 39;
  inline bool has_att39() const;
  inline void clear_att39();
  static const int kAtt39FieldNumber = 39;
  inline ::google::protobuf::int32 att39() const;
  inline void set_att39(::google::protobuf::int32 value);

  // required int32 att40 = 40;
  inline bool has_att40() const;
  inline void clear_att40();
  static const int kAtt40FieldNumber = 40;
  inline ::google::protobuf::int32 att40() const;
  inline void set_att40(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:performance.Performance.simplePerformance_40)
 private:
  inline void set_has_att1();
  inline void clear_has_att1();
  inline void set_has_att2();
  inline void clear_has_att2();
  inline void set_has_att3();
  inline void clear_has_att3();
  inline void set_has_att4();
  inline void clear_has_att4();
  inline void set_has_att5();
  inline void clear_has_att5();
  inline void set_has_att6();
  inline void clear_has_att6();
  inline void set_has_att7();
  inline void clear_has_att7();
  inline void set_has_att8();
  inline void clear_has_att8();
  inline void set_has_att9();
  inline void clear_has_att9();
  inline void set_has_att10();
  inline void clear_has_att10();
  inline void set_has_att11();
  inline void clear_has_att11();
  inline void set_has_att12();
  inline void clear_has_att12();
  inline void set_has_att13();
  inline void clear_has_att13();
  inline void set_has_att14();
  inline void clear_has_att14();
  inline void set_has_att15();
  inline void clear_has_att15();
  inline void set_has_att16();
  inline void clear_has_att16();
  inline void set_has_att17();
  inline void clear_has_att17();
  inline void set_has_att18();
  inline void clear_has_att18();
  inline void set_has_att19();
  inline void clear_has_att19();
  inline void set_has_att20();
  inline void clear_has_att20();
  inline void set_has_att21();
  inline void clear_has_att21();
  inline void set_has_att22();
  inline void clear_has_att22();
  inline void set_has_att23();
  inline void clear_has_att23();
  inline void set_has_att24();
  inline void clear_has_att24();
  inline void set_has_att25();
  inline void clear_has_att25();
  inline void set_has_att26();
  inline void clear_has_att26();
  inline void set_has_att27();
  inline void clear_has_att27();
  inline void set_has_att28();
  inline void clear_has_att28();
  inline void set_has_att29();
  inline void clear_has_att29();
  inline void set_has_att30();
  inline void clear_has_att30();
  inline void set_has_att31();
  inline void clear_has_att31();
  inline void set_has_att32();
  inline void clear_has_att32();
  inline void set_has_att33();
  inline void clear_has_att33();
  inline void set_has_att34();
  inline void clear_has_att34();
  inline void set_has_att35();
  inline void clear_has_att35();
  inline void set_has_att36();
  inline void clear_has_att36();
  inline void set_has_att37();
  inline void clear_has_att37();
  inline void set_has_att38();
  inline void clear_has_att38();
  inline void set_has_att39();
  inline void clear_has_att39();
  inline void set_has_att40();
  inline void clear_has_att40();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 att1_;
  ::google::protobuf::int32 att2_;
  ::google::protobuf::int32 att3_;
  ::google::protobuf::int32 att4_;
  ::google::protobuf::int32 att5_;
  ::google::protobuf::int32 att6_;
  ::google::protobuf::int32 att7_;
  ::google::protobuf::int32 att8_;
  ::google::protobuf::int32 att9_;
  ::google::protobuf::int32 att10_;
  ::google::protobuf::int32 att11_;
  ::google::protobuf::int32 att12_;
  ::google::protobuf::int32 att13_;
  ::google::protobuf::int32 att14_;
  ::google::protobuf::int32 att15_;
  ::google::protobuf::int32 att16_;
  ::google::protobuf::int32 att17_;
  ::google::protobuf::int32 att18_;
  ::google::protobuf::int32 att19_;
  ::google::protobuf::int32 att20_;
  ::google::protobuf::int32 att21_;
  ::google::protobuf::int32 att22_;
  ::google::protobuf::int32 att23_;
  ::google::protobuf::int32 att24_;
  ::google::protobuf::int32 att25_;
  ::google::protobuf::int32 att26_;
  ::google::protobuf::int32 att27_;
  ::google::protobuf::int32 att28_;
  ::google::protobuf::int32 att29_;
  ::google::protobuf::int32 att30_;
  ::google::protobuf::int32 att31_;
  ::google::protobuf::int32 att32_;
  ::google::protobuf::int32 att33_;
  ::google::protobuf::int32 att34_;
  ::google::protobuf::int32 att35_;
  ::google::protobuf::int32 att36_;
  ::google::protobuf::int32 att37_;
  ::google::protobuf::int32 att38_;
  ::google::protobuf::int32 att39_;
  ::google::protobuf::int32 att40_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(40 + 31) / 32];

  friend void  protobuf_AddDesc_PerformanceTest_2eproto();
  friend void protobuf_AssignDesc_PerformanceTest_2eproto();
  friend void protobuf_ShutdownFile_PerformanceTest_2eproto();

  void InitAsDefaultInstance();
  static Performance_simplePerformance_40* default_instance_;
};
// -------------------------------------------------------------------

class Performance_simplePerformance_50 : public ::google::protobuf::Message {
 public:
  Performance_simplePerformance_50();
  virtual ~Performance_simplePerformance_50();

  Performance_simplePerformance_50(const Performance_simplePerformance_50& from);

  inline Performance_simplePerformance_50& operator=(const Performance_simplePerformance_50& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Performance_simplePerformance_50& default_instance();

  void Swap(Performance_simplePerformance_50* other);

  // implements Message ----------------------------------------------

  Performance_simplePerformance_50* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Performance_simplePerformance_50& from);
  void MergeFrom(const Performance_simplePerformance_50& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 att1 = 1;
  inline bool has_att1() const;
  inline void clear_att1();
  static const int kAtt1FieldNumber = 1;
  inline ::google::protobuf::int32 att1() const;
  inline void set_att1(::google::protobuf::int32 value);

  // required int32 att2 = 2;
  inline bool has_att2() const;
  inline void clear_att2();
  static const int kAtt2FieldNumber = 2;
  inline ::google::protobuf::int32 att2() const;
  inline void set_att2(::google::protobuf::int32 value);

  // required int32 att3 = 3;
  inline bool has_att3() const;
  inline void clear_att3();
  static const int kAtt3FieldNumber = 3;
  inline ::google::protobuf::int32 att3() const;
  inline void set_att3(::google::protobuf::int32 value);

  // required int32 att4 = 4;
  inline bool has_att4() const;
  inline void clear_att4();
  static const int kAtt4FieldNumber = 4;
  inline ::google::protobuf::int32 att4() const;
  inline void set_att4(::google::protobuf::int32 value);

  // required int32 att5 = 5;
  inline bool has_att5() const;
  inline void clear_att5();
  static const int kAtt5FieldNumber = 5;
  inline ::google::protobuf::int32 att5() const;
  inline void set_att5(::google::protobuf::int32 value);

  // required int32 att6 = 6;
  inline bool has_att6() const;
  inline void clear_att6();
  static const int kAtt6FieldNumber = 6;
  inline ::google::protobuf::int32 att6() const;
  inline void set_att6(::google::protobuf::int32 value);

  // required int32 att7 = 7;
  inline bool has_att7() const;
  inline void clear_att7();
  static const int kAtt7FieldNumber = 7;
  inline ::google::protobuf::int32 att7() const;
  inline void set_att7(::google::protobuf::int32 value);

  // required int32 att8 = 8;
  inline bool has_att8() const;
  inline void clear_att8();
  static const int kAtt8FieldNumber = 8;
  inline ::google::protobuf::int32 att8() const;
  inline void set_att8(::google::protobuf::int32 value);

  // required int32 att9 = 9;
  inline bool has_att9() const;
  inline void clear_att9();
  static const int kAtt9FieldNumber = 9;
  inline ::google::protobuf::int32 att9() const;
  inline void set_att9(::google::protobuf::int32 value);

  // required int32 att10 = 10;
  inline bool has_att10() const;
  inline void clear_att10();
  static const int kAtt10FieldNumber = 10;
  inline ::google::protobuf::int32 att10() const;
  inline void set_att10(::google::protobuf::int32 value);

  // required int32 att11 = 11;
  inline bool has_att11() const;
  inline void clear_att11();
  static const int kAtt11FieldNumber = 11;
  inline ::google::protobuf::int32 att11() const;
  inline void set_att11(::google::protobuf::int32 value);

  // required int32 att12 = 12;
  inline bool has_att12() const;
  inline void clear_att12();
  static const int kAtt12FieldNumber = 12;
  inline ::google::protobuf::int32 att12() const;
  inline void set_att12(::google::protobuf::int32 value);

  // required int32 att13 = 13;
  inline bool has_att13() const;
  inline void clear_att13();
  static const int kAtt13FieldNumber = 13;
  inline ::google::protobuf::int32 att13() const;
  inline void set_att13(::google::protobuf::int32 value);

  // required int32 att14 = 14;
  inline bool has_att14() const;
  inline void clear_att14();
  static const int kAtt14FieldNumber = 14;
  inline ::google::protobuf::int32 att14() const;
  inline void set_att14(::google::protobuf::int32 value);

  // required int32 att15 = 15;
  inline bool has_att15() const;
  inline void clear_att15();
  static const int kAtt15FieldNumber = 15;
  inline ::google::protobuf::int32 att15() const;
  inline void set_att15(::google::protobuf::int32 value);

  // required int32 att16 = 16;
  inline bool has_att16() const;
  inline void clear_att16();
  static const int kAtt16FieldNumber = 16;
  inline ::google::protobuf::int32 att16() const;
  inline void set_att16(::google::protobuf::int32 value);

  // required int32 att17 = 17;
  inline bool has_att17() const;
  inline void clear_att17();
  static const int kAtt17FieldNumber = 17;
  inline ::google::protobuf::int32 att17() const;
  inline void set_att17(::google::protobuf::int32 value);

  // required int32 att18 = 18;
  inline bool has_att18() const;
  inline void clear_att18();
  static const int kAtt18FieldNumber = 18;
  inline ::google::protobuf::int32 att18() const;
  inline void set_att18(::google::protobuf::int32 value);

  // required int32 att19 = 19;
  inline bool has_att19() const;
  inline void clear_att19();
  static const int kAtt19FieldNumber = 19;
  inline ::google::protobuf::int32 att19() const;
  inline void set_att19(::google::protobuf::int32 value);

  // required int32 att20 = 20;
  inline bool has_att20() const;
  inline void clear_att20();
  static const int kAtt20FieldNumber = 20;
  inline ::google::protobuf::int32 att20() const;
  inline void set_att20(::google::protobuf::int32 value);

  // required int32 att21 = 21;
  inline bool has_att21() const;
  inline void clear_att21();
  static const int kAtt21FieldNumber = 21;
  inline ::google::protobuf::int32 att21() const;
  inline void set_att21(::google::protobuf::int32 value);

  // required int32 att22 = 22;
  inline bool has_att22() const;
  inline void clear_att22();
  static const int kAtt22FieldNumber = 22;
  inline ::google::protobuf::int32 att22() const;
  inline void set_att22(::google::protobuf::int32 value);

  // required int32 att23 = 23;
  inline bool has_att23() const;
  inline void clear_att23();
  static const int kAtt23FieldNumber = 23;
  inline ::google::protobuf::int32 att23() const;
  inline void set_att23(::google::protobuf::int32 value);

  // required int32 att24 = 24;
  inline bool has_att24() const;
  inline void clear_att24();
  static const int kAtt24FieldNumber = 24;
  inline ::google::protobuf::int32 att24() const;
  inline void set_att24(::google::protobuf::int32 value);

  // required int32 att25 = 25;
  inline bool has_att25() const;
  inline void clear_att25();
  static const int kAtt25FieldNumber = 25;
  inline ::google::protobuf::int32 att25() const;
  inline void set_att25(::google::protobuf::int32 value);

  // required int32 att26 = 26;
  inline bool has_att26() const;
  inline void clear_att26();
  static const int kAtt26FieldNumber = 26;
  inline ::google::protobuf::int32 att26() const;
  inline void set_att26(::google::protobuf::int32 value);

  // required int32 att27 = 27;
  inline bool has_att27() const;
  inline void clear_att27();
  static const int kAtt27FieldNumber = 27;
  inline ::google::protobuf::int32 att27() const;
  inline void set_att27(::google::protobuf::int32 value);

  // required int32 att28 = 28;
  inline bool has_att28() const;
  inline void clear_att28();
  static const int kAtt28FieldNumber = 28;
  inline ::google::protobuf::int32 att28() const;
  inline void set_att28(::google::protobuf::int32 value);

  // required int32 att29 = 29;
  inline bool has_att29() const;
  inline void clear_att29();
  static const int kAtt29FieldNumber = 29;
  inline ::google::protobuf::int32 att29() const;
  inline void set_att29(::google::protobuf::int32 value);

  // required int32 att30 = 30;
  inline bool has_att30() const;
  inline void clear_att30();
  static const int kAtt30FieldNumber = 30;
  inline ::google::protobuf::int32 att30() const;
  inline void set_att30(::google::protobuf::int32 value);

  // required int32 att31 = 31;
  inline bool has_att31() const;
  inline void clear_att31();
  static const int kAtt31FieldNumber = 31;
  inline ::google::protobuf::int32 att31() const;
  inline void set_att31(::google::protobuf::int32 value);

  // required int32 att32 = 32;
  inline bool has_att32() const;
  inline void clear_att32();
  static const int kAtt32FieldNumber = 32;
  inline ::google::protobuf::int32 att32() const;
  inline void set_att32(::google::protobuf::int32 value);

  // required int32 att33 = 33;
  inline bool has_att33() const;
  inline void clear_att33();
  static const int kAtt33FieldNumber = 33;
  inline ::google::protobuf::int32 att33() const;
  inline void set_att33(::google::protobuf::int32 value);

  // required int32 att34 = 34;
  inline bool has_att34() const;
  inline void clear_att34();
  static const int kAtt34FieldNumber = 34;
  inline ::google::protobuf::int32 att34() const;
  inline void set_att34(::google::protobuf::int32 value);

  // required int32 att35 = 35;
  inline bool has_att35() const;
  inline void clear_att35();
  static const int kAtt35FieldNumber = 35;
  inline ::google::protobuf::int32 att35() const;
  inline void set_att35(::google::protobuf::int32 value);

  // required int32 att36 = 36;
  inline bool has_att36() const;
  inline void clear_att36();
  static const int kAtt36FieldNumber = 36;
  inline ::google::protobuf::int32 att36() const;
  inline void set_att36(::google::protobuf::int32 value);

  // required int32 att37 = 37;
  inline bool has_att37() const;
  inline void clear_att37();
  static const int kAtt37FieldNumber = 37;
  inline ::google::protobuf::int32 att37() const;
  inline void set_att37(::google::protobuf::int32 value);

  // required int32 att38 = 38;
  inline bool has_att38() const;
  inline void clear_att38();
  static const int kAtt38FieldNumber = 38;
  inline ::google::protobuf::int32 att38() const;
  inline void set_att38(::google::protobuf::int32 value);

  // required int32 att39 = 39;
  inline bool has_att39() const;
  inline void clear_att39();
  static const int kAtt39FieldNumber = 39;
  inline ::google::protobuf::int32 att39() const;
  inline void set_att39(::google::protobuf::int32 value);

  // required int32 att40 = 40;
  inline bool has_att40() const;
  inline void clear_att40();
  static const int kAtt40FieldNumber = 40;
  inline ::google::protobuf::int32 att40() const;
  inline void set_att40(::google::protobuf::int32 value);

  // required int32 att41 = 41;
  inline bool has_att41() const;
  inline void clear_att41();
  static const int kAtt41FieldNumber = 41;
  inline ::google::protobuf::int32 att41() const;
  inline void set_att41(::google::protobuf::int32 value);

  // required int32 att42 = 42;
  inline bool has_att42() const;
  inline void clear_att42();
  static const int kAtt42FieldNumber = 42;
  inline ::google::protobuf::int32 att42() const;
  inline void set_att42(::google::protobuf::int32 value);

  // required int32 att43 = 43;
  inline bool has_att43() const;
  inline void clear_att43();
  static const int kAtt43FieldNumber = 43;
  inline ::google::protobuf::int32 att43() const;
  inline void set_att43(::google::protobuf::int32 value);

  // required int32 att44 = 44;
  inline bool has_att44() const;
  inline void clear_att44();
  static const int kAtt44FieldNumber = 44;
  inline ::google::protobuf::int32 att44() const;
  inline void set_att44(::google::protobuf::int32 value);

  // required int32 att45 = 45;
  inline bool has_att45() const;
  inline void clear_att45();
  static const int kAtt45FieldNumber = 45;
  inline ::google::protobuf::int32 att45() const;
  inline void set_att45(::google::protobuf::int32 value);

  // required int32 att46 = 46;
  inline bool has_att46() const;
  inline void clear_att46();
  static const int kAtt46FieldNumber = 46;
  inline ::google::protobuf::int32 att46() const;
  inline void set_att46(::google::protobuf::int32 value);

  // required int32 att47 = 47;
  inline bool has_att47() const;
  inline void clear_att47();
  static const int kAtt47FieldNumber = 47;
  inline ::google::protobuf::int32 att47() const;
  inline void set_att47(::google::protobuf::int32 value);

  // required int32 att48 = 48;
  inline bool has_att48() const;
  inline void clear_att48();
  static const int kAtt48FieldNumber = 48;
  inline ::google::protobuf::int32 att48() const;
  inline void set_att48(::google::protobuf::int32 value);

  // required int32 att49 = 49;
  inline bool has_att49() const;
  inline void clear_att49();
  static const int kAtt49FieldNumber = 49;
  inline ::google::protobuf::int32 att49() const;
  inline void set_att49(::google::protobuf::int32 value);

  // required int32 att50 = 50;
  inline bool has_att50() const;
  inline void clear_att50();
  static const int kAtt50FieldNumber = 50;
  inline ::google::protobuf::int32 att50() const;
  inline void set_att50(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:performance.Performance.simplePerformance_50)
 private:
  inline void set_has_att1();
  inline void clear_has_att1();
  inline void set_has_att2();
  inline void clear_has_att2();
  inline void set_has_att3();
  inline void clear_has_att3();
  inline void set_has_att4();
  inline void clear_has_att4();
  inline void set_has_att5();
  inline void clear_has_att5();
  inline void set_has_att6();
  inline void clear_has_att6();
  inline void set_has_att7();
  inline void clear_has_att7();
  inline void set_has_att8();
  inline void clear_has_att8();
  inline void set_has_att9();
  inline void clear_has_att9();
  inline void set_has_att10();
  inline void clear_has_att10();
  inline void set_has_att11();
  inline void clear_has_att11();
  inline void set_has_att12();
  inline void clear_has_att12();
  inline void set_has_att13();
  inline void clear_has_att13();
  inline void set_has_att14();
  inline void clear_has_att14();
  inline void set_has_att15();
  inline void clear_has_att15();
  inline void set_has_att16();
  inline void clear_has_att16();
  inline void set_has_att17();
  inline void clear_has_att17();
  inline void set_has_att18();
  inline void clear_has_att18();
  inline void set_has_att19();
  inline void clear_has_att19();
  inline void set_has_att20();
  inline void clear_has_att20();
  inline void set_has_att21();
  inline void clear_has_att21();
  inline void set_has_att22();
  inline void clear_has_att22();
  inline void set_has_att23();
  inline void clear_has_att23();
  inline void set_has_att24();
  inline void clear_has_att24();
  inline void set_has_att25();
  inline void clear_has_att25();
  inline void set_has_att26();
  inline void clear_has_att26();
  inline void set_has_att27();
  inline void clear_has_att27();
  inline void set_has_att28();
  inline void clear_has_att28();
  inline void set_has_att29();
  inline void clear_has_att29();
  inline void set_has_att30();
  inline void clear_has_att30();
  inline void set_has_att31();
  inline void clear_has_att31();
  inline void set_has_att32();
  inline void clear_has_att32();
  inline void set_has_att33();
  inline void clear_has_att33();
  inline void set_has_att34();
  inline void clear_has_att34();
  inline void set_has_att35();
  inline void clear_has_att35();
  inline void set_has_att36();
  inline void clear_has_att36();
  inline void set_has_att37();
  inline void clear_has_att37();
  inline void set_has_att38();
  inline void clear_has_att38();
  inline void set_has_att39();
  inline void clear_has_att39();
  inline void set_has_att40();
  inline void clear_has_att40();
  inline void set_has_att41();
  inline void clear_has_att41();
  inline void set_has_att42();
  inline void clear_has_att42();
  inline void set_has_att43();
  inline void clear_has_att43();
  inline void set_has_att44();
  inline void clear_has_att44();
  inline void set_has_att45();
  inline void clear_has_att45();
  inline void set_has_att46();
  inline void clear_has_att46();
  inline void set_has_att47();
  inline void clear_has_att47();
  inline void set_has_att48();
  inline void clear_has_att48();
  inline void set_has_att49();
  inline void clear_has_att49();
  inline void set_has_att50();
  inline void clear_has_att50();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 att1_;
  ::google::protobuf::int32 att2_;
  ::google::protobuf::int32 att3_;
  ::google::protobuf::int32 att4_;
  ::google::protobuf::int32 att5_;
  ::google::protobuf::int32 att6_;
  ::google::protobuf::int32 att7_;
  ::google::protobuf::int32 att8_;
  ::google::protobuf::int32 att9_;
  ::google::protobuf::int32 att10_;
  ::google::protobuf::int32 att11_;
  ::google::protobuf::int32 att12_;
  ::google::protobuf::int32 att13_;
  ::google::protobuf::int32 att14_;
  ::google::protobuf::int32 att15_;
  ::google::protobuf::int32 att16_;
  ::google::protobuf::int32 att17_;
  ::google::protobuf::int32 att18_;
  ::google::protobuf::int32 att19_;
  ::google::protobuf::int32 att20_;
  ::google::protobuf::int32 att21_;
  ::google::protobuf::int32 att22_;
  ::google::protobuf::int32 att23_;
  ::google::protobuf::int32 att24_;
  ::google::protobuf::int32 att25_;
  ::google::protobuf::int32 att26_;
  ::google::protobuf::int32 att27_;
  ::google::protobuf::int32 att28_;
  ::google::protobuf::int32 att29_;
  ::google::protobuf::int32 att30_;
  ::google::protobuf::int32 att31_;
  ::google::protobuf::int32 att32_;
  ::google::protobuf::int32 att33_;
  ::google::protobuf::int32 att34_;
  ::google::protobuf::int32 att35_;
  ::google::protobuf::int32 att36_;
  ::google::protobuf::int32 att37_;
  ::google::protobuf::int32 att38_;
  ::google::protobuf::int32 att39_;
  ::google::protobuf::int32 att40_;
  ::google::protobuf::int32 att41_;
  ::google::protobuf::int32 att42_;
  ::google::protobuf::int32 att43_;
  ::google::protobuf::int32 att44_;
  ::google::protobuf::int32 att45_;
  ::google::protobuf::int32 att46_;
  ::google::protobuf::int32 att47_;
  ::google::protobuf::int32 att48_;
  ::google::protobuf::int32 att49_;
  ::google::protobuf::int32 att50_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(50 + 31) / 32];

  friend void  protobuf_AddDesc_PerformanceTest_2eproto();
  friend void protobuf_AssignDesc_PerformanceTest_2eproto();
  friend void protobuf_ShutdownFile_PerformanceTest_2eproto();

  void InitAsDefaultInstance();
  static Performance_simplePerformance_50* default_instance_;
};
// -------------------------------------------------------------------

class Performance_complexPerformance_2 : public ::google::protobuf::Message {
 public:
  Performance_complexPerformance_2();
  virtual ~Performance_complexPerformance_2();

  Performance_complexPerformance_2(const Performance_complexPerformance_2& from);

  inline Performance_complexPerformance_2& operator=(const Performance_complexPerformance_2& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Performance_complexPerformance_2& default_instance();

  void Swap(Performance_complexPerformance_2* other);

  // implements Message ----------------------------------------------

  Performance_complexPerformance_2* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Performance_complexPerformance_2& from);
  void MergeFrom(const Performance_complexPerformance_2& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 att1 = 1;
  inline bool has_att1() const;
  inline void clear_att1();
  static const int kAtt1FieldNumber = 1;
  inline ::google::protobuf::int32 att1() const;
  inline void set_att1(::google::protobuf::int32 value);

  // required int32 att2 = 2;
  inline bool has_att2() const;
  inline void clear_att2();
  static const int kAtt2FieldNumber = 2;
  inline ::google::protobuf::int32 att2() const;
  inline void set_att2(::google::protobuf::int32 value);

  // required int64 att3 = 3;
  inline bool has_att3() const;
  inline void clear_att3();
  static const int kAtt3FieldNumber = 3;
  inline ::google::protobuf::int64 att3() const;
  inline void set_att3(::google::protobuf::int64 value);

  // required int64 att4 = 4;
  inline bool has_att4() const;
  inline void clear_att4();
  static const int kAtt4FieldNumber = 4;
  inline ::google::protobuf::int64 att4() const;
  inline void set_att4(::google::protobuf::int64 value);

  // required string att5 = 5;
  inline bool has_att5() const;
  inline void clear_att5();
  static const int kAtt5FieldNumber = 5;
  inline const ::std::string& att5() const;
  inline void set_att5(const ::std::string& value);
  inline void set_att5(const char* value);
  inline void set_att5(const char* value, size_t size);
  inline ::std::string* mutable_att5();
  inline ::std::string* release_att5();
  inline void set_allocated_att5(::std::string* att5);

  // required string att6 = 6;
  inline bool has_att6() const;
  inline void clear_att6();
  static const int kAtt6FieldNumber = 6;
  inline const ::std::string& att6() const;
  inline void set_att6(const ::std::string& value);
  inline void set_att6(const char* value);
  inline void set_att6(const char* value, size_t size);
  inline ::std::string* mutable_att6();
  inline ::std::string* release_att6();
  inline void set_allocated_att6(::std::string* att6);

  // required float att7 = 7;
  inline bool has_att7() const;
  inline void clear_att7();
  static const int kAtt7FieldNumber = 7;
  inline float att7() const;
  inline void set_att7(float value);

  // required float att8 = 8;
  inline bool has_att8() const;
  inline void clear_att8();
  static const int kAtt8FieldNumber = 8;
  inline float att8() const;
  inline void set_att8(float value);

  // required double att9 = 9;
  inline bool has_att9() const;
  inline void clear_att9();
  static const int kAtt9FieldNumber = 9;
  inline double att9() const;
  inline void set_att9(double value);

  // required double att10 = 10;
  inline bool has_att10() const;
  inline void clear_att10();
  static const int kAtt10FieldNumber = 10;
  inline double att10() const;
  inline void set_att10(double value);

  // required bool att11 = 11;
  inline bool has_att11() const;
  inline void clear_att11();
  static const int kAtt11FieldNumber = 11;
  inline bool att11() const;
  inline void set_att11(bool value);

  // required bool att12 = 12;
  inline bool has_att12() const;
  inline void clear_att12();
  static const int kAtt12FieldNumber = 12;
  inline bool att12() const;
  inline void set_att12(bool value);

  // @@protoc_insertion_point(class_scope:performance.Performance.complexPerformance_2)
 private:
  inline void set_has_att1();
  inline void clear_has_att1();
  inline void set_has_att2();
  inline void clear_has_att2();
  inline void set_has_att3();
  inline void clear_has_att3();
  inline void set_has_att4();
  inline void clear_has_att4();
  inline void set_has_att5();
  inline void clear_has_att5();
  inline void set_has_att6();
  inline void clear_has_att6();
  inline void set_has_att7();
  inline void clear_has_att7();
  inline void set_has_att8();
  inline void clear_has_att8();
  inline void set_has_att9();
  inline void clear_has_att9();
  inline void set_has_att10();
  inline void clear_has_att10();
  inline void set_has_att11();
  inline void clear_has_att11();
  inline void set_has_att12();
  inline void clear_has_att12();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 att1_;
  ::google::protobuf::int32 att2_;
  ::google::protobuf::int64 att3_;
  ::google::protobuf::int64 att4_;
  ::std::string* att5_;
  ::std::string* att6_;
  float att7_;
  float att8_;
  double att9_;
  double att10_;
  bool att11_;
  bool att12_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];

  friend void  protobuf_AddDesc_PerformanceTest_2eproto();
  friend void protobuf_AssignDesc_PerformanceTest_2eproto();
  friend void protobuf_ShutdownFile_PerformanceTest_2eproto();

  void InitAsDefaultInstance();
  static Performance_complexPerformance_2* default_instance_;
};
// -------------------------------------------------------------------

class Performance_complexPerformance_4 : public ::google::protobuf::Message {
 public:
  Performance_complexPerformance_4();
  virtual ~Performance_complexPerformance_4();

  Performance_complexPerformance_4(const Performance_complexPerformance_4& from);

  inline Performance_complexPerformance_4& operator=(const Performance_complexPerformance_4& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Performance_complexPerformance_4& default_instance();

  void Swap(Performance_complexPerformance_4* other);

  // implements Message ----------------------------------------------

  Performance_complexPerformance_4* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Performance_complexPerformance_4& from);
  void MergeFrom(const Performance_complexPerformance_4& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 att1 = 1;
  inline bool has_att1() const;
  inline void clear_att1();
  static const int kAtt1FieldNumber = 1;
  inline ::google::protobuf::int32 att1() const;
  inline void set_att1(::google::protobuf::int32 value);

  // required int32 att2 = 2;
  inline bool has_att2() const;
  inline void clear_att2();
  static const int kAtt2FieldNumber = 2;
  inline ::google::protobuf::int32 att2() const;
  inline void set_att2(::google::protobuf::int32 value);

  // required int32 att3 = 3;
  inline bool has_att3() const;
  inline void clear_att3();
  static const int kAtt3FieldNumber = 3;
  inline ::google::protobuf::int32 att3() const;
  inline void set_att3(::google::protobuf::int32 value);

  // required int32 att4 = 4;
  inline bool has_att4() const;
  inline void clear_att4();
  static const int kAtt4FieldNumber = 4;
  inline ::google::protobuf::int32 att4() const;
  inline void set_att4(::google::protobuf::int32 value);

  // required int64 att5 = 5;
  inline bool has_att5() const;
  inline void clear_att5();
  static const int kAtt5FieldNumber = 5;
  inline ::google::protobuf::int64 att5() const;
  inline void set_att5(::google::protobuf::int64 value);

  // required int64 att6 = 6;
  inline bool has_att6() const;
  inline void clear_att6();
  static const int kAtt6FieldNumber = 6;
  inline ::google::protobuf::int64 att6() const;
  inline void set_att6(::google::protobuf::int64 value);

  // required int64 att7 = 7;
  inline bool has_att7() const;
  inline void clear_att7();
  static const int kAtt7FieldNumber = 7;
  inline ::google::protobuf::int64 att7() const;
  inline void set_att7(::google::protobuf::int64 value);

  // required int64 att8 = 8;
  inline bool has_att8() const;
  inline void clear_att8();
  static const int kAtt8FieldNumber = 8;
  inline ::google::protobuf::int64 att8() const;
  inline void set_att8(::google::protobuf::int64 value);

  // required string att9 = 9;
  inline bool has_att9() const;
  inline void clear_att9();
  static const int kAtt9FieldNumber = 9;
  inline const ::std::string& att9() const;
  inline void set_att9(const ::std::string& value);
  inline void set_att9(const char* value);
  inline void set_att9(const char* value, size_t size);
  inline ::std::string* mutable_att9();
  inline ::std::string* release_att9();
  inline void set_allocated_att9(::std::string* att9);

  // required string att10 = 10;
  inline bool has_att10() const;
  inline void clear_att10();
  static const int kAtt10FieldNumber = 10;
  inline const ::std::string& att10() const;
  inline void set_att10(const ::std::string& value);
  inline void set_att10(const char* value);
  inline void set_att10(const char* value, size_t size);
  inline ::std::string* mutable_att10();
  inline ::std::string* release_att10();
  inline void set_allocated_att10(::std::string* att10);

  // required string att11 = 11;
  inline bool has_att11() const;
  inline void clear_att11();
  static const int kAtt11FieldNumber = 11;
  inline const ::std::string& att11() const;
  inline void set_att11(const ::std::string& value);
  inline void set_att11(const char* value);
  inline void set_att11(const char* value, size_t size);
  inline ::std::string* mutable_att11();
  inline ::std::string* release_att11();
  inline void set_allocated_att11(::std::string* att11);

  // required string att12 = 12;
  inline bool has_att12() const;
  inline void clear_att12();
  static const int kAtt12FieldNumber = 12;
  inline const ::std::string& att12() const;
  inline void set_att12(const ::std::string& value);
  inline void set_att12(const char* value);
  inline void set_att12(const char* value, size_t size);
  inline ::std::string* mutable_att12();
  inline ::std::string* release_att12();
  inline void set_allocated_att12(::std::string* att12);

  // required float att13 = 13;
  inline bool has_att13() const;
  inline void clear_att13();
  static const int kAtt13FieldNumber = 13;
  inline float att13() const;
  inline void set_att13(float value);

  // required float att14 = 14;
  inline bool has_att14() const;
  inline void clear_att14();
  static const int kAtt14FieldNumber = 14;
  inline float att14() const;
  inline void set_att14(float value);

  // required float att15 = 15;
  inline bool has_att15() const;
  inline void clear_att15();
  static const int kAtt15FieldNumber = 15;
  inline float att15() const;
  inline void set_att15(float value);

  // required float att16 = 16;
  inline bool has_att16() const;
  inline void clear_att16();
  static const int kAtt16FieldNumber = 16;
  inline float att16() const;
  inline void set_att16(float value);

  // required double att17 = 17;
  inline bool has_att17() const;
  inline void clear_att17();
  static const int kAtt17FieldNumber = 17;
  inline double att17() const;
  inline void set_att17(double value);

  // required double att18 = 18;
  inline bool has_att18() const;
  inline void clear_att18();
  static const int kAtt18FieldNumber = 18;
  inline double att18() const;
  inline void set_att18(double value);

  // required double att19 = 19;
  inline bool has_att19() const;
  inline void clear_att19();
  static const int kAtt19FieldNumber = 19;
  inline double att19() const;
  inline void set_att19(double value);

  // required double att20 = 20;
  inline bool has_att20() const;
  inline void clear_att20();
  static const int kAtt20FieldNumber = 20;
  inline double att20() const;
  inline void set_att20(double value);

  // required bool att21 = 21;
  inline bool has_att21() const;
  inline void clear_att21();
  static const int kAtt21FieldNumber = 21;
  inline bool att21() const;
  inline void set_att21(bool value);

  // required bool att22 = 22;
  inline bool has_att22() const;
  inline void clear_att22();
  static const int kAtt22FieldNumber = 22;
  inline bool att22() const;
  inline void set_att22(bool value);

  // required bool att23 = 23;
  inline bool has_att23() const;
  inline void clear_att23();
  static const int kAtt23FieldNumber = 23;
  inline bool att23() const;
  inline void set_att23(bool value);

  // required bool att24 = 24;
  inline bool has_att24() const;
  inline void clear_att24();
  static const int kAtt24FieldNumber = 24;
  inline bool att24() const;
  inline void set_att24(bool value);

  // @@protoc_insertion_point(class_scope:performance.Performance.complexPerformance_4)
 private:
  inline void set_has_att1();
  inline void clear_has_att1();
  inline void set_has_att2();
  inline void clear_has_att2();
  inline void set_has_att3();
  inline void clear_has_att3();
  inline void set_has_att4();
  inline void clear_has_att4();
  inline void set_has_att5();
  inline void clear_has_att5();
  inline void set_has_att6();
  inline void clear_has_att6();
  inline void set_has_att7();
  inline void clear_has_att7();
  inline void set_has_att8();
  inline void clear_has_att8();
  inline void set_has_att9();
  inline void clear_has_att9();
  inline void set_has_att10();
  inline void clear_has_att10();
  inline void set_has_att11();
  inline void clear_has_att11();
  inline void set_has_att12();
  inline void clear_has_att12();
  inline void set_has_att13();
  inline void clear_has_att13();
  inline void set_has_att14();
  inline void clear_has_att14();
  inline void set_has_att15();
  inline void clear_has_att15();
  inline void set_has_att16();
  inline void clear_has_att16();
  inline void set_has_att17();
  inline void clear_has_att17();
  inline void set_has_att18();
  inline void clear_has_att18();
  inline void set_has_att19();
  inline void clear_has_att19();
  inline void set_has_att20();
  inline void clear_has_att20();
  inline void set_has_att21();
  inline void clear_has_att21();
  inline void set_has_att22();
  inline void clear_has_att22();
  inline void set_has_att23();
  inline void clear_has_att23();
  inline void set_has_att24();
  inline void clear_has_att24();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 att1_;
  ::google::protobuf::int32 att2_;
  ::google::protobuf::int32 att3_;
  ::google::protobuf::int32 att4_;
  ::google::protobuf::int64 att5_;
  ::google::protobuf::int64 att6_;
  ::google::protobuf::int64 att7_;
  ::google::protobuf::int64 att8_;
  ::std::string* att9_;
  ::std::string* att10_;
  ::std::string* att11_;
  ::std::string* att12_;
  float att13_;
  float att14_;
  float att15_;
  float att16_;
  double att17_;
  double att18_;
  double att19_;
  double att20_;
  bool att21_;
  bool att22_;
  bool att23_;
  bool att24_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(24 + 31) / 32];

  friend void  protobuf_AddDesc_PerformanceTest_2eproto();
  friend void protobuf_AssignDesc_PerformanceTest_2eproto();
  friend void protobuf_ShutdownFile_PerformanceTest_2eproto();

  void InitAsDefaultInstance();
  static Performance_complexPerformance_4* default_instance_;
};
// -------------------------------------------------------------------

class Performance_complexPerformance_6 : public ::google::protobuf::Message {
 public:
  Performance_complexPerformance_6();
  virtual ~Performance_complexPerformance_6();

  Performance_complexPerformance_6(const Performance_complexPerformance_6& from);

  inline Performance_complexPerformance_6& operator=(const Performance_complexPerformance_6& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Performance_complexPerformance_6& default_instance();

  void Swap(Performance_complexPerformance_6* other);

  // implements Message ----------------------------------------------

  Performance_complexPerformance_6* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Performance_complexPerformance_6& from);
  void MergeFrom(const Performance_complexPerformance_6& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 att1 = 1;
  inline bool has_att1() const;
  inline void clear_att1();
  static const int kAtt1FieldNumber = 1;
  inline ::google::protobuf::int32 att1() const;
  inline void set_att1(::google::protobuf::int32 value);

  // required int32 att2 = 2;
  inline bool has_att2() const;
  inline void clear_att2();
  static const int kAtt2FieldNumber = 2;
  inline ::google::protobuf::int32 att2() const;
  inline void set_att2(::google::protobuf::int32 value);

  // required int32 att3 = 3;
  inline bool has_att3() const;
  inline void clear_att3();
  static const int kAtt3FieldNumber = 3;
  inline ::google::protobuf::int32 att3() const;
  inline void set_att3(::google::protobuf::int32 value);

  // required int32 att4 = 4;
  inline bool has_att4() const;
  inline void clear_att4();
  static const int kAtt4FieldNumber = 4;
  inline ::google::protobuf::int32 att4() const;
  inline void set_att4(::google::protobuf::int32 value);

  // required int32 att5 = 5;
  inline bool has_att5() const;
  inline void clear_att5();
  static const int kAtt5FieldNumber = 5;
  inline ::google::protobuf::int32 att5() const;
  inline void set_att5(::google::protobuf::int32 value);

  // required int32 att6 = 6;
  inline bool has_att6() const;
  inline void clear_att6();
  static const int kAtt6FieldNumber = 6;
  inline ::google::protobuf::int32 att6() const;
  inline void set_att6(::google::protobuf::int32 value);

  // required int64 att7 = 7;
  inline bool has_att7() const;
  inline void clear_att7();
  static const int kAtt7FieldNumber = 7;
  inline ::google::protobuf::int64 att7() const;
  inline void set_att7(::google::protobuf::int64 value);

  // required int64 att8 = 8;
  inline bool has_att8() const;
  inline void clear_att8();
  static const int kAtt8FieldNumber = 8;
  inline ::google::protobuf::int64 att8() const;
  inline void set_att8(::google::protobuf::int64 value);

  // required int64 att9 = 9;
  inline bool has_att9() const;
  inline void clear_att9();
  static const int kAtt9FieldNumber = 9;
  inline ::google::protobuf::int64 att9() const;
  inline void set_att9(::google::protobuf::int64 value);

  // required int64 att10 = 10;
  inline bool has_att10() const;
  inline void clear_att10();
  static const int kAtt10FieldNumber = 10;
  inline ::google::protobuf::int64 att10() const;
  inline void set_att10(::google::protobuf::int64 value);

  // required int64 att11 = 11;
  inline bool has_att11() const;
  inline void clear_att11();
  static const int kAtt11FieldNumber = 11;
  inline ::google::protobuf::int64 att11() const;
  inline void set_att11(::google::protobuf::int64 value);

  // required int64 att12 = 12;
  inline bool has_att12() const;
  inline void clear_att12();
  static const int kAtt12FieldNumber = 12;
  inline ::google::protobuf::int64 att12() const;
  inline void set_att12(::google::protobuf::int64 value);

  // required string att13 = 13;
  inline bool has_att13() const;
  inline void clear_att13();
  static const int kAtt13FieldNumber = 13;
  inline const ::std::string& att13() const;
  inline void set_att13(const ::std::string& value);
  inline void set_att13(const char* value);
  inline void set_att13(const char* value, size_t size);
  inline ::std::string* mutable_att13();
  inline ::std::string* release_att13();
  inline void set_allocated_att13(::std::string* att13);

  // required string att14 = 14;
  inline bool has_att14() const;
  inline void clear_att14();
  static const int kAtt14FieldNumber = 14;
  inline const ::std::string& att14() const;
  inline void set_att14(const ::std::string& value);
  inline void set_att14(const char* value);
  inline void set_att14(const char* value, size_t size);
  inline ::std::string* mutable_att14();
  inline ::std::string* release_att14();
  inline void set_allocated_att14(::std::string* att14);

  // required string att15 = 15;
  inline bool has_att15() const;
  inline void clear_att15();
  static const int kAtt15FieldNumber = 15;
  inline const ::std::string& att15() const;
  inline void set_att15(const ::std::string& value);
  inline void set_att15(const char* value);
  inline void set_att15(const char* value, size_t size);
  inline ::std::string* mutable_att15();
  inline ::std::string* release_att15();
  inline void set_allocated_att15(::std::string* att15);

  // required string att16 = 16;
  inline bool has_att16() const;
  inline void clear_att16();
  static const int kAtt16FieldNumber = 16;
  inline const ::std::string& att16() const;
  inline void set_att16(const ::std::string& value);
  inline void set_att16(const char* value);
  inline void set_att16(const char* value, size_t size);
  inline ::std::string* mutable_att16();
  inline ::std::string* release_att16();
  inline void set_allocated_att16(::std::string* att16);

  // required string att17 = 17;
  inline bool has_att17() const;
  inline void clear_att17();
  static const int kAtt17FieldNumber = 17;
  inline const ::std::string& att17() const;
  inline void set_att17(const ::std::string& value);
  inline void set_att17(const char* value);
  inline void set_att17(const char* value, size_t size);
  inline ::std::string* mutable_att17();
  inline ::std::string* release_att17();
  inline void set_allocated_att17(::std::string* att17);

  // required string att18 = 18;
  inline bool has_att18() const;
  inline void clear_att18();
  static const int kAtt18FieldNumber = 18;
  inline const ::std::string& att18() const;
  inline void set_att18(const ::std::string& value);
  inline void set_att18(const char* value);
  inline void set_att18(const char* value, size_t size);
  inline ::std::string* mutable_att18();
  inline ::std::string* release_att18();
  inline void set_allocated_att18(::std::string* att18);

  // required float att19 = 19;
  inline bool has_att19() const;
  inline void clear_att19();
  static const int kAtt19FieldNumber = 19;
  inline float att19() const;
  inline void set_att19(float value);

  // required float att20 = 20;
  inline bool has_att20() const;
  inline void clear_att20();
  static const int kAtt20FieldNumber = 20;
  inline float att20() const;
  inline void set_att20(float value);

  // required float att21 = 21;
  inline bool has_att21() const;
  inline void clear_att21();
  static const int kAtt21FieldNumber = 21;
  inline float att21() const;
  inline void set_att21(float value);

  // required float att22 = 22;
  inline bool has_att22() const;
  inline void clear_att22();
  static const int kAtt22FieldNumber = 22;
  inline float att22() const;
  inline void set_att22(float value);

  // required float att23 = 23;
  inline bool has_att23() const;
  inline void clear_att23();
  static const int kAtt23FieldNumber = 23;
  inline float att23() const;
  inline void set_att23(float value);

  // required float att24 = 24;
  inline bool has_att24() const;
  inline void clear_att24();
  static const int kAtt24FieldNumber = 24;
  inline float att24() const;
  inline void set_att24(float value);

  // required double att25 = 25;
  inline bool has_att25() const;
  inline void clear_att25();
  static const int kAtt25FieldNumber = 25;
  inline double att25() const;
  inline void set_att25(double value);

  // required double att26 = 26;
  inline bool has_att26() const;
  inline void clear_att26();
  static const int kAtt26FieldNumber = 26;
  inline double att26() const;
  inline void set_att26(double value);

  // required double att27 = 27;
  inline bool has_att27() const;
  inline void clear_att27();
  static const int kAtt27FieldNumber = 27;
  inline double att27() const;
  inline void set_att27(double value);

  // required double att28 = 28;
  inline bool has_att28() const;
  inline void clear_att28();
  static const int kAtt28FieldNumber = 28;
  inline double att28() const;
  inline void set_att28(double value);

  // required double att29 = 29;
  inline bool has_att29() const;
  inline void clear_att29();
  static const int kAtt29FieldNumber = 29;
  inline double att29() const;
  inline void set_att29(double value);

  // required double att30 = 30;
  inline bool has_att30() const;
  inline void clear_att30();
  static const int kAtt30FieldNumber = 30;
  inline double att30() const;
  inline void set_att30(double value);

  // required bool att31 = 31;
  inline bool has_att31() const;
  inline void clear_att31();
  static const int kAtt31FieldNumber = 31;
  inline bool att31() const;
  inline void set_att31(bool value);

  // required bool att32 = 32;
  inline bool has_att32() const;
  inline void clear_att32();
  static const int kAtt32FieldNumber = 32;
  inline bool att32() const;
  inline void set_att32(bool value);

  // required bool att33 = 33;
  inline bool has_att33() const;
  inline void clear_att33();
  static const int kAtt33FieldNumber = 33;
  inline bool att33() const;
  inline void set_att33(bool value);

  // required bool att34 = 34;
  inline bool has_att34() const;
  inline void clear_att34();
  static const int kAtt34FieldNumber = 34;
  inline bool att34() const;
  inline void set_att34(bool value);

  // required bool att35 = 35;
  inline bool has_att35() const;
  inline void clear_att35();
  static const int kAtt35FieldNumber = 35;
  inline bool att35() const;
  inline void set_att35(bool value);

  // required bool att36 = 36;
  inline bool has_att36() const;
  inline void clear_att36();
  static const int kAtt36FieldNumber = 36;
  inline bool att36() const;
  inline void set_att36(bool value);

  // @@protoc_insertion_point(class_scope:performance.Performance.complexPerformance_6)
 private:
  inline void set_has_att1();
  inline void clear_has_att1();
  inline void set_has_att2();
  inline void clear_has_att2();
  inline void set_has_att3();
  inline void clear_has_att3();
  inline void set_has_att4();
  inline void clear_has_att4();
  inline void set_has_att5();
  inline void clear_has_att5();
  inline void set_has_att6();
  inline void clear_has_att6();
  inline void set_has_att7();
  inline void clear_has_att7();
  inline void set_has_att8();
  inline void clear_has_att8();
  inline void set_has_att9();
  inline void clear_has_att9();
  inline void set_has_att10();
  inline void clear_has_att10();
  inline void set_has_att11();
  inline void clear_has_att11();
  inline void set_has_att12();
  inline void clear_has_att12();
  inline void set_has_att13();
  inline void clear_has_att13();
  inline void set_has_att14();
  inline void clear_has_att14();
  inline void set_has_att15();
  inline void clear_has_att15();
  inline void set_has_att16();
  inline void clear_has_att16();
  inline void set_has_att17();
  inline void clear_has_att17();
  inline void set_has_att18();
  inline void clear_has_att18();
  inline void set_has_att19();
  inline void clear_has_att19();
  inline void set_has_att20();
  inline void clear_has_att20();
  inline void set_has_att21();
  inline void clear_has_att21();
  inline void set_has_att22();
  inline void clear_has_att22();
  inline void set_has_att23();
  inline void clear_has_att23();
  inline void set_has_att24();
  inline void clear_has_att24();
  inline void set_has_att25();
  inline void clear_has_att25();
  inline void set_has_att26();
  inline void clear_has_att26();
  inline void set_has_att27();
  inline void clear_has_att27();
  inline void set_has_att28();
  inline void clear_has_att28();
  inline void set_has_att29();
  inline void clear_has_att29();
  inline void set_has_att30();
  inline void clear_has_att30();
  inline void set_has_att31();
  inline void clear_has_att31();
  inline void set_has_att32();
  inline void clear_has_att32();
  inline void set_has_att33();
  inline void clear_has_att33();
  inline void set_has_att34();
  inline void clear_has_att34();
  inline void set_has_att35();
  inline void clear_has_att35();
  inline void set_has_att36();
  inline void clear_has_att36();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 att1_;
  ::google::protobuf::int32 att2_;
  ::google::protobuf::int32 att3_;
  ::google::protobuf::int32 att4_;
  ::google::protobuf::int32 att5_;
  ::google::protobuf::int32 att6_;
  ::google::protobuf::int64 att7_;
  ::google::protobuf::int64 att8_;
  ::google::protobuf::int64 att9_;
  ::google::protobuf::int64 att10_;
  ::google::protobuf::int64 att11_;
  ::google::protobuf::int64 att12_;
  ::std::string* att13_;
  ::std::string* att14_;
  ::std::string* att15_;
  ::std::string* att16_;
  ::std::string* att17_;
  ::std::string* att18_;
  float att19_;
  float att20_;
  float att21_;
  float att22_;
  float att23_;
  float att24_;
  double att25_;
  double att26_;
  double att27_;
  double att28_;
  double att29_;
  double att30_;
  bool att31_;
  bool att32_;
  bool att33_;
  bool att34_;
  bool att35_;
  bool att36_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(36 + 31) / 32];

  friend void  protobuf_AddDesc_PerformanceTest_2eproto();
  friend void protobuf_AssignDesc_PerformanceTest_2eproto();
  friend void protobuf_ShutdownFile_PerformanceTest_2eproto();

  void InitAsDefaultInstance();
  static Performance_complexPerformance_6* default_instance_;
};
// -------------------------------------------------------------------

class Performance_complexPerformance_8 : public ::google::protobuf::Message {
 public:
  Performance_complexPerformance_8();
  virtual ~Performance_complexPerformance_8();

  Performance_complexPerformance_8(const Performance_complexPerformance_8& from);

  inline Performance_complexPerformance_8& operator=(const Performance_complexPerformance_8& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Performance_complexPerformance_8& default_instance();

  void Swap(Performance_complexPerformance_8* other);

  // implements Message ----------------------------------------------

  Performance_complexPerformance_8* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Performance_complexPerformance_8& from);
  void MergeFrom(const Performance_complexPerformance_8& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 att1 = 1;
  inline bool has_att1() const;
  inline void clear_att1();
  static const int kAtt1FieldNumber = 1;
  inline ::google::protobuf::int32 att1() const;
  inline void set_att1(::google::protobuf::int32 value);

  // required int32 att2 = 2;
  inline bool has_att2() const;
  inline void clear_att2();
  static const int kAtt2FieldNumber = 2;
  inline ::google::protobuf::int32 att2() const;
  inline void set_att2(::google::protobuf::int32 value);

  // required int32 att3 = 3;
  inline bool has_att3() const;
  inline void clear_att3();
  static const int kAtt3FieldNumber = 3;
  inline ::google::protobuf::int32 att3() const;
  inline void set_att3(::google::protobuf::int32 value);

  // required int32 att4 = 4;
  inline bool has_att4() const;
  inline void clear_att4();
  static const int kAtt4FieldNumber = 4;
  inline ::google::protobuf::int32 att4() const;
  inline void set_att4(::google::protobuf::int32 value);

  // required int32 att5 = 5;
  inline bool has_att5() const;
  inline void clear_att5();
  static const int kAtt5FieldNumber = 5;
  inline ::google::protobuf::int32 att5() const;
  inline void set_att5(::google::protobuf::int32 value);

  // required int32 att6 = 6;
  inline bool has_att6() const;
  inline void clear_att6();
  static const int kAtt6FieldNumber = 6;
  inline ::google::protobuf::int32 att6() const;
  inline void set_att6(::google::protobuf::int32 value);

  // required int32 att7 = 7;
  inline bool has_att7() const;
  inline void clear_att7();
  static const int kAtt7FieldNumber = 7;
  inline ::google::protobuf::int32 att7() const;
  inline void set_att7(::google::protobuf::int32 value);

  // required int32 att8 = 8;
  inline bool has_att8() const;
  inline void clear_att8();
  static const int kAtt8FieldNumber = 8;
  inline ::google::protobuf::int32 att8() const;
  inline void set_att8(::google::protobuf::int32 value);

  // required int64 att9 = 9;
  inline bool has_att9() const;
  inline void clear_att9();
  static const int kAtt9FieldNumber = 9;
  inline ::google::protobuf::int64 att9() const;
  inline void set_att9(::google::protobuf::int64 value);

  // required int64 att10 = 10;
  inline bool has_att10() const;
  inline void clear_att10();
  static const int kAtt10FieldNumber = 10;
  inline ::google::protobuf::int64 att10() const;
  inline void set_att10(::google::protobuf::int64 value);

  // required int64 att11 = 11;
  inline bool has_att11() const;
  inline void clear_att11();
  static const int kAtt11FieldNumber = 11;
  inline ::google::protobuf::int64 att11() const;
  inline void set_att11(::google::protobuf::int64 value);

  // required int64 att12 = 12;
  inline bool has_att12() const;
  inline void clear_att12();
  static const int kAtt12FieldNumber = 12;
  inline ::google::protobuf::int64 att12() const;
  inline void set_att12(::google::protobuf::int64 value);

  // required int64 att13 = 13;
  inline bool has_att13() const;
  inline void clear_att13();
  static const int kAtt13FieldNumber = 13;
  inline ::google::protobuf::int64 att13() const;
  inline void set_att13(::google::protobuf::int64 value);

  // required int64 att14 = 14;
  inline bool has_att14() const;
  inline void clear_att14();
  static const int kAtt14FieldNumber = 14;
  inline ::google::protobuf::int64 att14() const;
  inline void set_att14(::google::protobuf::int64 value);

  // required int64 att15 = 15;
  inline bool has_att15() const;
  inline void clear_att15();
  static const int kAtt15FieldNumber = 15;
  inline ::google::protobuf::int64 att15() const;
  inline void set_att15(::google::protobuf::int64 value);

  // required int64 att16 = 16;
  inline bool has_att16() const;
  inline void clear_att16();
  static const int kAtt16FieldNumber = 16;
  inline ::google::protobuf::int64 att16() const;
  inline void set_att16(::google::protobuf::int64 value);

  // required string att17 = 17;
  inline bool has_att17() const;
  inline void clear_att17();
  static const int kAtt17FieldNumber = 17;
  inline const ::std::string& att17() const;
  inline void set_att17(const ::std::string& value);
  inline void set_att17(const char* value);
  inline void set_att17(const char* value, size_t size);
  inline ::std::string* mutable_att17();
  inline ::std::string* release_att17();
  inline void set_allocated_att17(::std::string* att17);

  // required string att18 = 18;
  inline bool has_att18() const;
  inline void clear_att18();
  static const int kAtt18FieldNumber = 18;
  inline const ::std::string& att18() const;
  inline void set_att18(const ::std::string& value);
  inline void set_att18(const char* value);
  inline void set_att18(const char* value, size_t size);
  inline ::std::string* mutable_att18();
  inline ::std::string* release_att18();
  inline void set_allocated_att18(::std::string* att18);

  // required string att19 = 19;
  inline bool has_att19() const;
  inline void clear_att19();
  static const int kAtt19FieldNumber = 19;
  inline const ::std::string& att19() const;
  inline void set_att19(const ::std::string& value);
  inline void set_att19(const char* value);
  inline void set_att19(const char* value, size_t size);
  inline ::std::string* mutable_att19();
  inline ::std::string* release_att19();
  inline void set_allocated_att19(::std::string* att19);

  // required string att20 = 20;
  inline bool has_att20() const;
  inline void clear_att20();
  static const int kAtt20FieldNumber = 20;
  inline const ::std::string& att20() const;
  inline void set_att20(const ::std::string& value);
  inline void set_att20(const char* value);
  inline void set_att20(const char* value, size_t size);
  inline ::std::string* mutable_att20();
  inline ::std::string* release_att20();
  inline void set_allocated_att20(::std::string* att20);

  // required string att21 = 21;
  inline bool has_att21() const;
  inline void clear_att21();
  static const int kAtt21FieldNumber = 21;
  inline const ::std::string& att21() const;
  inline void set_att21(const ::std::string& value);
  inline void set_att21(const char* value);
  inline void set_att21(const char* value, size_t size);
  inline ::std::string* mutable_att21();
  inline ::std::string* release_att21();
  inline void set_allocated_att21(::std::string* att21);

  // required string att22 = 22;
  inline bool has_att22() const;
  inline void clear_att22();
  static const int kAtt22FieldNumber = 22;
  inline const ::std::string& att22() const;
  inline void set_att22(const ::std::string& value);
  inline void set_att22(const char* value);
  inline void set_att22(const char* value, size_t size);
  inline ::std::string* mutable_att22();
  inline ::std::string* release_att22();
  inline void set_allocated_att22(::std::string* att22);

  // required string att23 = 23;
  inline bool has_att23() const;
  inline void clear_att23();
  static const int kAtt23FieldNumber = 23;
  inline const ::std::string& att23() const;
  inline void set_att23(const ::std::string& value);
  inline void set_att23(const char* value);
  inline void set_att23(const char* value, size_t size);
  inline ::std::string* mutable_att23();
  inline ::std::string* release_att23();
  inline void set_allocated_att23(::std::string* att23);

  // required string att24 = 24;
  inline bool has_att24() const;
  inline void clear_att24();
  static const int kAtt24FieldNumber = 24;
  inline const ::std::string& att24() const;
  inline void set_att24(const ::std::string& value);
  inline void set_att24(const char* value);
  inline void set_att24(const char* value, size_t size);
  inline ::std::string* mutable_att24();
  inline ::std::string* release_att24();
  inline void set_allocated_att24(::std::string* att24);

  // required float att25 = 25;
  inline bool has_att25() const;
  inline void clear_att25();
  static const int kAtt25FieldNumber = 25;
  inline float att25() const;
  inline void set_att25(float value);

  // required float att26 = 26;
  inline bool has_att26() const;
  inline void clear_att26();
  static const int kAtt26FieldNumber = 26;
  inline float att26() const;
  inline void set_att26(float value);

  // required float att27 = 27;
  inline bool has_att27() const;
  inline void clear_att27();
  static const int kAtt27FieldNumber = 27;
  inline float att27() const;
  inline void set_att27(float value);

  // required float att28 = 28;
  inline bool has_att28() const;
  inline void clear_att28();
  static const int kAtt28FieldNumber = 28;
  inline float att28() const;
  inline void set_att28(float value);

  // required float att29 = 29;
  inline bool has_att29() const;
  inline void clear_att29();
  static const int kAtt29FieldNumber = 29;
  inline float att29() const;
  inline void set_att29(float value);

  // required float att30 = 30;
  inline bool has_att30() const;
  inline void clear_att30();
  static const int kAtt30FieldNumber = 30;
  inline float att30() const;
  inline void set_att30(float value);

  // required float att31 = 31;
  inline bool has_att31() const;
  inline void clear_att31();
  static const int kAtt31FieldNumber = 31;
  inline float att31() const;
  inline void set_att31(float value);

  // required float att32 = 32;
  inline bool has_att32() const;
  inline void clear_att32();
  static const int kAtt32FieldNumber = 32;
  inline float att32() const;
  inline void set_att32(float value);

  // required double att33 = 33;
  inline bool has_att33() const;
  inline void clear_att33();
  static const int kAtt33FieldNumber = 33;
  inline double att33() const;
  inline void set_att33(double value);

  // required double att34 = 34;
  inline bool has_att34() const;
  inline void clear_att34();
  static const int kAtt34FieldNumber = 34;
  inline double att34() const;
  inline void set_att34(double value);

  // required double att35 = 35;
  inline bool has_att35() const;
  inline void clear_att35();
  static const int kAtt35FieldNumber = 35;
  inline double att35() const;
  inline void set_att35(double value);

  // required double att36 = 36;
  inline bool has_att36() const;
  inline void clear_att36();
  static const int kAtt36FieldNumber = 36;
  inline double att36() const;
  inline void set_att36(double value);

  // required double att37 = 37;
  inline bool has_att37() const;
  inline void clear_att37();
  static const int kAtt37FieldNumber = 37;
  inline double att37() const;
  inline void set_att37(double value);

  // required double att38 = 38;
  inline bool has_att38() const;
  inline void clear_att38();
  static const int kAtt38FieldNumber = 38;
  inline double att38() const;
  inline void set_att38(double value);

  // required double att39 = 39;
  inline bool has_att39() const;
  inline void clear_att39();
  static const int kAtt39FieldNumber = 39;
  inline double att39() const;
  inline void set_att39(double value);

  // required double att40 = 40;
  inline bool has_att40() const;
  inline void clear_att40();
  static const int kAtt40FieldNumber = 40;
  inline double att40() const;
  inline void set_att40(double value);

  // required bool att41 = 41;
  inline bool has_att41() const;
  inline void clear_att41();
  static const int kAtt41FieldNumber = 41;
  inline bool att41() const;
  inline void set_att41(bool value);

  // required bool att42 = 42;
  inline bool has_att42() const;
  inline void clear_att42();
  static const int kAtt42FieldNumber = 42;
  inline bool att42() const;
  inline void set_att42(bool value);

  // required bool att43 = 43;
  inline bool has_att43() const;
  inline void clear_att43();
  static const int kAtt43FieldNumber = 43;
  inline bool att43() const;
  inline void set_att43(bool value);

  // required bool att44 = 44;
  inline bool has_att44() const;
  inline void clear_att44();
  static const int kAtt44FieldNumber = 44;
  inline bool att44() const;
  inline void set_att44(bool value);

  // required bool att45 = 45;
  inline bool has_att45() const;
  inline void clear_att45();
  static const int kAtt45FieldNumber = 45;
  inline bool att45() const;
  inline void set_att45(bool value);

  // required bool att46 = 46;
  inline bool has_att46() const;
  inline void clear_att46();
  static const int kAtt46FieldNumber = 46;
  inline bool att46() const;
  inline void set_att46(bool value);

  // required bool att47 = 47;
  inline bool has_att47() const;
  inline void clear_att47();
  static const int kAtt47FieldNumber = 47;
  inline bool att47() const;
  inline void set_att47(bool value);

  // required bool att48 = 48;
  inline bool has_att48() const;
  inline void clear_att48();
  static const int kAtt48FieldNumber = 48;
  inline bool att48() const;
  inline void set_att48(bool value);

  // @@protoc_insertion_point(class_scope:performance.Performance.complexPerformance_8)
 private:
  inline void set_has_att1();
  inline void clear_has_att1();
  inline void set_has_att2();
  inline void clear_has_att2();
  inline void set_has_att3();
  inline void clear_has_att3();
  inline void set_has_att4();
  inline void clear_has_att4();
  inline void set_has_att5();
  inline void clear_has_att5();
  inline void set_has_att6();
  inline void clear_has_att6();
  inline void set_has_att7();
  inline void clear_has_att7();
  inline void set_has_att8();
  inline void clear_has_att8();
  inline void set_has_att9();
  inline void clear_has_att9();
  inline void set_has_att10();
  inline void clear_has_att10();
  inline void set_has_att11();
  inline void clear_has_att11();
  inline void set_has_att12();
  inline void clear_has_att12();
  inline void set_has_att13();
  inline void clear_has_att13();
  inline void set_has_att14();
  inline void clear_has_att14();
  inline void set_has_att15();
  inline void clear_has_att15();
  inline void set_has_att16();
  inline void clear_has_att16();
  inline void set_has_att17();
  inline void clear_has_att17();
  inline void set_has_att18();
  inline void clear_has_att18();
  inline void set_has_att19();
  inline void clear_has_att19();
  inline void set_has_att20();
  inline void clear_has_att20();
  inline void set_has_att21();
  inline void clear_has_att21();
  inline void set_has_att22();
  inline void clear_has_att22();
  inline void set_has_att23();
  inline void clear_has_att23();
  inline void set_has_att24();
  inline void clear_has_att24();
  inline void set_has_att25();
  inline void clear_has_att25();
  inline void set_has_att26();
  inline void clear_has_att26();
  inline void set_has_att27();
  inline void clear_has_att27();
  inline void set_has_att28();
  inline void clear_has_att28();
  inline void set_has_att29();
  inline void clear_has_att29();
  inline void set_has_att30();
  inline void clear_has_att30();
  inline void set_has_att31();
  inline void clear_has_att31();
  inline void set_has_att32();
  inline void clear_has_att32();
  inline void set_has_att33();
  inline void clear_has_att33();
  inline void set_has_att34();
  inline void clear_has_att34();
  inline void set_has_att35();
  inline void clear_has_att35();
  inline void set_has_att36();
  inline void clear_has_att36();
  inline void set_has_att37();
  inline void clear_has_att37();
  inline void set_has_att38();
  inline void clear_has_att38();
  inline void set_has_att39();
  inline void clear_has_att39();
  inline void set_has_att40();
  inline void clear_has_att40();
  inline void set_has_att41();
  inline void clear_has_att41();
  inline void set_has_att42();
  inline void clear_has_att42();
  inline void set_has_att43();
  inline void clear_has_att43();
  inline void set_has_att44();
  inline void clear_has_att44();
  inline void set_has_att45();
  inline void clear_has_att45();
  inline void set_has_att46();
  inline void clear_has_att46();
  inline void set_has_att47();
  inline void clear_has_att47();
  inline void set_has_att48();
  inline void clear_has_att48();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 att1_;
  ::google::protobuf::int32 att2_;
  ::google::protobuf::int32 att3_;
  ::google::protobuf::int32 att4_;
  ::google::protobuf::int32 att5_;
  ::google::protobuf::int32 att6_;
  ::google::protobuf::int32 att7_;
  ::google::protobuf::int32 att8_;
  ::google::protobuf::int64 att9_;
  ::google::protobuf::int64 att10_;
  ::google::protobuf::int64 att11_;
  ::google::protobuf::int64 att12_;
  ::google::protobuf::int64 att13_;
  ::google::protobuf::int64 att14_;
  ::google::protobuf::int64 att15_;
  ::google::protobuf::int64 att16_;
  ::std::string* att17_;
  ::std::string* att18_;
  ::std::string* att19_;
  ::std::string* att20_;
  ::std::string* att21_;
  ::std::string* att22_;
  ::std::string* att23_;
  ::std::string* att24_;
  float att25_;
  float att26_;
  float att27_;
  float att28_;
  float att29_;
  float att30_;
  float att31_;
  float att32_;
  double att33_;
  double att34_;
  double att35_;
  double att36_;
  double att37_;
  double att38_;
  double att39_;
  double att40_;
  bool att41_;
  bool att42_;
  bool att43_;
  bool att44_;
  bool att45_;
  bool att46_;
  bool att47_;
  bool att48_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(48 + 31) / 32];

  friend void  protobuf_AddDesc_PerformanceTest_2eproto();
  friend void protobuf_AssignDesc_PerformanceTest_2eproto();
  friend void protobuf_ShutdownFile_PerformanceTest_2eproto();

  void InitAsDefaultInstance();
  static Performance_complexPerformance_8* default_instance_;
};
// -------------------------------------------------------------------

class Performance_complexPerformance_10 : public ::google::protobuf::Message {
 public:
  Performance_complexPerformance_10();
  virtual ~Performance_complexPerformance_10();

  Performance_complexPerformance_10(const Performance_complexPerformance_10& from);

  inline Performance_complexPerformance_10& operator=(const Performance_complexPerformance_10& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Performance_complexPerformance_10& default_instance();

  void Swap(Performance_complexPerformance_10* other);

  // implements Message ----------------------------------------------

  Performance_complexPerformance_10* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Performance_complexPerformance_10& from);
  void MergeFrom(const Performance_complexPerformance_10& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 att1 = 1;
  inline bool has_att1() const;
  inline void clear_att1();
  static const int kAtt1FieldNumber = 1;
  inline ::google::protobuf::int32 att1() const;
  inline void set_att1(::google::protobuf::int32 value);

  // required int32 att2 = 2;
  inline bool has_att2() const;
  inline void clear_att2();
  static const int kAtt2FieldNumber = 2;
  inline ::google::protobuf::int32 att2() const;
  inline void set_att2(::google::protobuf::int32 value);

  // required int32 att3 = 3;
  inline bool has_att3() const;
  inline void clear_att3();
  static const int kAtt3FieldNumber = 3;
  inline ::google::protobuf::int32 att3() const;
  inline void set_att3(::google::protobuf::int32 value);

  // required int32 att4 = 4;
  inline bool has_att4() const;
  inline void clear_att4();
  static const int kAtt4FieldNumber = 4;
  inline ::google::protobuf::int32 att4() const;
  inline void set_att4(::google::protobuf::int32 value);

  // required int32 att5 = 5;
  inline bool has_att5() const;
  inline void clear_att5();
  static const int kAtt5FieldNumber = 5;
  inline ::google::protobuf::int32 att5() const;
  inline void set_att5(::google::protobuf::int32 value);

  // required int32 att6 = 6;
  inline bool has_att6() const;
  inline void clear_att6();
  static const int kAtt6FieldNumber = 6;
  inline ::google::protobuf::int32 att6() const;
  inline void set_att6(::google::protobuf::int32 value);

  // required int32 att7 = 7;
  inline bool has_att7() const;
  inline void clear_att7();
  static const int kAtt7FieldNumber = 7;
  inline ::google::protobuf::int32 att7() const;
  inline void set_att7(::google::protobuf::int32 value);

  // required int32 att8 = 8;
  inline bool has_att8() const;
  inline void clear_att8();
  static const int kAtt8FieldNumber = 8;
  inline ::google::protobuf::int32 att8() const;
  inline void set_att8(::google::protobuf::int32 value);

  // required int32 att9 = 9;
  inline bool has_att9() const;
  inline void clear_att9();
  static const int kAtt9FieldNumber = 9;
  inline ::google::protobuf::int32 att9() const;
  inline void set_att9(::google::protobuf::int32 value);

  // required int32 att10 = 10;
  inline bool has_att10() const;
  inline void clear_att10();
  static const int kAtt10FieldNumber = 10;
  inline ::google::protobuf::int32 att10() const;
  inline void set_att10(::google::protobuf::int32 value);

  // required int64 att11 = 11;
  inline bool has_att11() const;
  inline void clear_att11();
  static const int kAtt11FieldNumber = 11;
  inline ::google::protobuf::int64 att11() const;
  inline void set_att11(::google::protobuf::int64 value);

  // required int64 att12 = 12;
  inline bool has_att12() const;
  inline void clear_att12();
  static const int kAtt12FieldNumber = 12;
  inline ::google::protobuf::int64 att12() const;
  inline void set_att12(::google::protobuf::int64 value);

  // required int64 att13 = 13;
  inline bool has_att13() const;
  inline void clear_att13();
  static const int kAtt13FieldNumber = 13;
  inline ::google::protobuf::int64 att13() const;
  inline void set_att13(::google::protobuf::int64 value);

  // required int64 att14 = 14;
  inline bool has_att14() const;
  inline void clear_att14();
  static const int kAtt14FieldNumber = 14;
  inline ::google::protobuf::int64 att14() const;
  inline void set_att14(::google::protobuf::int64 value);

  // required int64 att15 = 15;
  inline bool has_att15() const;
  inline void clear_att15();
  static const int kAtt15FieldNumber = 15;
  inline ::google::protobuf::int64 att15() const;
  inline void set_att15(::google::protobuf::int64 value);

  // required int64 att16 = 16;
  inline bool has_att16() const;
  inline void clear_att16();
  static const int kAtt16FieldNumber = 16;
  inline ::google::protobuf::int64 att16() const;
  inline void set_att16(::google::protobuf::int64 value);

  // required int64 att17 = 17;
  inline bool has_att17() const;
  inline void clear_att17();
  static const int kAtt17FieldNumber = 17;
  inline ::google::protobuf::int64 att17() const;
  inline void set_att17(::google::protobuf::int64 value);

  // required int64 att18 = 18;
  inline bool has_att18() const;
  inline void clear_att18();
  static const int kAtt18FieldNumber = 18;
  inline ::google::protobuf::int64 att18() const;
  inline void set_att18(::google::protobuf::int64 value);

  // required int64 att19 = 19;
  inline bool has_att19() const;
  inline void clear_att19();
  static const int kAtt19FieldNumber = 19;
  inline ::google::protobuf::int64 att19() const;
  inline void set_att19(::google::protobuf::int64 value);

  // required int64 att20 = 20;
  inline bool has_att20() const;
  inline void clear_att20();
  static const int kAtt20FieldNumber = 20;
  inline ::google::protobuf::int64 att20() const;
  inline void set_att20(::google::protobuf::int64 value);

  // required string att21 = 21;
  inline bool has_att21() const;
  inline void clear_att21();
  static const int kAtt21FieldNumber = 21;
  inline const ::std::string& att21() const;
  inline void set_att21(const ::std::string& value);
  inline void set_att21(const char* value);
  inline void set_att21(const char* value, size_t size);
  inline ::std::string* mutable_att21();
  inline ::std::string* release_att21();
  inline void set_allocated_att21(::std::string* att21);

  // required string att22 = 22;
  inline bool has_att22() const;
  inline void clear_att22();
  static const int kAtt22FieldNumber = 22;
  inline const ::std::string& att22() const;
  inline void set_att22(const ::std::string& value);
  inline void set_att22(const char* value);
  inline void set_att22(const char* value, size_t size);
  inline ::std::string* mutable_att22();
  inline ::std::string* release_att22();
  inline void set_allocated_att22(::std::string* att22);

  // required string att23 = 23;
  inline bool has_att23() const;
  inline void clear_att23();
  static const int kAtt23FieldNumber = 23;
  inline const ::std::string& att23() const;
  inline void set_att23(const ::std::string& value);
  inline void set_att23(const char* value);
  inline void set_att23(const char* value, size_t size);
  inline ::std::string* mutable_att23();
  inline ::std::string* release_att23();
  inline void set_allocated_att23(::std::string* att23);

  // required string att24 = 24;
  inline bool has_att24() const;
  inline void clear_att24();
  static const int kAtt24FieldNumber = 24;
  inline const ::std::string& att24() const;
  inline void set_att24(const ::std::string& value);
  inline void set_att24(const char* value);
  inline void set_att24(const char* value, size_t size);
  inline ::std::string* mutable_att24();
  inline ::std::string* release_att24();
  inline void set_allocated_att24(::std::string* att24);

  // required string att25 = 25;
  inline bool has_att25() const;
  inline void clear_att25();
  static const int kAtt25FieldNumber = 25;
  inline const ::std::string& att25() const;
  inline void set_att25(const ::std::string& value);
  inline void set_att25(const char* value);
  inline void set_att25(const char* value, size_t size);
  inline ::std::string* mutable_att25();
  inline ::std::string* release_att25();
  inline void set_allocated_att25(::std::string* att25);

  // required string att26 = 26;
  inline bool has_att26() const;
  inline void clear_att26();
  static const int kAtt26FieldNumber = 26;
  inline const ::std::string& att26() const;
  inline void set_att26(const ::std::string& value);
  inline void set_att26(const char* value);
  inline void set_att26(const char* value, size_t size);
  inline ::std::string* mutable_att26();
  inline ::std::string* release_att26();
  inline void set_allocated_att26(::std::string* att26);

  // required string att27 = 27;
  inline bool has_att27() const;
  inline void clear_att27();
  static const int kAtt27FieldNumber = 27;
  inline const ::std::string& att27() const;
  inline void set_att27(const ::std::string& value);
  inline void set_att27(const char* value);
  inline void set_att27(const char* value, size_t size);
  inline ::std::string* mutable_att27();
  inline ::std::string* release_att27();
  inline void set_allocated_att27(::std::string* att27);

  // required string att28 = 28;
  inline bool has_att28() const;
  inline void clear_att28();
  static const int kAtt28FieldNumber = 28;
  inline const ::std::string& att28() const;
  inline void set_att28(const ::std::string& value);
  inline void set_att28(const char* value);
  inline void set_att28(const char* value, size_t size);
  inline ::std::string* mutable_att28();
  inline ::std::string* release_att28();
  inline void set_allocated_att28(::std::string* att28);

  // required string att29 = 29;
  inline bool has_att29() const;
  inline void clear_att29();
  static const int kAtt29FieldNumber = 29;
  inline const ::std::string& att29() const;
  inline void set_att29(const ::std::string& value);
  inline void set_att29(const char* value);
  inline void set_att29(const char* value, size_t size);
  inline ::std::string* mutable_att29();
  inline ::std::string* release_att29();
  inline void set_allocated_att29(::std::string* att29);

  // required string att30 = 30;
  inline bool has_att30() const;
  inline void clear_att30();
  static const int kAtt30FieldNumber = 30;
  inline const ::std::string& att30() const;
  inline void set_att30(const ::std::string& value);
  inline void set_att30(const char* value);
  inline void set_att30(const char* value, size_t size);
  inline ::std::string* mutable_att30();
  inline ::std::string* release_att30();
  inline void set_allocated_att30(::std::string* att30);

  // required float att31 = 31;
  inline bool has_att31() const;
  inline void clear_att31();
  static const int kAtt31FieldNumber = 31;
  inline float att31() const;
  inline void set_att31(float value);

  // required float att32 = 32;
  inline bool has_att32() const;
  inline void clear_att32();
  static const int kAtt32FieldNumber = 32;
  inline float att32() const;
  inline void set_att32(float value);

  // required float att33 = 33;
  inline bool has_att33() const;
  inline void clear_att33();
  static const int kAtt33FieldNumber = 33;
  inline float att33() const;
  inline void set_att33(float value);

  // required float att34 = 34;
  inline bool has_att34() const;
  inline void clear_att34();
  static const int kAtt34FieldNumber = 34;
  inline float att34() const;
  inline void set_att34(float value);

  // required float att35 = 35;
  inline bool has_att35() const;
  inline void clear_att35();
  static const int kAtt35FieldNumber = 35;
  inline float att35() const;
  inline void set_att35(float value);

  // required float att36 = 36;
  inline bool has_att36() const;
  inline void clear_att36();
  static const int kAtt36FieldNumber = 36;
  inline float att36() const;
  inline void set_att36(float value);

  // required float att37 = 37;
  inline bool has_att37() const;
  inline void clear_att37();
  static const int kAtt37FieldNumber = 37;
  inline float att37() const;
  inline void set_att37(float value);

  // required float att38 = 38;
  inline bool has_att38() const;
  inline void clear_att38();
  static const int kAtt38FieldNumber = 38;
  inline float att38() const;
  inline void set_att38(float value);

  // required float att39 = 39;
  inline bool has_att39() const;
  inline void clear_att39();
  static const int kAtt39FieldNumber = 39;
  inline float att39() const;
  inline void set_att39(float value);

  // required float att40 = 40;
  inline bool has_att40() const;
  inline void clear_att40();
  static const int kAtt40FieldNumber = 40;
  inline float att40() const;
  inline void set_att40(float value);

  // required double att41 = 41;
  inline bool has_att41() const;
  inline void clear_att41();
  static const int kAtt41FieldNumber = 41;
  inline double att41() const;
  inline void set_att41(double value);

  // required double att42 = 42;
  inline bool has_att42() const;
  inline void clear_att42();
  static const int kAtt42FieldNumber = 42;
  inline double att42() const;
  inline void set_att42(double value);

  // required double att43 = 43;
  inline bool has_att43() const;
  inline void clear_att43();
  static const int kAtt43FieldNumber = 43;
  inline double att43() const;
  inline void set_att43(double value);

  // required double att44 = 44;
  inline bool has_att44() const;
  inline void clear_att44();
  static const int kAtt44FieldNumber = 44;
  inline double att44() const;
  inline void set_att44(double value);

  // required double att45 = 45;
  inline bool has_att45() const;
  inline void clear_att45();
  static const int kAtt45FieldNumber = 45;
  inline double att45() const;
  inline void set_att45(double value);

  // required double att46 = 46;
  inline bool has_att46() const;
  inline void clear_att46();
  static const int kAtt46FieldNumber = 46;
  inline double att46() const;
  inline void set_att46(double value);

  // required double att47 = 47;
  inline bool has_att47() const;
  inline void clear_att47();
  static const int kAtt47FieldNumber = 47;
  inline double att47() const;
  inline void set_att47(double value);

  // required double att48 = 48;
  inline bool has_att48() const;
  inline void clear_att48();
  static const int kAtt48FieldNumber = 48;
  inline double att48() const;
  inline void set_att48(double value);

  // required double att49 = 49;
  inline bool has_att49() const;
  inline void clear_att49();
  static const int kAtt49FieldNumber = 49;
  inline double att49() const;
  inline void set_att49(double value);

  // required double att50 = 50;
  inline bool has_att50() const;
  inline void clear_att50();
  static const int kAtt50FieldNumber = 50;
  inline double att50() const;
  inline void set_att50(double value);

  // required bool att51 = 51;
  inline bool has_att51() const;
  inline void clear_att51();
  static const int kAtt51FieldNumber = 51;
  inline bool att51() const;
  inline void set_att51(bool value);

  // required bool att52 = 52;
  inline bool has_att52() const;
  inline void clear_att52();
  static const int kAtt52FieldNumber = 52;
  inline bool att52() const;
  inline void set_att52(bool value);

  // required bool att53 = 53;
  inline bool has_att53() const;
  inline void clear_att53();
  static const int kAtt53FieldNumber = 53;
  inline bool att53() const;
  inline void set_att53(bool value);

  // required bool att54 = 54;
  inline bool has_att54() const;
  inline void clear_att54();
  static const int kAtt54FieldNumber = 54;
  inline bool att54() const;
  inline void set_att54(bool value);

  // required bool att55 = 55;
  inline bool has_att55() const;
  inline void clear_att55();
  static const int kAtt55FieldNumber = 55;
  inline bool att55() const;
  inline void set_att55(bool value);

  // required bool att56 = 56;
  inline bool has_att56() const;
  inline void clear_att56();
  static const int kAtt56FieldNumber = 56;
  inline bool att56() const;
  inline void set_att56(bool value);

  // required bool att57 = 57;
  inline bool has_att57() const;
  inline void clear_att57();
  static const int kAtt57FieldNumber = 57;
  inline bool att57() const;
  inline void set_att57(bool value);

  // required bool att58 = 58;
  inline bool has_att58() const;
  inline void clear_att58();
  static const int kAtt58FieldNumber = 58;
  inline bool att58() const;
  inline void set_att58(bool value);

  // required bool att59 = 59;
  inline bool has_att59() const;
  inline void clear_att59();
  static const int kAtt59FieldNumber = 59;
  inline bool att59() const;
  inline void set_att59(bool value);

  // required bool att60 = 60;
  inline bool has_att60() const;
  inline void clear_att60();
  static const int kAtt60FieldNumber = 60;
  inline bool att60() const;
  inline void set_att60(bool value);

  // @@protoc_insertion_point(class_scope:performance.Performance.complexPerformance_10)
 private:
  inline void set_has_att1();
  inline void clear_has_att1();
  inline void set_has_att2();
  inline void clear_has_att2();
  inline void set_has_att3();
  inline void clear_has_att3();
  inline void set_has_att4();
  inline void clear_has_att4();
  inline void set_has_att5();
  inline void clear_has_att5();
  inline void set_has_att6();
  inline void clear_has_att6();
  inline void set_has_att7();
  inline void clear_has_att7();
  inline void set_has_att8();
  inline void clear_has_att8();
  inline void set_has_att9();
  inline void clear_has_att9();
  inline void set_has_att10();
  inline void clear_has_att10();
  inline void set_has_att11();
  inline void clear_has_att11();
  inline void set_has_att12();
  inline void clear_has_att12();
  inline void set_has_att13();
  inline void clear_has_att13();
  inline void set_has_att14();
  inline void clear_has_att14();
  inline void set_has_att15();
  inline void clear_has_att15();
  inline void set_has_att16();
  inline void clear_has_att16();
  inline void set_has_att17();
  inline void clear_has_att17();
  inline void set_has_att18();
  inline void clear_has_att18();
  inline void set_has_att19();
  inline void clear_has_att19();
  inline void set_has_att20();
  inline void clear_has_att20();
  inline void set_has_att21();
  inline void clear_has_att21();
  inline void set_has_att22();
  inline void clear_has_att22();
  inline void set_has_att23();
  inline void clear_has_att23();
  inline void set_has_att24();
  inline void clear_has_att24();
  inline void set_has_att25();
  inline void clear_has_att25();
  inline void set_has_att26();
  inline void clear_has_att26();
  inline void set_has_att27();
  inline void clear_has_att27();
  inline void set_has_att28();
  inline void clear_has_att28();
  inline void set_has_att29();
  inline void clear_has_att29();
  inline void set_has_att30();
  inline void clear_has_att30();
  inline void set_has_att31();
  inline void clear_has_att31();
  inline void set_has_att32();
  inline void clear_has_att32();
  inline void set_has_att33();
  inline void clear_has_att33();
  inline void set_has_att34();
  inline void clear_has_att34();
  inline void set_has_att35();
  inline void clear_has_att35();
  inline void set_has_att36();
  inline void clear_has_att36();
  inline void set_has_att37();
  inline void clear_has_att37();
  inline void set_has_att38();
  inline void clear_has_att38();
  inline void set_has_att39();
  inline void clear_has_att39();
  inline void set_has_att40();
  inline void clear_has_att40();
  inline void set_has_att41();
  inline void clear_has_att41();
  inline void set_has_att42();
  inline void clear_has_att42();
  inline void set_has_att43();
  inline void clear_has_att43();
  inline void set_has_att44();
  inline void clear_has_att44();
  inline void set_has_att45();
  inline void clear_has_att45();
  inline void set_has_att46();
  inline void clear_has_att46();
  inline void set_has_att47();
  inline void clear_has_att47();
  inline void set_has_att48();
  inline void clear_has_att48();
  inline void set_has_att49();
  inline void clear_has_att49();
  inline void set_has_att50();
  inline void clear_has_att50();
  inline void set_has_att51();
  inline void clear_has_att51();
  inline void set_has_att52();
  inline void clear_has_att52();
  inline void set_has_att53();
  inline void clear_has_att53();
  inline void set_has_att54();
  inline void clear_has_att54();
  inline void set_has_att55();
  inline void clear_has_att55();
  inline void set_has_att56();
  inline void clear_has_att56();
  inline void set_has_att57();
  inline void clear_has_att57();
  inline void set_has_att58();
  inline void clear_has_att58();
  inline void set_has_att59();
  inline void clear_has_att59();
  inline void set_has_att60();
  inline void clear_has_att60();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 att1_;
  ::google::protobuf::int32 att2_;
  ::google::protobuf::int32 att3_;
  ::google::protobuf::int32 att4_;
  ::google::protobuf::int32 att5_;
  ::google::protobuf::int32 att6_;
  ::google::protobuf::int32 att7_;
  ::google::protobuf::int32 att8_;
  ::google::protobuf::int32 att9_;
  ::google::protobuf::int32 att10_;
  ::google::protobuf::int64 att11_;
  ::google::protobuf::int64 att12_;
  ::google::protobuf::int64 att13_;
  ::google::protobuf::int64 att14_;
  ::google::protobuf::int64 att15_;
  ::google::protobuf::int64 att16_;
  ::google::protobuf::int64 att17_;
  ::google::protobuf::int64 att18_;
  ::google::protobuf::int64 att19_;
  ::google::protobuf::int64 att20_;
  ::std::string* att21_;
  ::std::string* att22_;
  ::std::string* att23_;
  ::std::string* att24_;
  ::std::string* att25_;
  ::std::string* att26_;
  ::std::string* att27_;
  ::std::string* att28_;
  ::std::string* att29_;
  ::std::string* att30_;
  float att31_;
  float att32_;
  float att33_;
  float att34_;
  float att35_;
  float att36_;
  float att37_;
  float att38_;
  float att39_;
  float att40_;
  double att41_;
  double att42_;
  double att43_;
  double att44_;
  double att45_;
  double att46_;
  double att47_;
  double att48_;
  double att49_;
  double att50_;
  bool att51_;
  bool att52_;
  bool att53_;
  bool att54_;
  bool att55_;
  bool att56_;
  bool att57_;
  bool att58_;
  bool att59_;
  bool att60_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(60 + 31) / 32];

  friend void  protobuf_AddDesc_PerformanceTest_2eproto();
  friend void protobuf_AssignDesc_PerformanceTest_2eproto();
  friend void protobuf_ShutdownFile_PerformanceTest_2eproto();

  void InitAsDefaultInstance();
  static Performance_complexPerformance_10* default_instance_;
};
// -------------------------------------------------------------------

class Performance_innersimplePerformance_2 : public ::google::protobuf::Message {
 public:
  Performance_innersimplePerformance_2();
  virtual ~Performance_innersimplePerformance_2();

  Performance_innersimplePerformance_2(const Performance_innersimplePerformance_2& from);

  inline Performance_innersimplePerformance_2& operator=(const Performance_innersimplePerformance_2& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Performance_innersimplePerformance_2& default_instance();

  void Swap(Performance_innersimplePerformance_2* other);

  // implements Message ----------------------------------------------

  Performance_innersimplePerformance_2* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Performance_innersimplePerformance_2& from);
  void MergeFrom(const Performance_innersimplePerformance_2& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 att1 = 1;
  inline bool has_att1() const;
  inline void clear_att1();
  static const int kAtt1FieldNumber = 1;
  inline ::google::protobuf::int32 att1() const;
  inline void set_att1(::google::protobuf::int32 value);

  // required int32 att2 = 2;
  inline bool has_att2() const;
  inline void clear_att2();
  static const int kAtt2FieldNumber = 2;
  inline ::google::protobuf::int32 att2() const;
  inline void set_att2(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:performance.Performance.innersimplePerformance_2)
 private:
  inline void set_has_att1();
  inline void clear_has_att1();
  inline void set_has_att2();
  inline void clear_has_att2();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 att1_;
  ::google::protobuf::int32 att2_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_PerformanceTest_2eproto();
  friend void protobuf_AssignDesc_PerformanceTest_2eproto();
  friend void protobuf_ShutdownFile_PerformanceTest_2eproto();

  void InitAsDefaultInstance();
  static Performance_innersimplePerformance_2* default_instance_;
};
// -------------------------------------------------------------------

class Performance_outersimplePerformance_2 : public ::google::protobuf::Message {
 public:
  Performance_outersimplePerformance_2();
  virtual ~Performance_outersimplePerformance_2();

  Performance_outersimplePerformance_2(const Performance_outersimplePerformance_2& from);

  inline Performance_outersimplePerformance_2& operator=(const Performance_outersimplePerformance_2& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Performance_outersimplePerformance_2& default_instance();

  void Swap(Performance_outersimplePerformance_2* other);

  // implements Message ----------------------------------------------

  Performance_outersimplePerformance_2* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Performance_outersimplePerformance_2& from);
  void MergeFrom(const Performance_outersimplePerformance_2& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .performance.Performance.innersimplePerformance_2 att1 = 1;
  inline bool has_att1() const;
  inline void clear_att1();
  static const int kAtt1FieldNumber = 1;
  inline const ::performance::Performance_innersimplePerformance_2& att1() const;
  inline ::performance::Performance_innersimplePerformance_2* mutable_att1();
  inline ::performance::Performance_innersimplePerformance_2* release_att1();
  inline void set_allocated_att1(::performance::Performance_innersimplePerformance_2* att1);

  // required .performance.Performance.innersimplePerformance_2 att2 = 2;
  inline bool has_att2() const;
  inline void clear_att2();
  static const int kAtt2FieldNumber = 2;
  inline const ::performance::Performance_innersimplePerformance_2& att2() const;
  inline ::performance::Performance_innersimplePerformance_2* mutable_att2();
  inline ::performance::Performance_innersimplePerformance_2* release_att2();
  inline void set_allocated_att2(::performance::Performance_innersimplePerformance_2* att2);

  // @@protoc_insertion_point(class_scope:performance.Performance.outersimplePerformance_2)
 private:
  inline void set_has_att1();
  inline void clear_has_att1();
  inline void set_has_att2();
  inline void clear_has_att2();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::performance::Performance_innersimplePerformance_2* att1_;
  ::performance::Performance_innersimplePerformance_2* att2_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_PerformanceTest_2eproto();
  friend void protobuf_AssignDesc_PerformanceTest_2eproto();
  friend void protobuf_ShutdownFile_PerformanceTest_2eproto();

  void InitAsDefaultInstance();
  static Performance_outersimplePerformance_2* default_instance_;
};
// -------------------------------------------------------------------

class Performance_innersimplePerformance_4 : public ::google::protobuf::Message {
 public:
  Performance_innersimplePerformance_4();
  virtual ~Performance_innersimplePerformance_4();

  Performance_innersimplePerformance_4(const Performance_innersimplePerformance_4& from);

  inline Performance_innersimplePerformance_4& operator=(const Performance_innersimplePerformance_4& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Performance_innersimplePerformance_4& default_instance();

  void Swap(Performance_innersimplePerformance_4* other);

  // implements Message ----------------------------------------------

  Performance_innersimplePerformance_4* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Performance_innersimplePerformance_4& from);
  void MergeFrom(const Performance_innersimplePerformance_4& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 att1 = 1;
  inline bool has_att1() const;
  inline void clear_att1();
  static const int kAtt1FieldNumber = 1;
  inline ::google::protobuf::int32 att1() const;
  inline void set_att1(::google::protobuf::int32 value);

  // required int32 att2 = 2;
  inline bool has_att2() const;
  inline void clear_att2();
  static const int kAtt2FieldNumber = 2;
  inline ::google::protobuf::int32 att2() const;
  inline void set_att2(::google::protobuf::int32 value);

  // required int32 att3 = 3;
  inline bool has_att3() const;
  inline void clear_att3();
  static const int kAtt3FieldNumber = 3;
  inline ::google::protobuf::int32 att3() const;
  inline void set_att3(::google::protobuf::int32 value);

  // required int32 att4 = 4;
  inline bool has_att4() const;
  inline void clear_att4();
  static const int kAtt4FieldNumber = 4;
  inline ::google::protobuf::int32 att4() const;
  inline void set_att4(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:performance.Performance.innersimplePerformance_4)
 private:
  inline void set_has_att1();
  inline void clear_has_att1();
  inline void set_has_att2();
  inline void clear_has_att2();
  inline void set_has_att3();
  inline void clear_has_att3();
  inline void set_has_att4();
  inline void clear_has_att4();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 att1_;
  ::google::protobuf::int32 att2_;
  ::google::protobuf::int32 att3_;
  ::google::protobuf::int32 att4_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_PerformanceTest_2eproto();
  friend void protobuf_AssignDesc_PerformanceTest_2eproto();
  friend void protobuf_ShutdownFile_PerformanceTest_2eproto();

  void InitAsDefaultInstance();
  static Performance_innersimplePerformance_4* default_instance_;
};
// -------------------------------------------------------------------

class Performance_outersimplePerformance_4 : public ::google::protobuf::Message {
 public:
  Performance_outersimplePerformance_4();
  virtual ~Performance_outersimplePerformance_4();

  Performance_outersimplePerformance_4(const Performance_outersimplePerformance_4& from);

  inline Performance_outersimplePerformance_4& operator=(const Performance_outersimplePerformance_4& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Performance_outersimplePerformance_4& default_instance();

  void Swap(Performance_outersimplePerformance_4* other);

  // implements Message ----------------------------------------------

  Performance_outersimplePerformance_4* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Performance_outersimplePerformance_4& from);
  void MergeFrom(const Performance_outersimplePerformance_4& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .performance.Performance.innersimplePerformance_4 att1 = 1;
  inline bool has_att1() const;
  inline void clear_att1();
  static const int kAtt1FieldNumber = 1;
  inline const ::performance::Performance_innersimplePerformance_4& att1() const;
  inline ::performance::Performance_innersimplePerformance_4* mutable_att1();
  inline ::performance::Performance_innersimplePerformance_4* release_att1();
  inline void set_allocated_att1(::performance::Performance_innersimplePerformance_4* att1);

  // required .performance.Performance.innersimplePerformance_4 att2 = 2;
  inline bool has_att2() const;
  inline void clear_att2();
  static const int kAtt2FieldNumber = 2;
  inline const ::performance::Performance_innersimplePerformance_4& att2() const;
  inline ::performance::Performance_innersimplePerformance_4* mutable_att2();
  inline ::performance::Performance_innersimplePerformance_4* release_att2();
  inline void set_allocated_att2(::performance::Performance_innersimplePerformance_4* att2);

  // required .performance.Performance.innersimplePerformance_4 att3 = 3;
  inline bool has_att3() const;
  inline void clear_att3();
  static const int kAtt3FieldNumber = 3;
  inline const ::performance::Performance_innersimplePerformance_4& att3() const;
  inline ::performance::Performance_innersimplePerformance_4* mutable_att3();
  inline ::performance::Performance_innersimplePerformance_4* release_att3();
  inline void set_allocated_att3(::performance::Performance_innersimplePerformance_4* att3);

  // required .performance.Performance.innersimplePerformance_4 att4 = 4;
  inline bool has_att4() const;
  inline void clear_att4();
  static const int kAtt4FieldNumber = 4;
  inline const ::performance::Performance_innersimplePerformance_4& att4() const;
  inline ::performance::Performance_innersimplePerformance_4* mutable_att4();
  inline ::performance::Performance_innersimplePerformance_4* release_att4();
  inline void set_allocated_att4(::performance::Performance_innersimplePerformance_4* att4);

  // @@protoc_insertion_point(class_scope:performance.Performance.outersimplePerformance_4)
 private:
  inline void set_has_att1();
  inline void clear_has_att1();
  inline void set_has_att2();
  inline void clear_has_att2();
  inline void set_has_att3();
  inline void clear_has_att3();
  inline void set_has_att4();
  inline void clear_has_att4();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::performance::Performance_innersimplePerformance_4* att1_;
  ::performance::Performance_innersimplePerformance_4* att2_;
  ::performance::Performance_innersimplePerformance_4* att3_;
  ::performance::Performance_innersimplePerformance_4* att4_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_PerformanceTest_2eproto();
  friend void protobuf_AssignDesc_PerformanceTest_2eproto();
  friend void protobuf_ShutdownFile_PerformanceTest_2eproto();

  void InitAsDefaultInstance();
  static Performance_outersimplePerformance_4* default_instance_;
};
// -------------------------------------------------------------------

class Performance_innersimplePerformance_6 : public ::google::protobuf::Message {
 public:
  Performance_innersimplePerformance_6();
  virtual ~Performance_innersimplePerformance_6();

  Performance_innersimplePerformance_6(const Performance_innersimplePerformance_6& from);

  inline Performance_innersimplePerformance_6& operator=(const Performance_innersimplePerformance_6& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Performance_innersimplePerformance_6& default_instance();

  void Swap(Performance_innersimplePerformance_6* other);

  // implements Message ----------------------------------------------

  Performance_innersimplePerformance_6* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Performance_innersimplePerformance_6& from);
  void MergeFrom(const Performance_innersimplePerformance_6& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 att1 = 1;
  inline bool has_att1() const;
  inline void clear_att1();
  static const int kAtt1FieldNumber = 1;
  inline ::google::protobuf::int32 att1() const;
  inline void set_att1(::google::protobuf::int32 value);

  // required int32 att2 = 2;
  inline bool has_att2() const;
  inline void clear_att2();
  static const int kAtt2FieldNumber = 2;
  inline ::google::protobuf::int32 att2() const;
  inline void set_att2(::google::protobuf::int32 value);

  // required int32 att3 = 3;
  inline bool has_att3() const;
  inline void clear_att3();
  static const int kAtt3FieldNumber = 3;
  inline ::google::protobuf::int32 att3() const;
  inline void set_att3(::google::protobuf::int32 value);

  // required int32 att4 = 4;
  inline bool has_att4() const;
  inline void clear_att4();
  static const int kAtt4FieldNumber = 4;
  inline ::google::protobuf::int32 att4() const;
  inline void set_att4(::google::protobuf::int32 value);

  // required int32 att5 = 5;
  inline bool has_att5() const;
  inline void clear_att5();
  static const int kAtt5FieldNumber = 5;
  inline ::google::protobuf::int32 att5() const;
  inline void set_att5(::google::protobuf::int32 value);

  // required int32 att6 = 6;
  inline bool has_att6() const;
  inline void clear_att6();
  static const int kAtt6FieldNumber = 6;
  inline ::google::protobuf::int32 att6() const;
  inline void set_att6(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:performance.Performance.innersimplePerformance_6)
 private:
  inline void set_has_att1();
  inline void clear_has_att1();
  inline void set_has_att2();
  inline void clear_has_att2();
  inline void set_has_att3();
  inline void clear_has_att3();
  inline void set_has_att4();
  inline void clear_has_att4();
  inline void set_has_att5();
  inline void clear_has_att5();
  inline void set_has_att6();
  inline void clear_has_att6();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 att1_;
  ::google::protobuf::int32 att2_;
  ::google::protobuf::int32 att3_;
  ::google::protobuf::int32 att4_;
  ::google::protobuf::int32 att5_;
  ::google::protobuf::int32 att6_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_PerformanceTest_2eproto();
  friend void protobuf_AssignDesc_PerformanceTest_2eproto();
  friend void protobuf_ShutdownFile_PerformanceTest_2eproto();

  void InitAsDefaultInstance();
  static Performance_innersimplePerformance_6* default_instance_;
};
// -------------------------------------------------------------------

class Performance_outersimplePerformance_6 : public ::google::protobuf::Message {
 public:
  Performance_outersimplePerformance_6();
  virtual ~Performance_outersimplePerformance_6();

  Performance_outersimplePerformance_6(const Performance_outersimplePerformance_6& from);

  inline Performance_outersimplePerformance_6& operator=(const Performance_outersimplePerformance_6& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Performance_outersimplePerformance_6& default_instance();

  void Swap(Performance_outersimplePerformance_6* other);

  // implements Message ----------------------------------------------

  Performance_outersimplePerformance_6* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Performance_outersimplePerformance_6& from);
  void MergeFrom(const Performance_outersimplePerformance_6& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .performance.Performance.innersimplePerformance_6 att1 = 1;
  inline bool has_att1() const;
  inline void clear_att1();
  static const int kAtt1FieldNumber = 1;
  inline const ::performance::Performance_innersimplePerformance_6& att1() const;
  inline ::performance::Performance_innersimplePerformance_6* mutable_att1();
  inline ::performance::Performance_innersimplePerformance_6* release_att1();
  inline void set_allocated_att1(::performance::Performance_innersimplePerformance_6* att1);

  // required .performance.Performance.innersimplePerformance_6 att2 = 2;
  inline bool has_att2() const;
  inline void clear_att2();
  static const int kAtt2FieldNumber = 2;
  inline const ::performance::Performance_innersimplePerformance_6& att2() const;
  inline ::performance::Performance_innersimplePerformance_6* mutable_att2();
  inline ::performance::Performance_innersimplePerformance_6* release_att2();
  inline void set_allocated_att2(::performance::Performance_innersimplePerformance_6* att2);

  // required .performance.Performance.innersimplePerformance_6 att3 = 3;
  inline bool has_att3() const;
  inline void clear_att3();
  static const int kAtt3FieldNumber = 3;
  inline const ::performance::Performance_innersimplePerformance_6& att3() const;
  inline ::performance::Performance_innersimplePerformance_6* mutable_att3();
  inline ::performance::Performance_innersimplePerformance_6* release_att3();
  inline void set_allocated_att3(::performance::Performance_innersimplePerformance_6* att3);

  // required .performance.Performance.innersimplePerformance_6 att4 = 4;
  inline bool has_att4() const;
  inline void clear_att4();
  static const int kAtt4FieldNumber = 4;
  inline const ::performance::Performance_innersimplePerformance_6& att4() const;
  inline ::performance::Performance_innersimplePerformance_6* mutable_att4();
  inline ::performance::Performance_innersimplePerformance_6* release_att4();
  inline void set_allocated_att4(::performance::Performance_innersimplePerformance_6* att4);

  // required .performance.Performance.innersimplePerformance_6 att5 = 5;
  inline bool has_att5() const;
  inline void clear_att5();
  static const int kAtt5FieldNumber = 5;
  inline const ::performance::Performance_innersimplePerformance_6& att5() const;
  inline ::performance::Performance_innersimplePerformance_6* mutable_att5();
  inline ::performance::Performance_innersimplePerformance_6* release_att5();
  inline void set_allocated_att5(::performance::Performance_innersimplePerformance_6* att5);

  // required .performance.Performance.innersimplePerformance_6 att6 = 6;
  inline bool has_att6() const;
  inline void clear_att6();
  static const int kAtt6FieldNumber = 6;
  inline const ::performance::Performance_innersimplePerformance_6& att6() const;
  inline ::performance::Performance_innersimplePerformance_6* mutable_att6();
  inline ::performance::Performance_innersimplePerformance_6* release_att6();
  inline void set_allocated_att6(::performance::Performance_innersimplePerformance_6* att6);

  // @@protoc_insertion_point(class_scope:performance.Performance.outersimplePerformance_6)
 private:
  inline void set_has_att1();
  inline void clear_has_att1();
  inline void set_has_att2();
  inline void clear_has_att2();
  inline void set_has_att3();
  inline void clear_has_att3();
  inline void set_has_att4();
  inline void clear_has_att4();
  inline void set_has_att5();
  inline void clear_has_att5();
  inline void set_has_att6();
  inline void clear_has_att6();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::performance::Performance_innersimplePerformance_6* att1_;
  ::performance::Performance_innersimplePerformance_6* att2_;
  ::performance::Performance_innersimplePerformance_6* att3_;
  ::performance::Performance_innersimplePerformance_6* att4_;
  ::performance::Performance_innersimplePerformance_6* att5_;
  ::performance::Performance_innersimplePerformance_6* att6_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_PerformanceTest_2eproto();
  friend void protobuf_AssignDesc_PerformanceTest_2eproto();
  friend void protobuf_ShutdownFile_PerformanceTest_2eproto();

  void InitAsDefaultInstance();
  static Performance_outersimplePerformance_6* default_instance_;
};
// -------------------------------------------------------------------

class Performance_innersimplePerformance_8 : public ::google::protobuf::Message {
 public:
  Performance_innersimplePerformance_8();
  virtual ~Performance_innersimplePerformance_8();

  Performance_innersimplePerformance_8(const Performance_innersimplePerformance_8& from);

  inline Performance_innersimplePerformance_8& operator=(const Performance_innersimplePerformance_8& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Performance_innersimplePerformance_8& default_instance();

  void Swap(Performance_innersimplePerformance_8* other);

  // implements Message ----------------------------------------------

  Performance_innersimplePerformance_8* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Performance_innersimplePerformance_8& from);
  void MergeFrom(const Performance_innersimplePerformance_8& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 att1 = 1;
  inline bool has_att1() const;
  inline void clear_att1();
  static const int kAtt1FieldNumber = 1;
  inline ::google::protobuf::int32 att1() const;
  inline void set_att1(::google::protobuf::int32 value);

  // required int32 att2 = 2;
  inline bool has_att2() const;
  inline void clear_att2();
  static const int kAtt2FieldNumber = 2;
  inline ::google::protobuf::int32 att2() const;
  inline void set_att2(::google::protobuf::int32 value);

  // required int32 att3 = 3;
  inline bool has_att3() const;
  inline void clear_att3();
  static const int kAtt3FieldNumber = 3;
  inline ::google::protobuf::int32 att3() const;
  inline void set_att3(::google::protobuf::int32 value);

  // required int32 att4 = 4;
  inline bool has_att4() const;
  inline void clear_att4();
  static const int kAtt4FieldNumber = 4;
  inline ::google::protobuf::int32 att4() const;
  inline void set_att4(::google::protobuf::int32 value);

  // required int32 att5 = 5;
  inline bool has_att5() const;
  inline void clear_att5();
  static const int kAtt5FieldNumber = 5;
  inline ::google::protobuf::int32 att5() const;
  inline void set_att5(::google::protobuf::int32 value);

  // required int32 att6 = 6;
  inline bool has_att6() const;
  inline void clear_att6();
  static const int kAtt6FieldNumber = 6;
  inline ::google::protobuf::int32 att6() const;
  inline void set_att6(::google::protobuf::int32 value);

  // required int32 att7 = 7;
  inline bool has_att7() const;
  inline void clear_att7();
  static const int kAtt7FieldNumber = 7;
  inline ::google::protobuf::int32 att7() const;
  inline void set_att7(::google::protobuf::int32 value);

  // required int32 att8 = 8;
  inline bool has_att8() const;
  inline void clear_att8();
  static const int kAtt8FieldNumber = 8;
  inline ::google::protobuf::int32 att8() const;
  inline void set_att8(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:performance.Performance.innersimplePerformance_8)
 private:
  inline void set_has_att1();
  inline void clear_has_att1();
  inline void set_has_att2();
  inline void clear_has_att2();
  inline void set_has_att3();
  inline void clear_has_att3();
  inline void set_has_att4();
  inline void clear_has_att4();
  inline void set_has_att5();
  inline void clear_has_att5();
  inline void set_has_att6();
  inline void clear_has_att6();
  inline void set_has_att7();
  inline void clear_has_att7();
  inline void set_has_att8();
  inline void clear_has_att8();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 att1_;
  ::google::protobuf::int32 att2_;
  ::google::protobuf::int32 att3_;
  ::google::protobuf::int32 att4_;
  ::google::protobuf::int32 att5_;
  ::google::protobuf::int32 att6_;
  ::google::protobuf::int32 att7_;
  ::google::protobuf::int32 att8_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_PerformanceTest_2eproto();
  friend void protobuf_AssignDesc_PerformanceTest_2eproto();
  friend void protobuf_ShutdownFile_PerformanceTest_2eproto();

  void InitAsDefaultInstance();
  static Performance_innersimplePerformance_8* default_instance_;
};
// -------------------------------------------------------------------

class Performance_outersimplePerformance_8 : public ::google::protobuf::Message {
 public:
  Performance_outersimplePerformance_8();
  virtual ~Performance_outersimplePerformance_8();

  Performance_outersimplePerformance_8(const Performance_outersimplePerformance_8& from);

  inline Performance_outersimplePerformance_8& operator=(const Performance_outersimplePerformance_8& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Performance_outersimplePerformance_8& default_instance();

  void Swap(Performance_outersimplePerformance_8* other);

  // implements Message ----------------------------------------------

  Performance_outersimplePerformance_8* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Performance_outersimplePerformance_8& from);
  void MergeFrom(const Performance_outersimplePerformance_8& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .performance.Performance.innersimplePerformance_8 att1 = 1;
  inline bool has_att1() const;
  inline void clear_att1();
  static const int kAtt1FieldNumber = 1;
  inline const ::performance::Performance_innersimplePerformance_8& att1() const;
  inline ::performance::Performance_innersimplePerformance_8* mutable_att1();
  inline ::performance::Performance_innersimplePerformance_8* release_att1();
  inline void set_allocated_att1(::performance::Performance_innersimplePerformance_8* att1);

  // required .performance.Performance.innersimplePerformance_8 att2 = 2;
  inline bool has_att2() const;
  inline void clear_att2();
  static const int kAtt2FieldNumber = 2;
  inline const ::performance::Performance_innersimplePerformance_8& att2() const;
  inline ::performance::Performance_innersimplePerformance_8* mutable_att2();
  inline ::performance::Performance_innersimplePerformance_8* release_att2();
  inline void set_allocated_att2(::performance::Performance_innersimplePerformance_8* att2);

  // required .performance.Performance.innersimplePerformance_8 att3 = 3;
  inline bool has_att3() const;
  inline void clear_att3();
  static const int kAtt3FieldNumber = 3;
  inline const ::performance::Performance_innersimplePerformance_8& att3() const;
  inline ::performance::Performance_innersimplePerformance_8* mutable_att3();
  inline ::performance::Performance_innersimplePerformance_8* release_att3();
  inline void set_allocated_att3(::performance::Performance_innersimplePerformance_8* att3);

  // required .performance.Performance.innersimplePerformance_8 att4 = 4;
  inline bool has_att4() const;
  inline void clear_att4();
  static const int kAtt4FieldNumber = 4;
  inline const ::performance::Performance_innersimplePerformance_8& att4() const;
  inline ::performance::Performance_innersimplePerformance_8* mutable_att4();
  inline ::performance::Performance_innersimplePerformance_8* release_att4();
  inline void set_allocated_att4(::performance::Performance_innersimplePerformance_8* att4);

  // required .performance.Performance.innersimplePerformance_8 att5 = 5;
  inline bool has_att5() const;
  inline void clear_att5();
  static const int kAtt5FieldNumber = 5;
  inline const ::performance::Performance_innersimplePerformance_8& att5() const;
  inline ::performance::Performance_innersimplePerformance_8* mutable_att5();
  inline ::performance::Performance_innersimplePerformance_8* release_att5();
  inline void set_allocated_att5(::performance::Performance_innersimplePerformance_8* att5);

  // required .performance.Performance.innersimplePerformance_8 att6 = 6;
  inline bool has_att6() const;
  inline void clear_att6();
  static const int kAtt6FieldNumber = 6;
  inline const ::performance::Performance_innersimplePerformance_8& att6() const;
  inline ::performance::Performance_innersimplePerformance_8* mutable_att6();
  inline ::performance::Performance_innersimplePerformance_8* release_att6();
  inline void set_allocated_att6(::performance::Performance_innersimplePerformance_8* att6);

  // required .performance.Performance.innersimplePerformance_8 att7 = 7;
  inline bool has_att7() const;
  inline void clear_att7();
  static const int kAtt7FieldNumber = 7;
  inline const ::performance::Performance_innersimplePerformance_8& att7() const;
  inline ::performance::Performance_innersimplePerformance_8* mutable_att7();
  inline ::performance::Performance_innersimplePerformance_8* release_att7();
  inline void set_allocated_att7(::performance::Performance_innersimplePerformance_8* att7);

  // required .performance.Performance.innersimplePerformance_8 att8 = 8;
  inline bool has_att8() const;
  inline void clear_att8();
  static const int kAtt8FieldNumber = 8;
  inline const ::performance::Performance_innersimplePerformance_8& att8() const;
  inline ::performance::Performance_innersimplePerformance_8* mutable_att8();
  inline ::performance::Performance_innersimplePerformance_8* release_att8();
  inline void set_allocated_att8(::performance::Performance_innersimplePerformance_8* att8);

  // @@protoc_insertion_point(class_scope:performance.Performance.outersimplePerformance_8)
 private:
  inline void set_has_att1();
  inline void clear_has_att1();
  inline void set_has_att2();
  inline void clear_has_att2();
  inline void set_has_att3();
  inline void clear_has_att3();
  inline void set_has_att4();
  inline void clear_has_att4();
  inline void set_has_att5();
  inline void clear_has_att5();
  inline void set_has_att6();
  inline void clear_has_att6();
  inline void set_has_att7();
  inline void clear_has_att7();
  inline void set_has_att8();
  inline void clear_has_att8();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::performance::Performance_innersimplePerformance_8* att1_;
  ::performance::Performance_innersimplePerformance_8* att2_;
  ::performance::Performance_innersimplePerformance_8* att3_;
  ::performance::Performance_innersimplePerformance_8* att4_;
  ::performance::Performance_innersimplePerformance_8* att5_;
  ::performance::Performance_innersimplePerformance_8* att6_;
  ::performance::Performance_innersimplePerformance_8* att7_;
  ::performance::Performance_innersimplePerformance_8* att8_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_PerformanceTest_2eproto();
  friend void protobuf_AssignDesc_PerformanceTest_2eproto();
  friend void protobuf_ShutdownFile_PerformanceTest_2eproto();

  void InitAsDefaultInstance();
  static Performance_outersimplePerformance_8* default_instance_;
};
// -------------------------------------------------------------------

class Performance_innersimplePerformance_10 : public ::google::protobuf::Message {
 public:
  Performance_innersimplePerformance_10();
  virtual ~Performance_innersimplePerformance_10();

  Performance_innersimplePerformance_10(const Performance_innersimplePerformance_10& from);

  inline Performance_innersimplePerformance_10& operator=(const Performance_innersimplePerformance_10& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Performance_innersimplePerformance_10& default_instance();

  void Swap(Performance_innersimplePerformance_10* other);

  // implements Message ----------------------------------------------

  Performance_innersimplePerformance_10* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Performance_innersimplePerformance_10& from);
  void MergeFrom(const Performance_innersimplePerformance_10& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 att1 = 1;
  inline bool has_att1() const;
  inline void clear_att1();
  static const int kAtt1FieldNumber = 1;
  inline ::google::protobuf::int32 att1() const;
  inline void set_att1(::google::protobuf::int32 value);

  // required int32 att2 = 2;
  inline bool has_att2() const;
  inline void clear_att2();
  static const int kAtt2FieldNumber = 2;
  inline ::google::protobuf::int32 att2() const;
  inline void set_att2(::google::protobuf::int32 value);

  // required int32 att3 = 3;
  inline bool has_att3() const;
  inline void clear_att3();
  static const int kAtt3FieldNumber = 3;
  inline ::google::protobuf::int32 att3() const;
  inline void set_att3(::google::protobuf::int32 value);

  // required int32 att4 = 4;
  inline bool has_att4() const;
  inline void clear_att4();
  static const int kAtt4FieldNumber = 4;
  inline ::google::protobuf::int32 att4() const;
  inline void set_att4(::google::protobuf::int32 value);

  // required int32 att5 = 5;
  inline bool has_att5() const;
  inline void clear_att5();
  static const int kAtt5FieldNumber = 5;
  inline ::google::protobuf::int32 att5() const;
  inline void set_att5(::google::protobuf::int32 value);

  // required int32 att6 = 6;
  inline bool has_att6() const;
  inline void clear_att6();
  static const int kAtt6FieldNumber = 6;
  inline ::google::protobuf::int32 att6() const;
  inline void set_att6(::google::protobuf::int32 value);

  // required int32 att7 = 7;
  inline bool has_att7() const;
  inline void clear_att7();
  static const int kAtt7FieldNumber = 7;
  inline ::google::protobuf::int32 att7() const;
  inline void set_att7(::google::protobuf::int32 value);

  // required int32 att8 = 8;
  inline bool has_att8() const;
  inline void clear_att8();
  static const int kAtt8FieldNumber = 8;
  inline ::google::protobuf::int32 att8() const;
  inline void set_att8(::google::protobuf::int32 value);

  // required int32 att9 = 9;
  inline bool has_att9() const;
  inline void clear_att9();
  static const int kAtt9FieldNumber = 9;
  inline ::google::protobuf::int32 att9() const;
  inline void set_att9(::google::protobuf::int32 value);

  // required int32 att10 = 10;
  inline bool has_att10() const;
  inline void clear_att10();
  static const int kAtt10FieldNumber = 10;
  inline ::google::protobuf::int32 att10() const;
  inline void set_att10(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:performance.Performance.innersimplePerformance_10)
 private:
  inline void set_has_att1();
  inline void clear_has_att1();
  inline void set_has_att2();
  inline void clear_has_att2();
  inline void set_has_att3();
  inline void clear_has_att3();
  inline void set_has_att4();
  inline void clear_has_att4();
  inline void set_has_att5();
  inline void clear_has_att5();
  inline void set_has_att6();
  inline void clear_has_att6();
  inline void set_has_att7();
  inline void clear_has_att7();
  inline void set_has_att8();
  inline void clear_has_att8();
  inline void set_has_att9();
  inline void clear_has_att9();
  inline void set_has_att10();
  inline void clear_has_att10();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 att1_;
  ::google::protobuf::int32 att2_;
  ::google::protobuf::int32 att3_;
  ::google::protobuf::int32 att4_;
  ::google::protobuf::int32 att5_;
  ::google::protobuf::int32 att6_;
  ::google::protobuf::int32 att7_;
  ::google::protobuf::int32 att8_;
  ::google::protobuf::int32 att9_;
  ::google::protobuf::int32 att10_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_PerformanceTest_2eproto();
  friend void protobuf_AssignDesc_PerformanceTest_2eproto();
  friend void protobuf_ShutdownFile_PerformanceTest_2eproto();

  void InitAsDefaultInstance();
  static Performance_innersimplePerformance_10* default_instance_;
};
// -------------------------------------------------------------------

class Performance_outersimplePerformance_10 : public ::google::protobuf::Message {
 public:
  Performance_outersimplePerformance_10();
  virtual ~Performance_outersimplePerformance_10();

  Performance_outersimplePerformance_10(const Performance_outersimplePerformance_10& from);

  inline Performance_outersimplePerformance_10& operator=(const Performance_outersimplePerformance_10& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Performance_outersimplePerformance_10& default_instance();

  void Swap(Performance_outersimplePerformance_10* other);

  // implements Message ----------------------------------------------

  Performance_outersimplePerformance_10* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Performance_outersimplePerformance_10& from);
  void MergeFrom(const Performance_outersimplePerformance_10& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .performance.Performance.innersimplePerformance_10 att1 = 1;
  inline bool has_att1() const;
  inline void clear_att1();
  static const int kAtt1FieldNumber = 1;
  inline const ::performance::Performance_innersimplePerformance_10& att1() const;
  inline ::performance::Performance_innersimplePerformance_10* mutable_att1();
  inline ::performance::Performance_innersimplePerformance_10* release_att1();
  inline void set_allocated_att1(::performance::Performance_innersimplePerformance_10* att1);

  // required .performance.Performance.innersimplePerformance_10 att2 = 2;
  inline bool has_att2() const;
  inline void clear_att2();
  static const int kAtt2FieldNumber = 2;
  inline const ::performance::Performance_innersimplePerformance_10& att2() const;
  inline ::performance::Performance_innersimplePerformance_10* mutable_att2();
  inline ::performance::Performance_innersimplePerformance_10* release_att2();
  inline void set_allocated_att2(::performance::Performance_innersimplePerformance_10* att2);

  // required .performance.Performance.innersimplePerformance_10 att3 = 3;
  inline bool has_att3() const;
  inline void clear_att3();
  static const int kAtt3FieldNumber = 3;
  inline const ::performance::Performance_innersimplePerformance_10& att3() const;
  inline ::performance::Performance_innersimplePerformance_10* mutable_att3();
  inline ::performance::Performance_innersimplePerformance_10* release_att3();
  inline void set_allocated_att3(::performance::Performance_innersimplePerformance_10* att3);

  // required .performance.Performance.innersimplePerformance_10 att4 = 4;
  inline bool has_att4() const;
  inline void clear_att4();
  static const int kAtt4FieldNumber = 4;
  inline const ::performance::Performance_innersimplePerformance_10& att4() const;
  inline ::performance::Performance_innersimplePerformance_10* mutable_att4();
  inline ::performance::Performance_innersimplePerformance_10* release_att4();
  inline void set_allocated_att4(::performance::Performance_innersimplePerformance_10* att4);

  // required .performance.Performance.innersimplePerformance_10 att5 = 5;
  inline bool has_att5() const;
  inline void clear_att5();
  static const int kAtt5FieldNumber = 5;
  inline const ::performance::Performance_innersimplePerformance_10& att5() const;
  inline ::performance::Performance_innersimplePerformance_10* mutable_att5();
  inline ::performance::Performance_innersimplePerformance_10* release_att5();
  inline void set_allocated_att5(::performance::Performance_innersimplePerformance_10* att5);

  // required .performance.Performance.innersimplePerformance_10 att6 = 6;
  inline bool has_att6() const;
  inline void clear_att6();
  static const int kAtt6FieldNumber = 6;
  inline const ::performance::Performance_innersimplePerformance_10& att6() const;
  inline ::performance::Performance_innersimplePerformance_10* mutable_att6();
  inline ::performance::Performance_innersimplePerformance_10* release_att6();
  inline void set_allocated_att6(::performance::Performance_innersimplePerformance_10* att6);

  // required .performance.Performance.innersimplePerformance_10 att7 = 7;
  inline bool has_att7() const;
  inline void clear_att7();
  static const int kAtt7FieldNumber = 7;
  inline const ::performance::Performance_innersimplePerformance_10& att7() const;
  inline ::performance::Performance_innersimplePerformance_10* mutable_att7();
  inline ::performance::Performance_innersimplePerformance_10* release_att7();
  inline void set_allocated_att7(::performance::Performance_innersimplePerformance_10* att7);

  // required .performance.Performance.innersimplePerformance_10 att8 = 8;
  inline bool has_att8() const;
  inline void clear_att8();
  static const int kAtt8FieldNumber = 8;
  inline const ::performance::Performance_innersimplePerformance_10& att8() const;
  inline ::performance::Performance_innersimplePerformance_10* mutable_att8();
  inline ::performance::Performance_innersimplePerformance_10* release_att8();
  inline void set_allocated_att8(::performance::Performance_innersimplePerformance_10* att8);

  // required .performance.Performance.innersimplePerformance_10 att9 = 9;
  inline bool has_att9() const;
  inline void clear_att9();
  static const int kAtt9FieldNumber = 9;
  inline const ::performance::Performance_innersimplePerformance_10& att9() const;
  inline ::performance::Performance_innersimplePerformance_10* mutable_att9();
  inline ::performance::Performance_innersimplePerformance_10* release_att9();
  inline void set_allocated_att9(::performance::Performance_innersimplePerformance_10* att9);

  // required .performance.Performance.innersimplePerformance_10 att10 = 10;
  inline bool has_att10() const;
  inline void clear_att10();
  static const int kAtt10FieldNumber = 10;
  inline const ::performance::Performance_innersimplePerformance_10& att10() const;
  inline ::performance::Performance_innersimplePerformance_10* mutable_att10();
  inline ::performance::Performance_innersimplePerformance_10* release_att10();
  inline void set_allocated_att10(::performance::Performance_innersimplePerformance_10* att10);

  // @@protoc_insertion_point(class_scope:performance.Performance.outersimplePerformance_10)
 private:
  inline void set_has_att1();
  inline void clear_has_att1();
  inline void set_has_att2();
  inline void clear_has_att2();
  inline void set_has_att3();
  inline void clear_has_att3();
  inline void set_has_att4();
  inline void clear_has_att4();
  inline void set_has_att5();
  inline void clear_has_att5();
  inline void set_has_att6();
  inline void clear_has_att6();
  inline void set_has_att7();
  inline void clear_has_att7();
  inline void set_has_att8();
  inline void clear_has_att8();
  inline void set_has_att9();
  inline void clear_has_att9();
  inline void set_has_att10();
  inline void clear_has_att10();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::performance::Performance_innersimplePerformance_10* att1_;
  ::performance::Performance_innersimplePerformance_10* att2_;
  ::performance::Performance_innersimplePerformance_10* att3_;
  ::performance::Performance_innersimplePerformance_10* att4_;
  ::performance::Performance_innersimplePerformance_10* att5_;
  ::performance::Performance_innersimplePerformance_10* att6_;
  ::performance::Performance_innersimplePerformance_10* att7_;
  ::performance::Performance_innersimplePerformance_10* att8_;
  ::performance::Performance_innersimplePerformance_10* att9_;
  ::performance::Performance_innersimplePerformance_10* att10_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_PerformanceTest_2eproto();
  friend void protobuf_AssignDesc_PerformanceTest_2eproto();
  friend void protobuf_ShutdownFile_PerformanceTest_2eproto();

  void InitAsDefaultInstance();
  static Performance_outersimplePerformance_10* default_instance_;
};
// -------------------------------------------------------------------

class Performance_innercomplexPerformance_1 : public ::google::protobuf::Message {
 public:
  Performance_innercomplexPerformance_1();
  virtual ~Performance_innercomplexPerformance_1();

  Performance_innercomplexPerformance_1(const Performance_innercomplexPerformance_1& from);

  inline Performance_innercomplexPerformance_1& operator=(const Performance_innercomplexPerformance_1& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Performance_innercomplexPerformance_1& default_instance();

  void Swap(Performance_innercomplexPerformance_1* other);

  // implements Message ----------------------------------------------

  Performance_innercomplexPerformance_1* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Performance_innercomplexPerformance_1& from);
  void MergeFrom(const Performance_innercomplexPerformance_1& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 att1 = 1;
  inline bool has_att1() const;
  inline void clear_att1();
  static const int kAtt1FieldNumber = 1;
  inline ::google::protobuf::int32 att1() const;
  inline void set_att1(::google::protobuf::int32 value);

  // required int64 att2 = 2;
  inline bool has_att2() const;
  inline void clear_att2();
  static const int kAtt2FieldNumber = 2;
  inline ::google::protobuf::int64 att2() const;
  inline void set_att2(::google::protobuf::int64 value);

  // required string att3 = 3;
  inline bool has_att3() const;
  inline void clear_att3();
  static const int kAtt3FieldNumber = 3;
  inline const ::std::string& att3() const;
  inline void set_att3(const ::std::string& value);
  inline void set_att3(const char* value);
  inline void set_att3(const char* value, size_t size);
  inline ::std::string* mutable_att3();
  inline ::std::string* release_att3();
  inline void set_allocated_att3(::std::string* att3);

  // required float att4 = 4;
  inline bool has_att4() const;
  inline void clear_att4();
  static const int kAtt4FieldNumber = 4;
  inline float att4() const;
  inline void set_att4(float value);

  // required double att5 = 5;
  inline bool has_att5() const;
  inline void clear_att5();
  static const int kAtt5FieldNumber = 5;
  inline double att5() const;
  inline void set_att5(double value);

  // required bool att6 = 6;
  inline bool has_att6() const;
  inline void clear_att6();
  static const int kAtt6FieldNumber = 6;
  inline bool att6() const;
  inline void set_att6(bool value);

  // @@protoc_insertion_point(class_scope:performance.Performance.innercomplexPerformance_1)
 private:
  inline void set_has_att1();
  inline void clear_has_att1();
  inline void set_has_att2();
  inline void clear_has_att2();
  inline void set_has_att3();
  inline void clear_has_att3();
  inline void set_has_att4();
  inline void clear_has_att4();
  inline void set_has_att5();
  inline void clear_has_att5();
  inline void set_has_att6();
  inline void clear_has_att6();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 att2_;
  ::google::protobuf::int32 att1_;
  float att4_;
  ::std::string* att3_;
  double att5_;
  bool att6_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_PerformanceTest_2eproto();
  friend void protobuf_AssignDesc_PerformanceTest_2eproto();
  friend void protobuf_ShutdownFile_PerformanceTest_2eproto();

  void InitAsDefaultInstance();
  static Performance_innercomplexPerformance_1* default_instance_;
};
// -------------------------------------------------------------------

class Performance_outercomplexPerformance_1 : public ::google::protobuf::Message {
 public:
  Performance_outercomplexPerformance_1();
  virtual ~Performance_outercomplexPerformance_1();

  Performance_outercomplexPerformance_1(const Performance_outercomplexPerformance_1& from);

  inline Performance_outercomplexPerformance_1& operator=(const Performance_outercomplexPerformance_1& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Performance_outercomplexPerformance_1& default_instance();

  void Swap(Performance_outercomplexPerformance_1* other);

  // implements Message ----------------------------------------------

  Performance_outercomplexPerformance_1* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Performance_outercomplexPerformance_1& from);
  void MergeFrom(const Performance_outercomplexPerformance_1& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 att1 = 1;
  inline bool has_att1() const;
  inline void clear_att1();
  static const int kAtt1FieldNumber = 1;
  inline ::google::protobuf::int32 att1() const;
  inline void set_att1(::google::protobuf::int32 value);

  // required int64 att2 = 2;
  inline bool has_att2() const;
  inline void clear_att2();
  static const int kAtt2FieldNumber = 2;
  inline ::google::protobuf::int64 att2() const;
  inline void set_att2(::google::protobuf::int64 value);

  // required string att3 = 3;
  inline bool has_att3() const;
  inline void clear_att3();
  static const int kAtt3FieldNumber = 3;
  inline const ::std::string& att3() const;
  inline void set_att3(const ::std::string& value);
  inline void set_att3(const char* value);
  inline void set_att3(const char* value, size_t size);
  inline ::std::string* mutable_att3();
  inline ::std::string* release_att3();
  inline void set_allocated_att3(::std::string* att3);

  // required .performance.Performance.innercomplexPerformance_1 att4 = 4;
  inline bool has_att4() const;
  inline void clear_att4();
  static const int kAtt4FieldNumber = 4;
  inline const ::performance::Performance_innercomplexPerformance_1& att4() const;
  inline ::performance::Performance_innercomplexPerformance_1* mutable_att4();
  inline ::performance::Performance_innercomplexPerformance_1* release_att4();
  inline void set_allocated_att4(::performance::Performance_innercomplexPerformance_1* att4);

  // required float att5 = 5;
  inline bool has_att5() const;
  inline void clear_att5();
  static const int kAtt5FieldNumber = 5;
  inline float att5() const;
  inline void set_att5(float value);

  // required double att6 = 6;
  inline bool has_att6() const;
  inline void clear_att6();
  static const int kAtt6FieldNumber = 6;
  inline double att6() const;
  inline void set_att6(double value);

  // required bool att7 = 7;
  inline bool has_att7() const;
  inline void clear_att7();
  static const int kAtt7FieldNumber = 7;
  inline bool att7() const;
  inline void set_att7(bool value);

  // @@protoc_insertion_point(class_scope:performance.Performance.outercomplexPerformance_1)
 private:
  inline void set_has_att1();
  inline void clear_has_att1();
  inline void set_has_att2();
  inline void clear_has_att2();
  inline void set_has_att3();
  inline void clear_has_att3();
  inline void set_has_att4();
  inline void clear_has_att4();
  inline void set_has_att5();
  inline void clear_has_att5();
  inline void set_has_att6();
  inline void clear_has_att6();
  inline void set_has_att7();
  inline void clear_has_att7();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 att2_;
  ::std::string* att3_;
  ::google::protobuf::int32 att1_;
  float att5_;
  ::performance::Performance_innercomplexPerformance_1* att4_;
  double att6_;
  bool att7_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_PerformanceTest_2eproto();
  friend void protobuf_AssignDesc_PerformanceTest_2eproto();
  friend void protobuf_ShutdownFile_PerformanceTest_2eproto();

  void InitAsDefaultInstance();
  static Performance_outercomplexPerformance_1* default_instance_;
};
// -------------------------------------------------------------------

class Performance_innercomplexPerformance_2 : public ::google::protobuf::Message {
 public:
  Performance_innercomplexPerformance_2();
  virtual ~Performance_innercomplexPerformance_2();

  Performance_innercomplexPerformance_2(const Performance_innercomplexPerformance_2& from);

  inline Performance_innercomplexPerformance_2& operator=(const Performance_innercomplexPerformance_2& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Performance_innercomplexPerformance_2& default_instance();

  void Swap(Performance_innercomplexPerformance_2* other);

  // implements Message ----------------------------------------------

  Performance_innercomplexPerformance_2* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Performance_innercomplexPerformance_2& from);
  void MergeFrom(const Performance_innercomplexPerformance_2& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 att1 = 1;
  inline bool has_att1() const;
  inline void clear_att1();
  static const int kAtt1FieldNumber = 1;
  inline ::google::protobuf::int32 att1() const;
  inline void set_att1(::google::protobuf::int32 value);

  // required int32 att2 = 2;
  inline bool has_att2() const;
  inline void clear_att2();
  static const int kAtt2FieldNumber = 2;
  inline ::google::protobuf::int32 att2() const;
  inline void set_att2(::google::protobuf::int32 value);

  // required int64 att3 = 3;
  inline bool has_att3() const;
  inline void clear_att3();
  static const int kAtt3FieldNumber = 3;
  inline ::google::protobuf::int64 att3() const;
  inline void set_att3(::google::protobuf::int64 value);

  // required int64 att4 = 4;
  inline bool has_att4() const;
  inline void clear_att4();
  static const int kAtt4FieldNumber = 4;
  inline ::google::protobuf::int64 att4() const;
  inline void set_att4(::google::protobuf::int64 value);

  // required string att5 = 5;
  inline bool has_att5() const;
  inline void clear_att5();
  static const int kAtt5FieldNumber = 5;
  inline const ::std::string& att5() const;
  inline void set_att5(const ::std::string& value);
  inline void set_att5(const char* value);
  inline void set_att5(const char* value, size_t size);
  inline ::std::string* mutable_att5();
  inline ::std::string* release_att5();
  inline void set_allocated_att5(::std::string* att5);

  // required string att6 = 6;
  inline bool has_att6() const;
  inline void clear_att6();
  static const int kAtt6FieldNumber = 6;
  inline const ::std::string& att6() const;
  inline void set_att6(const ::std::string& value);
  inline void set_att6(const char* value);
  inline void set_att6(const char* value, size_t size);
  inline ::std::string* mutable_att6();
  inline ::std::string* release_att6();
  inline void set_allocated_att6(::std::string* att6);

  // required float att7 = 7;
  inline bool has_att7() const;
  inline void clear_att7();
  static const int kAtt7FieldNumber = 7;
  inline float att7() const;
  inline void set_att7(float value);

  // required float att8 = 8;
  inline bool has_att8() const;
  inline void clear_att8();
  static const int kAtt8FieldNumber = 8;
  inline float att8() const;
  inline void set_att8(float value);

  // required double att9 = 9;
  inline bool has_att9() const;
  inline void clear_att9();
  static const int kAtt9FieldNumber = 9;
  inline double att9() const;
  inline void set_att9(double value);

  // required double att10 = 10;
  inline bool has_att10() const;
  inline void clear_att10();
  static const int kAtt10FieldNumber = 10;
  inline double att10() const;
  inline void set_att10(double value);

  // required bool att11 = 11;
  inline bool has_att11() const;
  inline void clear_att11();
  static const int kAtt11FieldNumber = 11;
  inline bool att11() const;
  inline void set_att11(bool value);

  // required bool att12 = 12;
  inline bool has_att12() const;
  inline void clear_att12();
  static const int kAtt12FieldNumber = 12;
  inline bool att12() const;
  inline void set_att12(bool value);

  // @@protoc_insertion_point(class_scope:performance.Performance.innercomplexPerformance_2)
 private:
  inline void set_has_att1();
  inline void clear_has_att1();
  inline void set_has_att2();
  inline void clear_has_att2();
  inline void set_has_att3();
  inline void clear_has_att3();
  inline void set_has_att4();
  inline void clear_has_att4();
  inline void set_has_att5();
  inline void clear_has_att5();
  inline void set_has_att6();
  inline void clear_has_att6();
  inline void set_has_att7();
  inline void clear_has_att7();
  inline void set_has_att8();
  inline void clear_has_att8();
  inline void set_has_att9();
  inline void clear_has_att9();
  inline void set_has_att10();
  inline void clear_has_att10();
  inline void set_has_att11();
  inline void clear_has_att11();
  inline void set_has_att12();
  inline void clear_has_att12();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 att1_;
  ::google::protobuf::int32 att2_;
  ::google::protobuf::int64 att3_;
  ::google::protobuf::int64 att4_;
  ::std::string* att5_;
  ::std::string* att6_;
  float att7_;
  float att8_;
  double att9_;
  double att10_;
  bool att11_;
  bool att12_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];

  friend void  protobuf_AddDesc_PerformanceTest_2eproto();
  friend void protobuf_AssignDesc_PerformanceTest_2eproto();
  friend void protobuf_ShutdownFile_PerformanceTest_2eproto();

  void InitAsDefaultInstance();
  static Performance_innercomplexPerformance_2* default_instance_;
};
// -------------------------------------------------------------------

class Performance_outercomplexPerformance_2 : public ::google::protobuf::Message {
 public:
  Performance_outercomplexPerformance_2();
  virtual ~Performance_outercomplexPerformance_2();

  Performance_outercomplexPerformance_2(const Performance_outercomplexPerformance_2& from);

  inline Performance_outercomplexPerformance_2& operator=(const Performance_outercomplexPerformance_2& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Performance_outercomplexPerformance_2& default_instance();

  void Swap(Performance_outercomplexPerformance_2* other);

  // implements Message ----------------------------------------------

  Performance_outercomplexPerformance_2* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Performance_outercomplexPerformance_2& from);
  void MergeFrom(const Performance_outercomplexPerformance_2& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 att1 = 1;
  inline bool has_att1() const;
  inline void clear_att1();
  static const int kAtt1FieldNumber = 1;
  inline ::google::protobuf::int32 att1() const;
  inline void set_att1(::google::protobuf::int32 value);

  // required int64 att2 = 2;
  inline bool has_att2() const;
  inline void clear_att2();
  static const int kAtt2FieldNumber = 2;
  inline ::google::protobuf::int64 att2() const;
  inline void set_att2(::google::protobuf::int64 value);

  // required string att3 = 3;
  inline bool has_att3() const;
  inline void clear_att3();
  static const int kAtt3FieldNumber = 3;
  inline const ::std::string& att3() const;
  inline void set_att3(const ::std::string& value);
  inline void set_att3(const char* value);
  inline void set_att3(const char* value, size_t size);
  inline ::std::string* mutable_att3();
  inline ::std::string* release_att3();
  inline void set_allocated_att3(::std::string* att3);

  // required .performance.Performance.innercomplexPerformance_2 att4 = 4;
  inline bool has_att4() const;
  inline void clear_att4();
  static const int kAtt4FieldNumber = 4;
  inline const ::performance::Performance_innercomplexPerformance_2& att4() const;
  inline ::performance::Performance_innercomplexPerformance_2* mutable_att4();
  inline ::performance::Performance_innercomplexPerformance_2* release_att4();
  inline void set_allocated_att4(::performance::Performance_innercomplexPerformance_2* att4);

  // required float att5 = 5;
  inline bool has_att5() const;
  inline void clear_att5();
  static const int kAtt5FieldNumber = 5;
  inline float att5() const;
  inline void set_att5(float value);

  // required double att6 = 6;
  inline bool has_att6() const;
  inline void clear_att6();
  static const int kAtt6FieldNumber = 6;
  inline double att6() const;
  inline void set_att6(double value);

  // required bool att7 = 7;
  inline bool has_att7() const;
  inline void clear_att7();
  static const int kAtt7FieldNumber = 7;
  inline bool att7() const;
  inline void set_att7(bool value);

  // required int64 att8 = 8;
  inline bool has_att8() const;
  inline void clear_att8();
  static const int kAtt8FieldNumber = 8;
  inline ::google::protobuf::int64 att8() const;
  inline void set_att8(::google::protobuf::int64 value);

  // required string att9 = 9;
  inline bool has_att9() const;
  inline void clear_att9();
  static const int kAtt9FieldNumber = 9;
  inline const ::std::string& att9() const;
  inline void set_att9(const ::std::string& value);
  inline void set_att9(const char* value);
  inline void set_att9(const char* value, size_t size);
  inline ::std::string* mutable_att9();
  inline ::std::string* release_att9();
  inline void set_allocated_att9(::std::string* att9);

  // required .performance.Performance.innercomplexPerformance_2 att10 = 10;
  inline bool has_att10() const;
  inline void clear_att10();
  static const int kAtt10FieldNumber = 10;
  inline const ::performance::Performance_innercomplexPerformance_2& att10() const;
  inline ::performance::Performance_innercomplexPerformance_2* mutable_att10();
  inline ::performance::Performance_innercomplexPerformance_2* release_att10();
  inline void set_allocated_att10(::performance::Performance_innercomplexPerformance_2* att10);

  // required float att11 = 11;
  inline bool has_att11() const;
  inline void clear_att11();
  static const int kAtt11FieldNumber = 11;
  inline float att11() const;
  inline void set_att11(float value);

  // required double att12 = 12;
  inline bool has_att12() const;
  inline void clear_att12();
  static const int kAtt12FieldNumber = 12;
  inline double att12() const;
  inline void set_att12(double value);

  // required bool att13 = 13;
  inline bool has_att13() const;
  inline void clear_att13();
  static const int kAtt13FieldNumber = 13;
  inline bool att13() const;
  inline void set_att13(bool value);

  // @@protoc_insertion_point(class_scope:performance.Performance.outercomplexPerformance_2)
 private:
  inline void set_has_att1();
  inline void clear_has_att1();
  inline void set_has_att2();
  inline void clear_has_att2();
  inline void set_has_att3();
  inline void clear_has_att3();
  inline void set_has_att4();
  inline void clear_has_att4();
  inline void set_has_att5();
  inline void clear_has_att5();
  inline void set_has_att6();
  inline void clear_has_att6();
  inline void set_has_att7();
  inline void clear_has_att7();
  inline void set_has_att8();
  inline void clear_has_att8();
  inline void set_has_att9();
  inline void clear_has_att9();
  inline void set_has_att10();
  inline void clear_has_att10();
  inline void set_has_att11();
  inline void clear_has_att11();
  inline void set_has_att12();
  inline void clear_has_att12();
  inline void set_has_att13();
  inline void clear_has_att13();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 att2_;
  ::std::string* att3_;
  ::google::protobuf::int32 att1_;
  float att5_;
  ::performance::Performance_innercomplexPerformance_2* att4_;
  double att6_;
  ::google::protobuf::int64 att8_;
  ::std::string* att9_;
  ::performance::Performance_innercomplexPerformance_2* att10_;
  bool att7_;
  bool att13_;
  float att11_;
  double att12_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(13 + 31) / 32];

  friend void  protobuf_AddDesc_PerformanceTest_2eproto();
  friend void protobuf_AssignDesc_PerformanceTest_2eproto();
  friend void protobuf_ShutdownFile_PerformanceTest_2eproto();

  void InitAsDefaultInstance();
  static Performance_outercomplexPerformance_2* default_instance_;
};
// -------------------------------------------------------------------

class Performance_innercomplexPerformance_3 : public ::google::protobuf::Message {
 public:
  Performance_innercomplexPerformance_3();
  virtual ~Performance_innercomplexPerformance_3();

  Performance_innercomplexPerformance_3(const Performance_innercomplexPerformance_3& from);

  inline Performance_innercomplexPerformance_3& operator=(const Performance_innercomplexPerformance_3& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Performance_innercomplexPerformance_3& default_instance();

  void Swap(Performance_innercomplexPerformance_3* other);

  // implements Message ----------------------------------------------

  Performance_innercomplexPerformance_3* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Performance_innercomplexPerformance_3& from);
  void MergeFrom(const Performance_innercomplexPerformance_3& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 att1 = 1;
  inline bool has_att1() const;
  inline void clear_att1();
  static const int kAtt1FieldNumber = 1;
  inline ::google::protobuf::int32 att1() const;
  inline void set_att1(::google::protobuf::int32 value);

  // required int32 att2 = 2;
  inline bool has_att2() const;
  inline void clear_att2();
  static const int kAtt2FieldNumber = 2;
  inline ::google::protobuf::int32 att2() const;
  inline void set_att2(::google::protobuf::int32 value);

  // required int32 att3 = 3;
  inline bool has_att3() const;
  inline void clear_att3();
  static const int kAtt3FieldNumber = 3;
  inline ::google::protobuf::int32 att3() const;
  inline void set_att3(::google::protobuf::int32 value);

  // required int64 att4 = 4;
  inline bool has_att4() const;
  inline void clear_att4();
  static const int kAtt4FieldNumber = 4;
  inline ::google::protobuf::int64 att4() const;
  inline void set_att4(::google::protobuf::int64 value);

  // required int64 att5 = 5;
  inline bool has_att5() const;
  inline void clear_att5();
  static const int kAtt5FieldNumber = 5;
  inline ::google::protobuf::int64 att5() const;
  inline void set_att5(::google::protobuf::int64 value);

  // required int64 att6 = 6;
  inline bool has_att6() const;
  inline void clear_att6();
  static const int kAtt6FieldNumber = 6;
  inline ::google::protobuf::int64 att6() const;
  inline void set_att6(::google::protobuf::int64 value);

  // required string att7 = 7;
  inline bool has_att7() const;
  inline void clear_att7();
  static const int kAtt7FieldNumber = 7;
  inline const ::std::string& att7() const;
  inline void set_att7(const ::std::string& value);
  inline void set_att7(const char* value);
  inline void set_att7(const char* value, size_t size);
  inline ::std::string* mutable_att7();
  inline ::std::string* release_att7();
  inline void set_allocated_att7(::std::string* att7);

  // required string att8 = 8;
  inline bool has_att8() const;
  inline void clear_att8();
  static const int kAtt8FieldNumber = 8;
  inline const ::std::string& att8() const;
  inline void set_att8(const ::std::string& value);
  inline void set_att8(const char* value);
  inline void set_att8(const char* value, size_t size);
  inline ::std::string* mutable_att8();
  inline ::std::string* release_att8();
  inline void set_allocated_att8(::std::string* att8);

  // required string att9 = 9;
  inline bool has_att9() const;
  inline void clear_att9();
  static const int kAtt9FieldNumber = 9;
  inline const ::std::string& att9() const;
  inline void set_att9(const ::std::string& value);
  inline void set_att9(const char* value);
  inline void set_att9(const char* value, size_t size);
  inline ::std::string* mutable_att9();
  inline ::std::string* release_att9();
  inline void set_allocated_att9(::std::string* att9);

  // required float att10 = 10;
  inline bool has_att10() const;
  inline void clear_att10();
  static const int kAtt10FieldNumber = 10;
  inline float att10() const;
  inline void set_att10(float value);

  // required float att11 = 11;
  inline bool has_att11() const;
  inline void clear_att11();
  static const int kAtt11FieldNumber = 11;
  inline float att11() const;
  inline void set_att11(float value);

  // required float att12 = 12;
  inline bool has_att12() const;
  inline void clear_att12();
  static const int kAtt12FieldNumber = 12;
  inline float att12() const;
  inline void set_att12(float value);

  // required double att13 = 13;
  inline bool has_att13() const;
  inline void clear_att13();
  static const int kAtt13FieldNumber = 13;
  inline double att13() const;
  inline void set_att13(double value);

  // required double att14 = 14;
  inline bool has_att14() const;
  inline void clear_att14();
  static const int kAtt14FieldNumber = 14;
  inline double att14() const;
  inline void set_att14(double value);

  // required double att15 = 15;
  inline bool has_att15() const;
  inline void clear_att15();
  static const int kAtt15FieldNumber = 15;
  inline double att15() const;
  inline void set_att15(double value);

  // required bool att16 = 16;
  inline bool has_att16() const;
  inline void clear_att16();
  static const int kAtt16FieldNumber = 16;
  inline bool att16() const;
  inline void set_att16(bool value);

  // required bool att17 = 17;
  inline bool has_att17() const;
  inline void clear_att17();
  static const int kAtt17FieldNumber = 17;
  inline bool att17() const;
  inline void set_att17(bool value);

  // required bool att18 = 18;
  inline bool has_att18() const;
  inline void clear_att18();
  static const int kAtt18FieldNumber = 18;
  inline bool att18() const;
  inline void set_att18(bool value);

  // @@protoc_insertion_point(class_scope:performance.Performance.innercomplexPerformance_3)
 private:
  inline void set_has_att1();
  inline void clear_has_att1();
  inline void set_has_att2();
  inline void clear_has_att2();
  inline void set_has_att3();
  inline void clear_has_att3();
  inline void set_has_att4();
  inline void clear_has_att4();
  inline void set_has_att5();
  inline void clear_has_att5();
  inline void set_has_att6();
  inline void clear_has_att6();
  inline void set_has_att7();
  inline void clear_has_att7();
  inline void set_has_att8();
  inline void clear_has_att8();
  inline void set_has_att9();
  inline void clear_has_att9();
  inline void set_has_att10();
  inline void clear_has_att10();
  inline void set_has_att11();
  inline void clear_has_att11();
  inline void set_has_att12();
  inline void clear_has_att12();
  inline void set_has_att13();
  inline void clear_has_att13();
  inline void set_has_att14();
  inline void clear_has_att14();
  inline void set_has_att15();
  inline void clear_has_att15();
  inline void set_has_att16();
  inline void clear_has_att16();
  inline void set_has_att17();
  inline void clear_has_att17();
  inline void set_has_att18();
  inline void clear_has_att18();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 att1_;
  ::google::protobuf::int32 att2_;
  ::google::protobuf::int64 att4_;
  ::google::protobuf::int64 att5_;
  ::google::protobuf::int64 att6_;
  ::google::protobuf::int32 att3_;
  float att10_;
  ::std::string* att7_;
  ::std::string* att8_;
  ::std::string* att9_;
  float att11_;
  float att12_;
  double att13_;
  double att14_;
  double att15_;
  bool att16_;
  bool att17_;
  bool att18_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(18 + 31) / 32];

  friend void  protobuf_AddDesc_PerformanceTest_2eproto();
  friend void protobuf_AssignDesc_PerformanceTest_2eproto();
  friend void protobuf_ShutdownFile_PerformanceTest_2eproto();

  void InitAsDefaultInstance();
  static Performance_innercomplexPerformance_3* default_instance_;
};
// -------------------------------------------------------------------

class Performance_outercomplexPerformance_3 : public ::google::protobuf::Message {
 public:
  Performance_outercomplexPerformance_3();
  virtual ~Performance_outercomplexPerformance_3();

  Performance_outercomplexPerformance_3(const Performance_outercomplexPerformance_3& from);

  inline Performance_outercomplexPerformance_3& operator=(const Performance_outercomplexPerformance_3& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Performance_outercomplexPerformance_3& default_instance();

  void Swap(Performance_outercomplexPerformance_3* other);

  // implements Message ----------------------------------------------

  Performance_outercomplexPerformance_3* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Performance_outercomplexPerformance_3& from);
  void MergeFrom(const Performance_outercomplexPerformance_3& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 att1 = 1;
  inline bool has_att1() const;
  inline void clear_att1();
  static const int kAtt1FieldNumber = 1;
  inline ::google::protobuf::int32 att1() const;
  inline void set_att1(::google::protobuf::int32 value);

  // required int64 att2 = 2;
  inline bool has_att2() const;
  inline void clear_att2();
  static const int kAtt2FieldNumber = 2;
  inline ::google::protobuf::int64 att2() const;
  inline void set_att2(::google::protobuf::int64 value);

  // required string att3 = 3;
  inline bool has_att3() const;
  inline void clear_att3();
  static const int kAtt3FieldNumber = 3;
  inline const ::std::string& att3() const;
  inline void set_att3(const ::std::string& value);
  inline void set_att3(const char* value);
  inline void set_att3(const char* value, size_t size);
  inline ::std::string* mutable_att3();
  inline ::std::string* release_att3();
  inline void set_allocated_att3(::std::string* att3);

  // required .performance.Performance.innercomplexPerformance_3 att4 = 4;
  inline bool has_att4() const;
  inline void clear_att4();
  static const int kAtt4FieldNumber = 4;
  inline const ::performance::Performance_innercomplexPerformance_3& att4() const;
  inline ::performance::Performance_innercomplexPerformance_3* mutable_att4();
  inline ::performance::Performance_innercomplexPerformance_3* release_att4();
  inline void set_allocated_att4(::performance::Performance_innercomplexPerformance_3* att4);

  // required float att5 = 5;
  inline bool has_att5() const;
  inline void clear_att5();
  static const int kAtt5FieldNumber = 5;
  inline float att5() const;
  inline void set_att5(float value);

  // required double att6 = 6;
  inline bool has_att6() const;
  inline void clear_att6();
  static const int kAtt6FieldNumber = 6;
  inline double att6() const;
  inline void set_att6(double value);

  // required bool att7 = 7;
  inline bool has_att7() const;
  inline void clear_att7();
  static const int kAtt7FieldNumber = 7;
  inline bool att7() const;
  inline void set_att7(bool value);

  // required int64 att8 = 8;
  inline bool has_att8() const;
  inline void clear_att8();
  static const int kAtt8FieldNumber = 8;
  inline ::google::protobuf::int64 att8() const;
  inline void set_att8(::google::protobuf::int64 value);

  // required string att9 = 9;
  inline bool has_att9() const;
  inline void clear_att9();
  static const int kAtt9FieldNumber = 9;
  inline const ::std::string& att9() const;
  inline void set_att9(const ::std::string& value);
  inline void set_att9(const char* value);
  inline void set_att9(const char* value, size_t size);
  inline ::std::string* mutable_att9();
  inline ::std::string* release_att9();
  inline void set_allocated_att9(::std::string* att9);

  // required .performance.Performance.innercomplexPerformance_3 att10 = 10;
  inline bool has_att10() const;
  inline void clear_att10();
  static const int kAtt10FieldNumber = 10;
  inline const ::performance::Performance_innercomplexPerformance_3& att10() const;
  inline ::performance::Performance_innercomplexPerformance_3* mutable_att10();
  inline ::performance::Performance_innercomplexPerformance_3* release_att10();
  inline void set_allocated_att10(::performance::Performance_innercomplexPerformance_3* att10);

  // required float att11 = 11;
  inline bool has_att11() const;
  inline void clear_att11();
  static const int kAtt11FieldNumber = 11;
  inline float att11() const;
  inline void set_att11(float value);

  // required double att12 = 12;
  inline bool has_att12() const;
  inline void clear_att12();
  static const int kAtt12FieldNumber = 12;
  inline double att12() const;
  inline void set_att12(double value);

  // required bool att13 = 13;
  inline bool has_att13() const;
  inline void clear_att13();
  static const int kAtt13FieldNumber = 13;
  inline bool att13() const;
  inline void set_att13(bool value);

  // required string att14 = 14;
  inline bool has_att14() const;
  inline void clear_att14();
  static const int kAtt14FieldNumber = 14;
  inline const ::std::string& att14() const;
  inline void set_att14(const ::std::string& value);
  inline void set_att14(const char* value);
  inline void set_att14(const char* value, size_t size);
  inline ::std::string* mutable_att14();
  inline ::std::string* release_att14();
  inline void set_allocated_att14(::std::string* att14);

  // required .performance.Performance.innercomplexPerformance_3 att15 = 15;
  inline bool has_att15() const;
  inline void clear_att15();
  static const int kAtt15FieldNumber = 15;
  inline const ::performance::Performance_innercomplexPerformance_3& att15() const;
  inline ::performance::Performance_innercomplexPerformance_3* mutable_att15();
  inline ::performance::Performance_innercomplexPerformance_3* release_att15();
  inline void set_allocated_att15(::performance::Performance_innercomplexPerformance_3* att15);

  // required float att16 = 16;
  inline bool has_att16() const;
  inline void clear_att16();
  static const int kAtt16FieldNumber = 16;
  inline float att16() const;
  inline void set_att16(float value);

  // required double att17 = 17;
  inline bool has_att17() const;
  inline void clear_att17();
  static const int kAtt17FieldNumber = 17;
  inline double att17() const;
  inline void set_att17(double value);

  // required bool att18 = 18;
  inline bool has_att18() const;
  inline void clear_att18();
  static const int kAtt18FieldNumber = 18;
  inline bool att18() const;
  inline void set_att18(bool value);

  // @@protoc_insertion_point(class_scope:performance.Performance.outercomplexPerformance_3)
 private:
  inline void set_has_att1();
  inline void clear_has_att1();
  inline void set_has_att2();
  inline void clear_has_att2();
  inline void set_has_att3();
  inline void clear_has_att3();
  inline void set_has_att4();
  inline void clear_has_att4();
  inline void set_has_att5();
  inline void clear_has_att5();
  inline void set_has_att6();
  inline void clear_has_att6();
  inline void set_has_att7();
  inline void clear_has_att7();
  inline void set_has_att8();
  inline void clear_has_att8();
  inline void set_has_att9();
  inline void clear_has_att9();
  inline void set_has_att10();
  inline void clear_has_att10();
  inline void set_has_att11();
  inline void clear_has_att11();
  inline void set_has_att12();
  inline void clear_has_att12();
  inline void set_has_att13();
  inline void clear_has_att13();
  inline void set_has_att14();
  inline void clear_has_att14();
  inline void set_has_att15();
  inline void clear_has_att15();
  inline void set_has_att16();
  inline void clear_has_att16();
  inline void set_has_att17();
  inline void clear_has_att17();
  inline void set_has_att18();
  inline void clear_has_att18();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 att2_;
  ::std::string* att3_;
  ::google::protobuf::int32 att1_;
  float att5_;
  ::performance::Performance_innercomplexPerformance_3* att4_;
  double att6_;
  ::google::protobuf::int64 att8_;
  ::std::string* att9_;
  ::performance::Performance_innercomplexPerformance_3* att10_;
  double att12_;
  float att11_;
  bool att7_;
  bool att13_;
  bool att18_;
  ::std::string* att14_;
  ::performance::Performance_innercomplexPerformance_3* att15_;
  double att17_;
  float att16_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(18 + 31) / 32];

  friend void  protobuf_AddDesc_PerformanceTest_2eproto();
  friend void protobuf_AssignDesc_PerformanceTest_2eproto();
  friend void protobuf_ShutdownFile_PerformanceTest_2eproto();

  void InitAsDefaultInstance();
  static Performance_outercomplexPerformance_3* default_instance_;
};
// -------------------------------------------------------------------

class Performance_innercomplexPerformance_4 : public ::google::protobuf::Message {
 public:
  Performance_innercomplexPerformance_4();
  virtual ~Performance_innercomplexPerformance_4();

  Performance_innercomplexPerformance_4(const Performance_innercomplexPerformance_4& from);

  inline Performance_innercomplexPerformance_4& operator=(const Performance_innercomplexPerformance_4& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Performance_innercomplexPerformance_4& default_instance();

  void Swap(Performance_innercomplexPerformance_4* other);

  // implements Message ----------------------------------------------

  Performance_innercomplexPerformance_4* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Performance_innercomplexPerformance_4& from);
  void MergeFrom(const Performance_innercomplexPerformance_4& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 att1 = 1;
  inline bool has_att1() const;
  inline void clear_att1();
  static const int kAtt1FieldNumber = 1;
  inline ::google::protobuf::int32 att1() const;
  inline void set_att1(::google::protobuf::int32 value);

  // required int32 att2 = 2;
  inline bool has_att2() const;
  inline void clear_att2();
  static const int kAtt2FieldNumber = 2;
  inline ::google::protobuf::int32 att2() const;
  inline void set_att2(::google::protobuf::int32 value);

  // required int32 att3 = 3;
  inline bool has_att3() const;
  inline void clear_att3();
  static const int kAtt3FieldNumber = 3;
  inline ::google::protobuf::int32 att3() const;
  inline void set_att3(::google::protobuf::int32 value);

  // required int32 att4 = 4;
  inline bool has_att4() const;
  inline void clear_att4();
  static const int kAtt4FieldNumber = 4;
  inline ::google::protobuf::int32 att4() const;
  inline void set_att4(::google::protobuf::int32 value);

  // required int64 att5 = 5;
  inline bool has_att5() const;
  inline void clear_att5();
  static const int kAtt5FieldNumber = 5;
  inline ::google::protobuf::int64 att5() const;
  inline void set_att5(::google::protobuf::int64 value);

  // required int64 att6 = 6;
  inline bool has_att6() const;
  inline void clear_att6();
  static const int kAtt6FieldNumber = 6;
  inline ::google::protobuf::int64 att6() const;
  inline void set_att6(::google::protobuf::int64 value);

  // required int64 att7 = 7;
  inline bool has_att7() const;
  inline void clear_att7();
  static const int kAtt7FieldNumber = 7;
  inline ::google::protobuf::int64 att7() const;
  inline void set_att7(::google::protobuf::int64 value);

  // required int64 att8 = 8;
  inline bool has_att8() const;
  inline void clear_att8();
  static const int kAtt8FieldNumber = 8;
  inline ::google::protobuf::int64 att8() const;
  inline void set_att8(::google::protobuf::int64 value);

  // required string att9 = 9;
  inline bool has_att9() const;
  inline void clear_att9();
  static const int kAtt9FieldNumber = 9;
  inline const ::std::string& att9() const;
  inline void set_att9(const ::std::string& value);
  inline void set_att9(const char* value);
  inline void set_att9(const char* value, size_t size);
  inline ::std::string* mutable_att9();
  inline ::std::string* release_att9();
  inline void set_allocated_att9(::std::string* att9);

  // required string att10 = 10;
  inline bool has_att10() const;
  inline void clear_att10();
  static const int kAtt10FieldNumber = 10;
  inline const ::std::string& att10() const;
  inline void set_att10(const ::std::string& value);
  inline void set_att10(const char* value);
  inline void set_att10(const char* value, size_t size);
  inline ::std::string* mutable_att10();
  inline ::std::string* release_att10();
  inline void set_allocated_att10(::std::string* att10);

  // required string att11 = 11;
  inline bool has_att11() const;
  inline void clear_att11();
  static const int kAtt11FieldNumber = 11;
  inline const ::std::string& att11() const;
  inline void set_att11(const ::std::string& value);
  inline void set_att11(const char* value);
  inline void set_att11(const char* value, size_t size);
  inline ::std::string* mutable_att11();
  inline ::std::string* release_att11();
  inline void set_allocated_att11(::std::string* att11);

  // required string att12 = 12;
  inline bool has_att12() const;
  inline void clear_att12();
  static const int kAtt12FieldNumber = 12;
  inline const ::std::string& att12() const;
  inline void set_att12(const ::std::string& value);
  inline void set_att12(const char* value);
  inline void set_att12(const char* value, size_t size);
  inline ::std::string* mutable_att12();
  inline ::std::string* release_att12();
  inline void set_allocated_att12(::std::string* att12);

  // required float att13 = 13;
  inline bool has_att13() const;
  inline void clear_att13();
  static const int kAtt13FieldNumber = 13;
  inline float att13() const;
  inline void set_att13(float value);

  // required float att14 = 14;
  inline bool has_att14() const;
  inline void clear_att14();
  static const int kAtt14FieldNumber = 14;
  inline float att14() const;
  inline void set_att14(float value);

  // required float att15 = 15;
  inline bool has_att15() const;
  inline void clear_att15();
  static const int kAtt15FieldNumber = 15;
  inline float att15() const;
  inline void set_att15(float value);

  // required float att16 = 16;
  inline bool has_att16() const;
  inline void clear_att16();
  static const int kAtt16FieldNumber = 16;
  inline float att16() const;
  inline void set_att16(float value);

  // required double att17 = 17;
  inline bool has_att17() const;
  inline void clear_att17();
  static const int kAtt17FieldNumber = 17;
  inline double att17() const;
  inline void set_att17(double value);

  // required double att18 = 18;
  inline bool has_att18() const;
  inline void clear_att18();
  static const int kAtt18FieldNumber = 18;
  inline double att18() const;
  inline void set_att18(double value);

  // required double att19 = 19;
  inline bool has_att19() const;
  inline void clear_att19();
  static const int kAtt19FieldNumber = 19;
  inline double att19() const;
  inline void set_att19(double value);

  // required double att20 = 20;
  inline bool has_att20() const;
  inline void clear_att20();
  static const int kAtt20FieldNumber = 20;
  inline double att20() const;
  inline void set_att20(double value);

  // required bool att21 = 21;
  inline bool has_att21() const;
  inline void clear_att21();
  static const int kAtt21FieldNumber = 21;
  inline bool att21() const;
  inline void set_att21(bool value);

  // required bool att22 = 22;
  inline bool has_att22() const;
  inline void clear_att22();
  static const int kAtt22FieldNumber = 22;
  inline bool att22() const;
  inline void set_att22(bool value);

  // required bool att23 = 23;
  inline bool has_att23() const;
  inline void clear_att23();
  static const int kAtt23FieldNumber = 23;
  inline bool att23() const;
  inline void set_att23(bool value);

  // required bool att24 = 24;
  inline bool has_att24() const;
  inline void clear_att24();
  static const int kAtt24FieldNumber = 24;
  inline bool att24() const;
  inline void set_att24(bool value);

  // @@protoc_insertion_point(class_scope:performance.Performance.innercomplexPerformance_4)
 private:
  inline void set_has_att1();
  inline void clear_has_att1();
  inline void set_has_att2();
  inline void clear_has_att2();
  inline void set_has_att3();
  inline void clear_has_att3();
  inline void set_has_att4();
  inline void clear_has_att4();
  inline void set_has_att5();
  inline void clear_has_att5();
  inline void set_has_att6();
  inline void clear_has_att6();
  inline void set_has_att7();
  inline void clear_has_att7();
  inline void set_has_att8();
  inline void clear_has_att8();
  inline void set_has_att9();
  inline void clear_has_att9();
  inline void set_has_att10();
  inline void clear_has_att10();
  inline void set_has_att11();
  inline void clear_has_att11();
  inline void set_has_att12();
  inline void clear_has_att12();
  inline void set_has_att13();
  inline void clear_has_att13();
  inline void set_has_att14();
  inline void clear_has_att14();
  inline void set_has_att15();
  inline void clear_has_att15();
  inline void set_has_att16();
  inline void clear_has_att16();
  inline void set_has_att17();
  inline void clear_has_att17();
  inline void set_has_att18();
  inline void clear_has_att18();
  inline void set_has_att19();
  inline void clear_has_att19();
  inline void set_has_att20();
  inline void clear_has_att20();
  inline void set_has_att21();
  inline void clear_has_att21();
  inline void set_has_att22();
  inline void clear_has_att22();
  inline void set_has_att23();
  inline void clear_has_att23();
  inline void set_has_att24();
  inline void clear_has_att24();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 att1_;
  ::google::protobuf::int32 att2_;
  ::google::protobuf::int32 att3_;
  ::google::protobuf::int32 att4_;
  ::google::protobuf::int64 att5_;
  ::google::protobuf::int64 att6_;
  ::google::protobuf::int64 att7_;
  ::google::protobuf::int64 att8_;
  ::std::string* att9_;
  ::std::string* att10_;
  ::std::string* att11_;
  ::std::string* att12_;
  float att13_;
  float att14_;
  float att15_;
  float att16_;
  double att17_;
  double att18_;
  double att19_;
  double att20_;
  bool att21_;
  bool att22_;
  bool att23_;
  bool att24_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(24 + 31) / 32];

  friend void  protobuf_AddDesc_PerformanceTest_2eproto();
  friend void protobuf_AssignDesc_PerformanceTest_2eproto();
  friend void protobuf_ShutdownFile_PerformanceTest_2eproto();

  void InitAsDefaultInstance();
  static Performance_innercomplexPerformance_4* default_instance_;
};
// -------------------------------------------------------------------

class Performance_outercomplexPerformance_4 : public ::google::protobuf::Message {
 public:
  Performance_outercomplexPerformance_4();
  virtual ~Performance_outercomplexPerformance_4();

  Performance_outercomplexPerformance_4(const Performance_outercomplexPerformance_4& from);

  inline Performance_outercomplexPerformance_4& operator=(const Performance_outercomplexPerformance_4& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Performance_outercomplexPerformance_4& default_instance();

  void Swap(Performance_outercomplexPerformance_4* other);

  // implements Message ----------------------------------------------

  Performance_outercomplexPerformance_4* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Performance_outercomplexPerformance_4& from);
  void MergeFrom(const Performance_outercomplexPerformance_4& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 att1 = 1;
  inline bool has_att1() const;
  inline void clear_att1();
  static const int kAtt1FieldNumber = 1;
  inline ::google::protobuf::int32 att1() const;
  inline void set_att1(::google::protobuf::int32 value);

  // required int64 att2 = 2;
  inline bool has_att2() const;
  inline void clear_att2();
  static const int kAtt2FieldNumber = 2;
  inline ::google::protobuf::int64 att2() const;
  inline void set_att2(::google::protobuf::int64 value);

  // required string att3 = 3;
  inline bool has_att3() const;
  inline void clear_att3();
  static const int kAtt3FieldNumber = 3;
  inline const ::std::string& att3() const;
  inline void set_att3(const ::std::string& value);
  inline void set_att3(const char* value);
  inline void set_att3(const char* value, size_t size);
  inline ::std::string* mutable_att3();
  inline ::std::string* release_att3();
  inline void set_allocated_att3(::std::string* att3);

  // required .performance.Performance.innercomplexPerformance_4 att4 = 4;
  inline bool has_att4() const;
  inline void clear_att4();
  static const int kAtt4FieldNumber = 4;
  inline const ::performance::Performance_innercomplexPerformance_4& att4() const;
  inline ::performance::Performance_innercomplexPerformance_4* mutable_att4();
  inline ::performance::Performance_innercomplexPerformance_4* release_att4();
  inline void set_allocated_att4(::performance::Performance_innercomplexPerformance_4* att4);

  // required float att5 = 5;
  inline bool has_att5() const;
  inline void clear_att5();
  static const int kAtt5FieldNumber = 5;
  inline float att5() const;
  inline void set_att5(float value);

  // required double att6 = 6;
  inline bool has_att6() const;
  inline void clear_att6();
  static const int kAtt6FieldNumber = 6;
  inline double att6() const;
  inline void set_att6(double value);

  // required bool att7 = 7;
  inline bool has_att7() const;
  inline void clear_att7();
  static const int kAtt7FieldNumber = 7;
  inline bool att7() const;
  inline void set_att7(bool value);

  // required int64 att8 = 8;
  inline bool has_att8() const;
  inline void clear_att8();
  static const int kAtt8FieldNumber = 8;
  inline ::google::protobuf::int64 att8() const;
  inline void set_att8(::google::protobuf::int64 value);

  // required string att9 = 9;
  inline bool has_att9() const;
  inline void clear_att9();
  static const int kAtt9FieldNumber = 9;
  inline const ::std::string& att9() const;
  inline void set_att9(const ::std::string& value);
  inline void set_att9(const char* value);
  inline void set_att9(const char* value, size_t size);
  inline ::std::string* mutable_att9();
  inline ::std::string* release_att9();
  inline void set_allocated_att9(::std::string* att9);

  // required .performance.Performance.innercomplexPerformance_4 att10 = 10;
  inline bool has_att10() const;
  inline void clear_att10();
  static const int kAtt10FieldNumber = 10;
  inline const ::performance::Performance_innercomplexPerformance_4& att10() const;
  inline ::performance::Performance_innercomplexPerformance_4* mutable_att10();
  inline ::performance::Performance_innercomplexPerformance_4* release_att10();
  inline void set_allocated_att10(::performance::Performance_innercomplexPerformance_4* att10);

  // required float att11 = 11;
  inline bool has_att11() const;
  inline void clear_att11();
  static const int kAtt11FieldNumber = 11;
  inline float att11() const;
  inline void set_att11(float value);

  // required double att12 = 12;
  inline bool has_att12() const;
  inline void clear_att12();
  static const int kAtt12FieldNumber = 12;
  inline double att12() const;
  inline void set_att12(double value);

  // required bool att13 = 13;
  inline bool has_att13() const;
  inline void clear_att13();
  static const int kAtt13FieldNumber = 13;
  inline bool att13() const;
  inline void set_att13(bool value);

  // required string att14 = 14;
  inline bool has_att14() const;
  inline void clear_att14();
  static const int kAtt14FieldNumber = 14;
  inline const ::std::string& att14() const;
  inline void set_att14(const ::std::string& value);
  inline void set_att14(const char* value);
  inline void set_att14(const char* value, size_t size);
  inline ::std::string* mutable_att14();
  inline ::std::string* release_att14();
  inline void set_allocated_att14(::std::string* att14);

  // required .performance.Performance.innercomplexPerformance_4 att15 = 15;
  inline bool has_att15() const;
  inline void clear_att15();
  static const int kAtt15FieldNumber = 15;
  inline const ::performance::Performance_innercomplexPerformance_4& att15() const;
  inline ::performance::Performance_innercomplexPerformance_4* mutable_att15();
  inline ::performance::Performance_innercomplexPerformance_4* release_att15();
  inline void set_allocated_att15(::performance::Performance_innercomplexPerformance_4* att15);

  // required float att16 = 16;
  inline bool has_att16() const;
  inline void clear_att16();
  static const int kAtt16FieldNumber = 16;
  inline float att16() const;
  inline void set_att16(float value);

  // required double att17 = 17;
  inline bool has_att17() const;
  inline void clear_att17();
  static const int kAtt17FieldNumber = 17;
  inline double att17() const;
  inline void set_att17(double value);

  // required bool att18 = 18;
  inline bool has_att18() const;
  inline void clear_att18();
  static const int kAtt18FieldNumber = 18;
  inline bool att18() const;
  inline void set_att18(bool value);

  // required .performance.Performance.innercomplexPerformance_4 att19 = 19;
  inline bool has_att19() const;
  inline void clear_att19();
  static const int kAtt19FieldNumber = 19;
  inline const ::performance::Performance_innercomplexPerformance_4& att19() const;
  inline ::performance::Performance_innercomplexPerformance_4* mutable_att19();
  inline ::performance::Performance_innercomplexPerformance_4* release_att19();
  inline void set_allocated_att19(::performance::Performance_innercomplexPerformance_4* att19);

  // required float att20 = 20;
  inline bool has_att20() const;
  inline void clear_att20();
  static const int kAtt20FieldNumber = 20;
  inline float att20() const;
  inline void set_att20(float value);

  // required double att21 = 21;
  inline bool has_att21() const;
  inline void clear_att21();
  static const int kAtt21FieldNumber = 21;
  inline double att21() const;
  inline void set_att21(double value);

  // required bool att22 = 22;
  inline bool has_att22() const;
  inline void clear_att22();
  static const int kAtt22FieldNumber = 22;
  inline bool att22() const;
  inline void set_att22(bool value);

  // @@protoc_insertion_point(class_scope:performance.Performance.outercomplexPerformance_4)
 private:
  inline void set_has_att1();
  inline void clear_has_att1();
  inline void set_has_att2();
  inline void clear_has_att2();
  inline void set_has_att3();
  inline void clear_has_att3();
  inline void set_has_att4();
  inline void clear_has_att4();
  inline void set_has_att5();
  inline void clear_has_att5();
  inline void set_has_att6();
  inline void clear_has_att6();
  inline void set_has_att7();
  inline void clear_has_att7();
  inline void set_has_att8();
  inline void clear_has_att8();
  inline void set_has_att9();
  inline void clear_has_att9();
  inline void set_has_att10();
  inline void clear_has_att10();
  inline void set_has_att11();
  inline void clear_has_att11();
  inline void set_has_att12();
  inline void clear_has_att12();
  inline void set_has_att13();
  inline void clear_has_att13();
  inline void set_has_att14();
  inline void clear_has_att14();
  inline void set_has_att15();
  inline void clear_has_att15();
  inline void set_has_att16();
  inline void clear_has_att16();
  inline void set_has_att17();
  inline void clear_has_att17();
  inline void set_has_att18();
  inline void clear_has_att18();
  inline void set_has_att19();
  inline void clear_has_att19();
  inline void set_has_att20();
  inline void clear_has_att20();
  inline void set_has_att21();
  inline void clear_has_att21();
  inline void set_has_att22();
  inline void clear_has_att22();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 att2_;
  ::std::string* att3_;
  ::google::protobuf::int32 att1_;
  float att5_;
  ::performance::Performance_innercomplexPerformance_4* att4_;
  double att6_;
  ::google::protobuf::int64 att8_;
  ::std::string* att9_;
  ::performance::Performance_innercomplexPerformance_4* att10_;
  double att12_;
  ::std::string* att14_;
  float att11_;
  bool att7_;
  bool att13_;
  bool att18_;
  bool att22_;
  ::performance::Performance_innercomplexPerformance_4* att15_;
  double att17_;
  float att16_;
  float att20_;
  ::performance::Performance_innercomplexPerformance_4* att19_;
  double att21_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(22 + 31) / 32];

  friend void  protobuf_AddDesc_PerformanceTest_2eproto();
  friend void protobuf_AssignDesc_PerformanceTest_2eproto();
  friend void protobuf_ShutdownFile_PerformanceTest_2eproto();

  void InitAsDefaultInstance();
  static Performance_outercomplexPerformance_4* default_instance_;
};
// -------------------------------------------------------------------

class Performance_innercomplexPerformance_5 : public ::google::protobuf::Message {
 public:
  Performance_innercomplexPerformance_5();
  virtual ~Performance_innercomplexPerformance_5();

  Performance_innercomplexPerformance_5(const Performance_innercomplexPerformance_5& from);

  inline Performance_innercomplexPerformance_5& operator=(const Performance_innercomplexPerformance_5& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Performance_innercomplexPerformance_5& default_instance();

  void Swap(Performance_innercomplexPerformance_5* other);

  // implements Message ----------------------------------------------

  Performance_innercomplexPerformance_5* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Performance_innercomplexPerformance_5& from);
  void MergeFrom(const Performance_innercomplexPerformance_5& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 att1 = 1;
  inline bool has_att1() const;
  inline void clear_att1();
  static const int kAtt1FieldNumber = 1;
  inline ::google::protobuf::int32 att1() const;
  inline void set_att1(::google::protobuf::int32 value);

  // required int32 att2 = 2;
  inline bool has_att2() const;
  inline void clear_att2();
  static const int kAtt2FieldNumber = 2;
  inline ::google::protobuf::int32 att2() const;
  inline void set_att2(::google::protobuf::int32 value);

  // required int32 att3 = 3;
  inline bool has_att3() const;
  inline void clear_att3();
  static const int kAtt3FieldNumber = 3;
  inline ::google::protobuf::int32 att3() const;
  inline void set_att3(::google::protobuf::int32 value);

  // required int32 att4 = 4;
  inline bool has_att4() const;
  inline void clear_att4();
  static const int kAtt4FieldNumber = 4;
  inline ::google::protobuf::int32 att4() const;
  inline void set_att4(::google::protobuf::int32 value);

  // required int32 att5 = 5;
  inline bool has_att5() const;
  inline void clear_att5();
  static const int kAtt5FieldNumber = 5;
  inline ::google::protobuf::int32 att5() const;
  inline void set_att5(::google::protobuf::int32 value);

  // required int64 att6 = 6;
  inline bool has_att6() const;
  inline void clear_att6();
  static const int kAtt6FieldNumber = 6;
  inline ::google::protobuf::int64 att6() const;
  inline void set_att6(::google::protobuf::int64 value);

  // required int64 att7 = 7;
  inline bool has_att7() const;
  inline void clear_att7();
  static const int kAtt7FieldNumber = 7;
  inline ::google::protobuf::int64 att7() const;
  inline void set_att7(::google::protobuf::int64 value);

  // required int64 att8 = 8;
  inline bool has_att8() const;
  inline void clear_att8();
  static const int kAtt8FieldNumber = 8;
  inline ::google::protobuf::int64 att8() const;
  inline void set_att8(::google::protobuf::int64 value);

  // required int64 att9 = 9;
  inline bool has_att9() const;
  inline void clear_att9();
  static const int kAtt9FieldNumber = 9;
  inline ::google::protobuf::int64 att9() const;
  inline void set_att9(::google::protobuf::int64 value);

  // required int64 att10 = 10;
  inline bool has_att10() const;
  inline void clear_att10();
  static const int kAtt10FieldNumber = 10;
  inline ::google::protobuf::int64 att10() const;
  inline void set_att10(::google::protobuf::int64 value);

  // required string att11 = 11;
  inline bool has_att11() const;
  inline void clear_att11();
  static const int kAtt11FieldNumber = 11;
  inline const ::std::string& att11() const;
  inline void set_att11(const ::std::string& value);
  inline void set_att11(const char* value);
  inline void set_att11(const char* value, size_t size);
  inline ::std::string* mutable_att11();
  inline ::std::string* release_att11();
  inline void set_allocated_att11(::std::string* att11);

  // required string att12 = 12;
  inline bool has_att12() const;
  inline void clear_att12();
  static const int kAtt12FieldNumber = 12;
  inline const ::std::string& att12() const;
  inline void set_att12(const ::std::string& value);
  inline void set_att12(const char* value);
  inline void set_att12(const char* value, size_t size);
  inline ::std::string* mutable_att12();
  inline ::std::string* release_att12();
  inline void set_allocated_att12(::std::string* att12);

  // required string att13 = 13;
  inline bool has_att13() const;
  inline void clear_att13();
  static const int kAtt13FieldNumber = 13;
  inline const ::std::string& att13() const;
  inline void set_att13(const ::std::string& value);
  inline void set_att13(const char* value);
  inline void set_att13(const char* value, size_t size);
  inline ::std::string* mutable_att13();
  inline ::std::string* release_att13();
  inline void set_allocated_att13(::std::string* att13);

  // required string att14 = 14;
  inline bool has_att14() const;
  inline void clear_att14();
  static const int kAtt14FieldNumber = 14;
  inline const ::std::string& att14() const;
  inline void set_att14(const ::std::string& value);
  inline void set_att14(const char* value);
  inline void set_att14(const char* value, size_t size);
  inline ::std::string* mutable_att14();
  inline ::std::string* release_att14();
  inline void set_allocated_att14(::std::string* att14);

  // required string att15 = 15;
  inline bool has_att15() const;
  inline void clear_att15();
  static const int kAtt15FieldNumber = 15;
  inline const ::std::string& att15() const;
  inline void set_att15(const ::std::string& value);
  inline void set_att15(const char* value);
  inline void set_att15(const char* value, size_t size);
  inline ::std::string* mutable_att15();
  inline ::std::string* release_att15();
  inline void set_allocated_att15(::std::string* att15);

  // required float att16 = 16;
  inline bool has_att16() const;
  inline void clear_att16();
  static const int kAtt16FieldNumber = 16;
  inline float att16() const;
  inline void set_att16(float value);

  // required float att17 = 17;
  inline bool has_att17() const;
  inline void clear_att17();
  static const int kAtt17FieldNumber = 17;
  inline float att17() const;
  inline void set_att17(float value);

  // required float att18 = 18;
  inline bool has_att18() const;
  inline void clear_att18();
  static const int kAtt18FieldNumber = 18;
  inline float att18() const;
  inline void set_att18(float value);

  // required float att19 = 19;
  inline bool has_att19() const;
  inline void clear_att19();
  static const int kAtt19FieldNumber = 19;
  inline float att19() const;
  inline void set_att19(float value);

  // required float att20 = 20;
  inline bool has_att20() const;
  inline void clear_att20();
  static const int kAtt20FieldNumber = 20;
  inline float att20() const;
  inline void set_att20(float value);

  // required double att21 = 21;
  inline bool has_att21() const;
  inline void clear_att21();
  static const int kAtt21FieldNumber = 21;
  inline double att21() const;
  inline void set_att21(double value);

  // required double att22 = 22;
  inline bool has_att22() const;
  inline void clear_att22();
  static const int kAtt22FieldNumber = 22;
  inline double att22() const;
  inline void set_att22(double value);

  // required double att23 = 23;
  inline bool has_att23() const;
  inline void clear_att23();
  static const int kAtt23FieldNumber = 23;
  inline double att23() const;
  inline void set_att23(double value);

  // required double att24 = 24;
  inline bool has_att24() const;
  inline void clear_att24();
  static const int kAtt24FieldNumber = 24;
  inline double att24() const;
  inline void set_att24(double value);

  // required double att25 = 25;
  inline bool has_att25() const;
  inline void clear_att25();
  static const int kAtt25FieldNumber = 25;
  inline double att25() const;
  inline void set_att25(double value);

  // required bool att26 = 26;
  inline bool has_att26() const;
  inline void clear_att26();
  static const int kAtt26FieldNumber = 26;
  inline bool att26() const;
  inline void set_att26(bool value);

  // required bool att27 = 27;
  inline bool has_att27() const;
  inline void clear_att27();
  static const int kAtt27FieldNumber = 27;
  inline bool att27() const;
  inline void set_att27(bool value);

  // required bool att28 = 28;
  inline bool has_att28() const;
  inline void clear_att28();
  static const int kAtt28FieldNumber = 28;
  inline bool att28() const;
  inline void set_att28(bool value);

  // required bool att29 = 29;
  inline bool has_att29() const;
  inline void clear_att29();
  static const int kAtt29FieldNumber = 29;
  inline bool att29() const;
  inline void set_att29(bool value);

  // required bool att30 = 30;
  inline bool has_att30() const;
  inline void clear_att30();
  static const int kAtt30FieldNumber = 30;
  inline bool att30() const;
  inline void set_att30(bool value);

  // @@protoc_insertion_point(class_scope:performance.Performance.innercomplexPerformance_5)
 private:
  inline void set_has_att1();
  inline void clear_has_att1();
  inline void set_has_att2();
  inline void clear_has_att2();
  inline void set_has_att3();
  inline void clear_has_att3();
  inline void set_has_att4();
  inline void clear_has_att4();
  inline void set_has_att5();
  inline void clear_has_att5();
  inline void set_has_att6();
  inline void clear_has_att6();
  inline void set_has_att7();
  inline void clear_has_att7();
  inline void set_has_att8();
  inline void clear_has_att8();
  inline void set_has_att9();
  inline void clear_has_att9();
  inline void set_has_att10();
  inline void clear_has_att10();
  inline void set_has_att11();
  inline void clear_has_att11();
  inline void set_has_att12();
  inline void clear_has_att12();
  inline void set_has_att13();
  inline void clear_has_att13();
  inline void set_has_att14();
  inline void clear_has_att14();
  inline void set_has_att15();
  inline void clear_has_att15();
  inline void set_has_att16();
  inline void clear_has_att16();
  inline void set_has_att17();
  inline void clear_has_att17();
  inline void set_has_att18();
  inline void clear_has_att18();
  inline void set_has_att19();
  inline void clear_has_att19();
  inline void set_has_att20();
  inline void clear_has_att20();
  inline void set_has_att21();
  inline void clear_has_att21();
  inline void set_has_att22();
  inline void clear_has_att22();
  inline void set_has_att23();
  inline void clear_has_att23();
  inline void set_has_att24();
  inline void clear_has_att24();
  inline void set_has_att25();
  inline void clear_has_att25();
  inline void set_has_att26();
  inline void clear_has_att26();
  inline void set_has_att27();
  inline void clear_has_att27();
  inline void set_has_att28();
  inline void clear_has_att28();
  inline void set_has_att29();
  inline void clear_has_att29();
  inline void set_has_att30();
  inline void clear_has_att30();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 att1_;
  ::google::protobuf::int32 att2_;
  ::google::protobuf::int32 att3_;
  ::google::protobuf::int32 att4_;
  ::google::protobuf::int64 att6_;
  ::google::protobuf::int64 att7_;
  ::google::protobuf::int64 att8_;
  ::google::protobuf::int64 att9_;
  ::google::protobuf::int64 att10_;
  ::google::protobuf::int32 att5_;
  float att16_;
  ::std::string* att11_;
  ::std::string* att12_;
  ::std::string* att13_;
  ::std::string* att14_;
  ::std::string* att15_;
  float att17_;
  float att18_;
  float att19_;
  float att20_;
  double att21_;
  double att22_;
  double att23_;
  double att24_;
  double att25_;
  bool att26_;
  bool att27_;
  bool att28_;
  bool att29_;
  bool att30_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(30 + 31) / 32];

  friend void  protobuf_AddDesc_PerformanceTest_2eproto();
  friend void protobuf_AssignDesc_PerformanceTest_2eproto();
  friend void protobuf_ShutdownFile_PerformanceTest_2eproto();

  void InitAsDefaultInstance();
  static Performance_innercomplexPerformance_5* default_instance_;
};
// -------------------------------------------------------------------

class Performance_outercomplexPerformance_5 : public ::google::protobuf::Message {
 public:
  Performance_outercomplexPerformance_5();
  virtual ~Performance_outercomplexPerformance_5();

  Performance_outercomplexPerformance_5(const Performance_outercomplexPerformance_5& from);

  inline Performance_outercomplexPerformance_5& operator=(const Performance_outercomplexPerformance_5& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Performance_outercomplexPerformance_5& default_instance();

  void Swap(Performance_outercomplexPerformance_5* other);

  // implements Message ----------------------------------------------

  Performance_outercomplexPerformance_5* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Performance_outercomplexPerformance_5& from);
  void MergeFrom(const Performance_outercomplexPerformance_5& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 att1 = 1;
  inline bool has_att1() const;
  inline void clear_att1();
  static const int kAtt1FieldNumber = 1;
  inline ::google::protobuf::int32 att1() const;
  inline void set_att1(::google::protobuf::int32 value);

  // required int64 att2 = 2;
  inline bool has_att2() const;
  inline void clear_att2();
  static const int kAtt2FieldNumber = 2;
  inline ::google::protobuf::int64 att2() const;
  inline void set_att2(::google::protobuf::int64 value);

  // required string att3 = 3;
  inline bool has_att3() const;
  inline void clear_att3();
  static const int kAtt3FieldNumber = 3;
  inline const ::std::string& att3() const;
  inline void set_att3(const ::std::string& value);
  inline void set_att3(const char* value);
  inline void set_att3(const char* value, size_t size);
  inline ::std::string* mutable_att3();
  inline ::std::string* release_att3();
  inline void set_allocated_att3(::std::string* att3);

  // required .performance.Performance.innercomplexPerformance_5 att4 = 4;
  inline bool has_att4() const;
  inline void clear_att4();
  static const int kAtt4FieldNumber = 4;
  inline const ::performance::Performance_innercomplexPerformance_5& att4() const;
  inline ::performance::Performance_innercomplexPerformance_5* mutable_att4();
  inline ::performance::Performance_innercomplexPerformance_5* release_att4();
  inline void set_allocated_att4(::performance::Performance_innercomplexPerformance_5* att4);

  // required float att5 = 5;
  inline bool has_att5() const;
  inline void clear_att5();
  static const int kAtt5FieldNumber = 5;
  inline float att5() const;
  inline void set_att5(float value);

  // required double att6 = 6;
  inline bool has_att6() const;
  inline void clear_att6();
  static const int kAtt6FieldNumber = 6;
  inline double att6() const;
  inline void set_att6(double value);

  // required bool att7 = 7;
  inline bool has_att7() const;
  inline void clear_att7();
  static const int kAtt7FieldNumber = 7;
  inline bool att7() const;
  inline void set_att7(bool value);

  // required int64 att8 = 8;
  inline bool has_att8() const;
  inline void clear_att8();
  static const int kAtt8FieldNumber = 8;
  inline ::google::protobuf::int64 att8() const;
  inline void set_att8(::google::protobuf::int64 value);

  // required string att9 = 9;
  inline bool has_att9() const;
  inline void clear_att9();
  static const int kAtt9FieldNumber = 9;
  inline const ::std::string& att9() const;
  inline void set_att9(const ::std::string& value);
  inline void set_att9(const char* value);
  inline void set_att9(const char* value, size_t size);
  inline ::std::string* mutable_att9();
  inline ::std::string* release_att9();
  inline void set_allocated_att9(::std::string* att9);

  // required .performance.Performance.innercomplexPerformance_5 att10 = 10;
  inline bool has_att10() const;
  inline void clear_att10();
  static const int kAtt10FieldNumber = 10;
  inline const ::performance::Performance_innercomplexPerformance_5& att10() const;
  inline ::performance::Performance_innercomplexPerformance_5* mutable_att10();
  inline ::performance::Performance_innercomplexPerformance_5* release_att10();
  inline void set_allocated_att10(::performance::Performance_innercomplexPerformance_5* att10);

  // required float att11 = 11;
  inline bool has_att11() const;
  inline void clear_att11();
  static const int kAtt11FieldNumber = 11;
  inline float att11() const;
  inline void set_att11(float value);

  // required double att12 = 12;
  inline bool has_att12() const;
  inline void clear_att12();
  static const int kAtt12FieldNumber = 12;
  inline double att12() const;
  inline void set_att12(double value);

  // required bool att13 = 13;
  inline bool has_att13() const;
  inline void clear_att13();
  static const int kAtt13FieldNumber = 13;
  inline bool att13() const;
  inline void set_att13(bool value);

  // required string att14 = 14;
  inline bool has_att14() const;
  inline void clear_att14();
  static const int kAtt14FieldNumber = 14;
  inline const ::std::string& att14() const;
  inline void set_att14(const ::std::string& value);
  inline void set_att14(const char* value);
  inline void set_att14(const char* value, size_t size);
  inline ::std::string* mutable_att14();
  inline ::std::string* release_att14();
  inline void set_allocated_att14(::std::string* att14);

  // required .performance.Performance.innercomplexPerformance_5 att15 = 15;
  inline bool has_att15() const;
  inline void clear_att15();
  static const int kAtt15FieldNumber = 15;
  inline const ::performance::Performance_innercomplexPerformance_5& att15() const;
  inline ::performance::Performance_innercomplexPerformance_5* mutable_att15();
  inline ::performance::Performance_innercomplexPerformance_5* release_att15();
  inline void set_allocated_att15(::performance::Performance_innercomplexPerformance_5* att15);

  // required float att16 = 16;
  inline bool has_att16() const;
  inline void clear_att16();
  static const int kAtt16FieldNumber = 16;
  inline float att16() const;
  inline void set_att16(float value);

  // required double att17 = 17;
  inline bool has_att17() const;
  inline void clear_att17();
  static const int kAtt17FieldNumber = 17;
  inline double att17() const;
  inline void set_att17(double value);

  // required bool att18 = 18;
  inline bool has_att18() const;
  inline void clear_att18();
  static const int kAtt18FieldNumber = 18;
  inline bool att18() const;
  inline void set_att18(bool value);

  // required .performance.Performance.innercomplexPerformance_5 att19 = 19;
  inline bool has_att19() const;
  inline void clear_att19();
  static const int kAtt19FieldNumber = 19;
  inline const ::performance::Performance_innercomplexPerformance_5& att19() const;
  inline ::performance::Performance_innercomplexPerformance_5* mutable_att19();
  inline ::performance::Performance_innercomplexPerformance_5* release_att19();
  inline void set_allocated_att19(::performance::Performance_innercomplexPerformance_5* att19);

  // required float att20 = 20;
  inline bool has_att20() const;
  inline void clear_att20();
  static const int kAtt20FieldNumber = 20;
  inline float att20() const;
  inline void set_att20(float value);

  // required double att21 = 21;
  inline bool has_att21() const;
  inline void clear_att21();
  static const int kAtt21FieldNumber = 21;
  inline double att21() const;
  inline void set_att21(double value);

  // required bool att22 = 22;
  inline bool has_att22() const;
  inline void clear_att22();
  static const int kAtt22FieldNumber = 22;
  inline bool att22() const;
  inline void set_att22(bool value);

  // required float att23 = 23;
  inline bool has_att23() const;
  inline void clear_att23();
  static const int kAtt23FieldNumber = 23;
  inline float att23() const;
  inline void set_att23(float value);

  // required double att24 = 24;
  inline bool has_att24() const;
  inline void clear_att24();
  static const int kAtt24FieldNumber = 24;
  inline double att24() const;
  inline void set_att24(double value);

  // required bool att25 = 25;
  inline bool has_att25() const;
  inline void clear_att25();
  static const int kAtt25FieldNumber = 25;
  inline bool att25() const;
  inline void set_att25(bool value);

  // @@protoc_insertion_point(class_scope:performance.Performance.outercomplexPerformance_5)
 private:
  inline void set_has_att1();
  inline void clear_has_att1();
  inline void set_has_att2();
  inline void clear_has_att2();
  inline void set_has_att3();
  inline void clear_has_att3();
  inline void set_has_att4();
  inline void clear_has_att4();
  inline void set_has_att5();
  inline void clear_has_att5();
  inline void set_has_att6();
  inline void clear_has_att6();
  inline void set_has_att7();
  inline void clear_has_att7();
  inline void set_has_att8();
  inline void clear_has_att8();
  inline void set_has_att9();
  inline void clear_has_att9();
  inline void set_has_att10();
  inline void clear_has_att10();
  inline void set_has_att11();
  inline void clear_has_att11();
  inline void set_has_att12();
  inline void clear_has_att12();
  inline void set_has_att13();
  inline void clear_has_att13();
  inline void set_has_att14();
  inline void clear_has_att14();
  inline void set_has_att15();
  inline void clear_has_att15();
  inline void set_has_att16();
  inline void clear_has_att16();
  inline void set_has_att17();
  inline void clear_has_att17();
  inline void set_has_att18();
  inline void clear_has_att18();
  inline void set_has_att19();
  inline void clear_has_att19();
  inline void set_has_att20();
  inline void clear_has_att20();
  inline void set_has_att21();
  inline void clear_has_att21();
  inline void set_has_att22();
  inline void clear_has_att22();
  inline void set_has_att23();
  inline void clear_has_att23();
  inline void set_has_att24();
  inline void clear_has_att24();
  inline void set_has_att25();
  inline void clear_has_att25();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 att2_;
  ::std::string* att3_;
  ::google::protobuf::int32 att1_;
  float att5_;
  ::performance::Performance_innercomplexPerformance_5* att4_;
  double att6_;
  ::google::protobuf::int64 att8_;
  ::std::string* att9_;
  ::performance::Performance_innercomplexPerformance_5* att10_;
  double att12_;
  ::std::string* att14_;
  float att11_;
  bool att7_;
  bool att13_;
  bool att18_;
  bool att22_;
  ::performance::Performance_innercomplexPerformance_5* att15_;
  double att17_;
  float att16_;
  float att20_;
  ::performance::Performance_innercomplexPerformance_5* att19_;
  double att21_;
  double att24_;
  float att23_;
  bool att25_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(25 + 31) / 32];

  friend void  protobuf_AddDesc_PerformanceTest_2eproto();
  friend void protobuf_AssignDesc_PerformanceTest_2eproto();
  friend void protobuf_ShutdownFile_PerformanceTest_2eproto();

  void InitAsDefaultInstance();
  static Performance_outercomplexPerformance_5* default_instance_;
};
// -------------------------------------------------------------------

class Performance : public ::google::protobuf::Message {
 public:
  Performance();
  virtual ~Performance();

  Performance(const Performance& from);

  inline Performance& operator=(const Performance& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Performance& default_instance();

  void Swap(Performance* other);

  // implements Message ----------------------------------------------

  Performance* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Performance& from);
  void MergeFrom(const Performance& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Performance_simplePerformance_10 simplePerformance_10;
  typedef Performance_simplePerformance_20 simplePerformance_20;
  typedef Performance_simplePerformance_30 simplePerformance_30;
  typedef Performance_simplePerformance_40 simplePerformance_40;
  typedef Performance_simplePerformance_50 simplePerformance_50;
  typedef Performance_complexPerformance_2 complexPerformance_2;
  typedef Performance_complexPerformance_4 complexPerformance_4;
  typedef Performance_complexPerformance_6 complexPerformance_6;
  typedef Performance_complexPerformance_8 complexPerformance_8;
  typedef Performance_complexPerformance_10 complexPerformance_10;
  typedef Performance_innersimplePerformance_2 innersimplePerformance_2;
  typedef Performance_outersimplePerformance_2 outersimplePerformance_2;
  typedef Performance_innersimplePerformance_4 innersimplePerformance_4;
  typedef Performance_outersimplePerformance_4 outersimplePerformance_4;
  typedef Performance_innersimplePerformance_6 innersimplePerformance_6;
  typedef Performance_outersimplePerformance_6 outersimplePerformance_6;
  typedef Performance_innersimplePerformance_8 innersimplePerformance_8;
  typedef Performance_outersimplePerformance_8 outersimplePerformance_8;
  typedef Performance_innersimplePerformance_10 innersimplePerformance_10;
  typedef Performance_outersimplePerformance_10 outersimplePerformance_10;
  typedef Performance_innercomplexPerformance_1 innercomplexPerformance_1;
  typedef Performance_outercomplexPerformance_1 outercomplexPerformance_1;
  typedef Performance_innercomplexPerformance_2 innercomplexPerformance_2;
  typedef Performance_outercomplexPerformance_2 outercomplexPerformance_2;
  typedef Performance_innercomplexPerformance_3 innercomplexPerformance_3;
  typedef Performance_outercomplexPerformance_3 outercomplexPerformance_3;
  typedef Performance_innercomplexPerformance_4 innercomplexPerformance_4;
  typedef Performance_outercomplexPerformance_4 outercomplexPerformance_4;
  typedef Performance_innercomplexPerformance_5 innercomplexPerformance_5;
  typedef Performance_outercomplexPerformance_5 outercomplexPerformance_5;

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:performance.Performance)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_PerformanceTest_2eproto();
  friend void protobuf_AssignDesc_PerformanceTest_2eproto();
  friend void protobuf_ShutdownFile_PerformanceTest_2eproto();

  void InitAsDefaultInstance();
  static Performance* default_instance_;
};
// ===================================================================


// ===================================================================

// Performance_simplePerformance_10

// required int32 att1 = 1;
inline bool Performance_simplePerformance_10::has_att1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Performance_simplePerformance_10::set_has_att1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Performance_simplePerformance_10::clear_has_att1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Performance_simplePerformance_10::clear_att1() {
  att1_ = 0;
  clear_has_att1();
}
inline ::google::protobuf::int32 Performance_simplePerformance_10::att1() const {
  return att1_;
}
inline void Performance_simplePerformance_10::set_att1(::google::protobuf::int32 value) {
  set_has_att1();
  att1_ = value;
}

// required int32 att2 = 2;
inline bool Performance_simplePerformance_10::has_att2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Performance_simplePerformance_10::set_has_att2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Performance_simplePerformance_10::clear_has_att2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Performance_simplePerformance_10::clear_att2() {
  att2_ = 0;
  clear_has_att2();
}
inline ::google::protobuf::int32 Performance_simplePerformance_10::att2() const {
  return att2_;
}
inline void Performance_simplePerformance_10::set_att2(::google::protobuf::int32 value) {
  set_has_att2();
  att2_ = value;
}

// required int32 att3 = 3;
inline bool Performance_simplePerformance_10::has_att3() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Performance_simplePerformance_10::set_has_att3() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Performance_simplePerformance_10::clear_has_att3() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Performance_simplePerformance_10::clear_att3() {
  att3_ = 0;
  clear_has_att3();
}
inline ::google::protobuf::int32 Performance_simplePerformance_10::att3() const {
  return att3_;
}
inline void Performance_simplePerformance_10::set_att3(::google::protobuf::int32 value) {
  set_has_att3();
  att3_ = value;
}

// required int32 att4 = 4;
inline bool Performance_simplePerformance_10::has_att4() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Performance_simplePerformance_10::set_has_att4() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Performance_simplePerformance_10::clear_has_att4() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Performance_simplePerformance_10::clear_att4() {
  att4_ = 0;
  clear_has_att4();
}
inline ::google::protobuf::int32 Performance_simplePerformance_10::att4() const {
  return att4_;
}
inline void Performance_simplePerformance_10::set_att4(::google::protobuf::int32 value) {
  set_has_att4();
  att4_ = value;
}

// required int32 att5 = 5;
inline bool Performance_simplePerformance_10::has_att5() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Performance_simplePerformance_10::set_has_att5() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Performance_simplePerformance_10::clear_has_att5() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Performance_simplePerformance_10::clear_att5() {
  att5_ = 0;
  clear_has_att5();
}
inline ::google::protobuf::int32 Performance_simplePerformance_10::att5() const {
  return att5_;
}
inline void Performance_simplePerformance_10::set_att5(::google::protobuf::int32 value) {
  set_has_att5();
  att5_ = value;
}

// required int32 att6 = 6;
inline bool Performance_simplePerformance_10::has_att6() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Performance_simplePerformance_10::set_has_att6() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Performance_simplePerformance_10::clear_has_att6() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Performance_simplePerformance_10::clear_att6() {
  att6_ = 0;
  clear_has_att6();
}
inline ::google::protobuf::int32 Performance_simplePerformance_10::att6() const {
  return att6_;
}
inline void Performance_simplePerformance_10::set_att6(::google::protobuf::int32 value) {
  set_has_att6();
  att6_ = value;
}

// required int32 att7 = 7;
inline bool Performance_simplePerformance_10::has_att7() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Performance_simplePerformance_10::set_has_att7() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Performance_simplePerformance_10::clear_has_att7() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Performance_simplePerformance_10::clear_att7() {
  att7_ = 0;
  clear_has_att7();
}
inline ::google::protobuf::int32 Performance_simplePerformance_10::att7() const {
  return att7_;
}
inline void Performance_simplePerformance_10::set_att7(::google::protobuf::int32 value) {
  set_has_att7();
  att7_ = value;
}

// required int32 att8 = 8;
inline bool Performance_simplePerformance_10::has_att8() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Performance_simplePerformance_10::set_has_att8() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Performance_simplePerformance_10::clear_has_att8() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Performance_simplePerformance_10::clear_att8() {
  att8_ = 0;
  clear_has_att8();
}
inline ::google::protobuf::int32 Performance_simplePerformance_10::att8() const {
  return att8_;
}
inline void Performance_simplePerformance_10::set_att8(::google::protobuf::int32 value) {
  set_has_att8();
  att8_ = value;
}

// required int32 att9 = 9;
inline bool Performance_simplePerformance_10::has_att9() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Performance_simplePerformance_10::set_has_att9() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Performance_simplePerformance_10::clear_has_att9() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Performance_simplePerformance_10::clear_att9() {
  att9_ = 0;
  clear_has_att9();
}
inline ::google::protobuf::int32 Performance_simplePerformance_10::att9() const {
  return att9_;
}
inline void Performance_simplePerformance_10::set_att9(::google::protobuf::int32 value) {
  set_has_att9();
  att9_ = value;
}

// required int32 att10 = 10;
inline bool Performance_simplePerformance_10::has_att10() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Performance_simplePerformance_10::set_has_att10() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Performance_simplePerformance_10::clear_has_att10() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Performance_simplePerformance_10::clear_att10() {
  att10_ = 0;
  clear_has_att10();
}
inline ::google::protobuf::int32 Performance_simplePerformance_10::att10() const {
  return att10_;
}
inline void Performance_simplePerformance_10::set_att10(::google::protobuf::int32 value) {
  set_has_att10();
  att10_ = value;
}

// -------------------------------------------------------------------

// Performance_simplePerformance_20

// required int32 att1 = 1;
inline bool Performance_simplePerformance_20::has_att1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Performance_simplePerformance_20::set_has_att1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Performance_simplePerformance_20::clear_has_att1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Performance_simplePerformance_20::clear_att1() {
  att1_ = 0;
  clear_has_att1();
}
inline ::google::protobuf::int32 Performance_simplePerformance_20::att1() const {
  return att1_;
}
inline void Performance_simplePerformance_20::set_att1(::google::protobuf::int32 value) {
  set_has_att1();
  att1_ = value;
}

// required int32 att2 = 2;
inline bool Performance_simplePerformance_20::has_att2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Performance_simplePerformance_20::set_has_att2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Performance_simplePerformance_20::clear_has_att2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Performance_simplePerformance_20::clear_att2() {
  att2_ = 0;
  clear_has_att2();
}
inline ::google::protobuf::int32 Performance_simplePerformance_20::att2() const {
  return att2_;
}
inline void Performance_simplePerformance_20::set_att2(::google::protobuf::int32 value) {
  set_has_att2();
  att2_ = value;
}

// required int32 att3 = 3;
inline bool Performance_simplePerformance_20::has_att3() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Performance_simplePerformance_20::set_has_att3() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Performance_simplePerformance_20::clear_has_att3() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Performance_simplePerformance_20::clear_att3() {
  att3_ = 0;
  clear_has_att3();
}
inline ::google::protobuf::int32 Performance_simplePerformance_20::att3() const {
  return att3_;
}
inline void Performance_simplePerformance_20::set_att3(::google::protobuf::int32 value) {
  set_has_att3();
  att3_ = value;
}

// required int32 att4 = 4;
inline bool Performance_simplePerformance_20::has_att4() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Performance_simplePerformance_20::set_has_att4() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Performance_simplePerformance_20::clear_has_att4() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Performance_simplePerformance_20::clear_att4() {
  att4_ = 0;
  clear_has_att4();
}
inline ::google::protobuf::int32 Performance_simplePerformance_20::att4() const {
  return att4_;
}
inline void Performance_simplePerformance_20::set_att4(::google::protobuf::int32 value) {
  set_has_att4();
  att4_ = value;
}

// required int32 att5 = 5;
inline bool Performance_simplePerformance_20::has_att5() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Performance_simplePerformance_20::set_has_att5() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Performance_simplePerformance_20::clear_has_att5() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Performance_simplePerformance_20::clear_att5() {
  att5_ = 0;
  clear_has_att5();
}
inline ::google::protobuf::int32 Performance_simplePerformance_20::att5() const {
  return att5_;
}
inline void Performance_simplePerformance_20::set_att5(::google::protobuf::int32 value) {
  set_has_att5();
  att5_ = value;
}

// required int32 att6 = 6;
inline bool Performance_simplePerformance_20::has_att6() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Performance_simplePerformance_20::set_has_att6() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Performance_simplePerformance_20::clear_has_att6() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Performance_simplePerformance_20::clear_att6() {
  att6_ = 0;
  clear_has_att6();
}
inline ::google::protobuf::int32 Performance_simplePerformance_20::att6() const {
  return att6_;
}
inline void Performance_simplePerformance_20::set_att6(::google::protobuf::int32 value) {
  set_has_att6();
  att6_ = value;
}

// required int32 att7 = 7;
inline bool Performance_simplePerformance_20::has_att7() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Performance_simplePerformance_20::set_has_att7() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Performance_simplePerformance_20::clear_has_att7() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Performance_simplePerformance_20::clear_att7() {
  att7_ = 0;
  clear_has_att7();
}
inline ::google::protobuf::int32 Performance_simplePerformance_20::att7() const {
  return att7_;
}
inline void Performance_simplePerformance_20::set_att7(::google::protobuf::int32 value) {
  set_has_att7();
  att7_ = value;
}

// required int32 att8 = 8;
inline bool Performance_simplePerformance_20::has_att8() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Performance_simplePerformance_20::set_has_att8() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Performance_simplePerformance_20::clear_has_att8() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Performance_simplePerformance_20::clear_att8() {
  att8_ = 0;
  clear_has_att8();
}
inline ::google::protobuf::int32 Performance_simplePerformance_20::att8() const {
  return att8_;
}
inline void Performance_simplePerformance_20::set_att8(::google::protobuf::int32 value) {
  set_has_att8();
  att8_ = value;
}

// required int32 att9 = 9;
inline bool Performance_simplePerformance_20::has_att9() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Performance_simplePerformance_20::set_has_att9() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Performance_simplePerformance_20::clear_has_att9() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Performance_simplePerformance_20::clear_att9() {
  att9_ = 0;
  clear_has_att9();
}
inline ::google::protobuf::int32 Performance_simplePerformance_20::att9() const {
  return att9_;
}
inline void Performance_simplePerformance_20::set_att9(::google::protobuf::int32 value) {
  set_has_att9();
  att9_ = value;
}

// required int32 att10 = 10;
inline bool Performance_simplePerformance_20::has_att10() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Performance_simplePerformance_20::set_has_att10() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Performance_simplePerformance_20::clear_has_att10() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Performance_simplePerformance_20::clear_att10() {
  att10_ = 0;
  clear_has_att10();
}
inline ::google::protobuf::int32 Performance_simplePerformance_20::att10() const {
  return att10_;
}
inline void Performance_simplePerformance_20::set_att10(::google::protobuf::int32 value) {
  set_has_att10();
  att10_ = value;
}

// required int32 att11 = 11;
inline bool Performance_simplePerformance_20::has_att11() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Performance_simplePerformance_20::set_has_att11() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Performance_simplePerformance_20::clear_has_att11() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Performance_simplePerformance_20::clear_att11() {
  att11_ = 0;
  clear_has_att11();
}
inline ::google::protobuf::int32 Performance_simplePerformance_20::att11() const {
  return att11_;
}
inline void Performance_simplePerformance_20::set_att11(::google::protobuf::int32 value) {
  set_has_att11();
  att11_ = value;
}

// required int32 att12 = 12;
inline bool Performance_simplePerformance_20::has_att12() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Performance_simplePerformance_20::set_has_att12() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Performance_simplePerformance_20::clear_has_att12() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Performance_simplePerformance_20::clear_att12() {
  att12_ = 0;
  clear_has_att12();
}
inline ::google::protobuf::int32 Performance_simplePerformance_20::att12() const {
  return att12_;
}
inline void Performance_simplePerformance_20::set_att12(::google::protobuf::int32 value) {
  set_has_att12();
  att12_ = value;
}

// required int32 att13 = 13;
inline bool Performance_simplePerformance_20::has_att13() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Performance_simplePerformance_20::set_has_att13() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Performance_simplePerformance_20::clear_has_att13() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Performance_simplePerformance_20::clear_att13() {
  att13_ = 0;
  clear_has_att13();
}
inline ::google::protobuf::int32 Performance_simplePerformance_20::att13() const {
  return att13_;
}
inline void Performance_simplePerformance_20::set_att13(::google::protobuf::int32 value) {
  set_has_att13();
  att13_ = value;
}

// required int32 att14 = 14;
inline bool Performance_simplePerformance_20::has_att14() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void Performance_simplePerformance_20::set_has_att14() {
  _has_bits_[0] |= 0x00002000u;
}
inline void Performance_simplePerformance_20::clear_has_att14() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void Performance_simplePerformance_20::clear_att14() {
  att14_ = 0;
  clear_has_att14();
}
inline ::google::protobuf::int32 Performance_simplePerformance_20::att14() const {
  return att14_;
}
inline void Performance_simplePerformance_20::set_att14(::google::protobuf::int32 value) {
  set_has_att14();
  att14_ = value;
}

// required int32 att15 = 15;
inline bool Performance_simplePerformance_20::has_att15() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void Performance_simplePerformance_20::set_has_att15() {
  _has_bits_[0] |= 0x00004000u;
}
inline void Performance_simplePerformance_20::clear_has_att15() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void Performance_simplePerformance_20::clear_att15() {
  att15_ = 0;
  clear_has_att15();
}
inline ::google::protobuf::int32 Performance_simplePerformance_20::att15() const {
  return att15_;
}
inline void Performance_simplePerformance_20::set_att15(::google::protobuf::int32 value) {
  set_has_att15();
  att15_ = value;
}

// required int32 att16 = 16;
inline bool Performance_simplePerformance_20::has_att16() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void Performance_simplePerformance_20::set_has_att16() {
  _has_bits_[0] |= 0x00008000u;
}
inline void Performance_simplePerformance_20::clear_has_att16() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void Performance_simplePerformance_20::clear_att16() {
  att16_ = 0;
  clear_has_att16();
}
inline ::google::protobuf::int32 Performance_simplePerformance_20::att16() const {
  return att16_;
}
inline void Performance_simplePerformance_20::set_att16(::google::protobuf::int32 value) {
  set_has_att16();
  att16_ = value;
}

// required int32 att17 = 17;
inline bool Performance_simplePerformance_20::has_att17() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void Performance_simplePerformance_20::set_has_att17() {
  _has_bits_[0] |= 0x00010000u;
}
inline void Performance_simplePerformance_20::clear_has_att17() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void Performance_simplePerformance_20::clear_att17() {
  att17_ = 0;
  clear_has_att17();
}
inline ::google::protobuf::int32 Performance_simplePerformance_20::att17() const {
  return att17_;
}
inline void Performance_simplePerformance_20::set_att17(::google::protobuf::int32 value) {
  set_has_att17();
  att17_ = value;
}

// required int32 att18 = 18;
inline bool Performance_simplePerformance_20::has_att18() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void Performance_simplePerformance_20::set_has_att18() {
  _has_bits_[0] |= 0x00020000u;
}
inline void Performance_simplePerformance_20::clear_has_att18() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void Performance_simplePerformance_20::clear_att18() {
  att18_ = 0;
  clear_has_att18();
}
inline ::google::protobuf::int32 Performance_simplePerformance_20::att18() const {
  return att18_;
}
inline void Performance_simplePerformance_20::set_att18(::google::protobuf::int32 value) {
  set_has_att18();
  att18_ = value;
}

// required int32 att19 = 19;
inline bool Performance_simplePerformance_20::has_att19() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void Performance_simplePerformance_20::set_has_att19() {
  _has_bits_[0] |= 0x00040000u;
}
inline void Performance_simplePerformance_20::clear_has_att19() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void Performance_simplePerformance_20::clear_att19() {
  att19_ = 0;
  clear_has_att19();
}
inline ::google::protobuf::int32 Performance_simplePerformance_20::att19() const {
  return att19_;
}
inline void Performance_simplePerformance_20::set_att19(::google::protobuf::int32 value) {
  set_has_att19();
  att19_ = value;
}

// required int32 att20 = 20;
inline bool Performance_simplePerformance_20::has_att20() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void Performance_simplePerformance_20::set_has_att20() {
  _has_bits_[0] |= 0x00080000u;
}
inline void Performance_simplePerformance_20::clear_has_att20() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void Performance_simplePerformance_20::clear_att20() {
  att20_ = 0;
  clear_has_att20();
}
inline ::google::protobuf::int32 Performance_simplePerformance_20::att20() const {
  return att20_;
}
inline void Performance_simplePerformance_20::set_att20(::google::protobuf::int32 value) {
  set_has_att20();
  att20_ = value;
}

// -------------------------------------------------------------------

// Performance_simplePerformance_30

// required int32 att1 = 1;
inline bool Performance_simplePerformance_30::has_att1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Performance_simplePerformance_30::set_has_att1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Performance_simplePerformance_30::clear_has_att1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Performance_simplePerformance_30::clear_att1() {
  att1_ = 0;
  clear_has_att1();
}
inline ::google::protobuf::int32 Performance_simplePerformance_30::att1() const {
  return att1_;
}
inline void Performance_simplePerformance_30::set_att1(::google::protobuf::int32 value) {
  set_has_att1();
  att1_ = value;
}

// required int32 att2 = 2;
inline bool Performance_simplePerformance_30::has_att2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Performance_simplePerformance_30::set_has_att2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Performance_simplePerformance_30::clear_has_att2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Performance_simplePerformance_30::clear_att2() {
  att2_ = 0;
  clear_has_att2();
}
inline ::google::protobuf::int32 Performance_simplePerformance_30::att2() const {
  return att2_;
}
inline void Performance_simplePerformance_30::set_att2(::google::protobuf::int32 value) {
  set_has_att2();
  att2_ = value;
}

// required int32 att3 = 3;
inline bool Performance_simplePerformance_30::has_att3() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Performance_simplePerformance_30::set_has_att3() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Performance_simplePerformance_30::clear_has_att3() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Performance_simplePerformance_30::clear_att3() {
  att3_ = 0;
  clear_has_att3();
}
inline ::google::protobuf::int32 Performance_simplePerformance_30::att3() const {
  return att3_;
}
inline void Performance_simplePerformance_30::set_att3(::google::protobuf::int32 value) {
  set_has_att3();
  att3_ = value;
}

// required int32 att4 = 4;
inline bool Performance_simplePerformance_30::has_att4() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Performance_simplePerformance_30::set_has_att4() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Performance_simplePerformance_30::clear_has_att4() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Performance_simplePerformance_30::clear_att4() {
  att4_ = 0;
  clear_has_att4();
}
inline ::google::protobuf::int32 Performance_simplePerformance_30::att4() const {
  return att4_;
}
inline void Performance_simplePerformance_30::set_att4(::google::protobuf::int32 value) {
  set_has_att4();
  att4_ = value;
}

// required int32 att5 = 5;
inline bool Performance_simplePerformance_30::has_att5() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Performance_simplePerformance_30::set_has_att5() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Performance_simplePerformance_30::clear_has_att5() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Performance_simplePerformance_30::clear_att5() {
  att5_ = 0;
  clear_has_att5();
}
inline ::google::protobuf::int32 Performance_simplePerformance_30::att5() const {
  return att5_;
}
inline void Performance_simplePerformance_30::set_att5(::google::protobuf::int32 value) {
  set_has_att5();
  att5_ = value;
}

// required int32 att6 = 6;
inline bool Performance_simplePerformance_30::has_att6() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Performance_simplePerformance_30::set_has_att6() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Performance_simplePerformance_30::clear_has_att6() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Performance_simplePerformance_30::clear_att6() {
  att6_ = 0;
  clear_has_att6();
}
inline ::google::protobuf::int32 Performance_simplePerformance_30::att6() const {
  return att6_;
}
inline void Performance_simplePerformance_30::set_att6(::google::protobuf::int32 value) {
  set_has_att6();
  att6_ = value;
}

// required int32 att7 = 7;
inline bool Performance_simplePerformance_30::has_att7() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Performance_simplePerformance_30::set_has_att7() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Performance_simplePerformance_30::clear_has_att7() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Performance_simplePerformance_30::clear_att7() {
  att7_ = 0;
  clear_has_att7();
}
inline ::google::protobuf::int32 Performance_simplePerformance_30::att7() const {
  return att7_;
}
inline void Performance_simplePerformance_30::set_att7(::google::protobuf::int32 value) {
  set_has_att7();
  att7_ = value;
}

// required int32 att8 = 8;
inline bool Performance_simplePerformance_30::has_att8() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Performance_simplePerformance_30::set_has_att8() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Performance_simplePerformance_30::clear_has_att8() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Performance_simplePerformance_30::clear_att8() {
  att8_ = 0;
  clear_has_att8();
}
inline ::google::protobuf::int32 Performance_simplePerformance_30::att8() const {
  return att8_;
}
inline void Performance_simplePerformance_30::set_att8(::google::protobuf::int32 value) {
  set_has_att8();
  att8_ = value;
}

// required int32 att9 = 9;
inline bool Performance_simplePerformance_30::has_att9() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Performance_simplePerformance_30::set_has_att9() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Performance_simplePerformance_30::clear_has_att9() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Performance_simplePerformance_30::clear_att9() {
  att9_ = 0;
  clear_has_att9();
}
inline ::google::protobuf::int32 Performance_simplePerformance_30::att9() const {
  return att9_;
}
inline void Performance_simplePerformance_30::set_att9(::google::protobuf::int32 value) {
  set_has_att9();
  att9_ = value;
}

// required int32 att10 = 10;
inline bool Performance_simplePerformance_30::has_att10() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Performance_simplePerformance_30::set_has_att10() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Performance_simplePerformance_30::clear_has_att10() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Performance_simplePerformance_30::clear_att10() {
  att10_ = 0;
  clear_has_att10();
}
inline ::google::protobuf::int32 Performance_simplePerformance_30::att10() const {
  return att10_;
}
inline void Performance_simplePerformance_30::set_att10(::google::protobuf::int32 value) {
  set_has_att10();
  att10_ = value;
}

// required int32 att11 = 11;
inline bool Performance_simplePerformance_30::has_att11() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Performance_simplePerformance_30::set_has_att11() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Performance_simplePerformance_30::clear_has_att11() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Performance_simplePerformance_30::clear_att11() {
  att11_ = 0;
  clear_has_att11();
}
inline ::google::protobuf::int32 Performance_simplePerformance_30::att11() const {
  return att11_;
}
inline void Performance_simplePerformance_30::set_att11(::google::protobuf::int32 value) {
  set_has_att11();
  att11_ = value;
}

// required int32 att12 = 12;
inline bool Performance_simplePerformance_30::has_att12() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Performance_simplePerformance_30::set_has_att12() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Performance_simplePerformance_30::clear_has_att12() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Performance_simplePerformance_30::clear_att12() {
  att12_ = 0;
  clear_has_att12();
}
inline ::google::protobuf::int32 Performance_simplePerformance_30::att12() const {
  return att12_;
}
inline void Performance_simplePerformance_30::set_att12(::google::protobuf::int32 value) {
  set_has_att12();
  att12_ = value;
}

// required int32 att13 = 13;
inline bool Performance_simplePerformance_30::has_att13() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Performance_simplePerformance_30::set_has_att13() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Performance_simplePerformance_30::clear_has_att13() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Performance_simplePerformance_30::clear_att13() {
  att13_ = 0;
  clear_has_att13();
}
inline ::google::protobuf::int32 Performance_simplePerformance_30::att13() const {
  return att13_;
}
inline void Performance_simplePerformance_30::set_att13(::google::protobuf::int32 value) {
  set_has_att13();
  att13_ = value;
}

// required int32 att14 = 14;
inline bool Performance_simplePerformance_30::has_att14() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void Performance_simplePerformance_30::set_has_att14() {
  _has_bits_[0] |= 0x00002000u;
}
inline void Performance_simplePerformance_30::clear_has_att14() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void Performance_simplePerformance_30::clear_att14() {
  att14_ = 0;
  clear_has_att14();
}
inline ::google::protobuf::int32 Performance_simplePerformance_30::att14() const {
  return att14_;
}
inline void Performance_simplePerformance_30::set_att14(::google::protobuf::int32 value) {
  set_has_att14();
  att14_ = value;
}

// required int32 att15 = 15;
inline bool Performance_simplePerformance_30::has_att15() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void Performance_simplePerformance_30::set_has_att15() {
  _has_bits_[0] |= 0x00004000u;
}
inline void Performance_simplePerformance_30::clear_has_att15() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void Performance_simplePerformance_30::clear_att15() {
  att15_ = 0;
  clear_has_att15();
}
inline ::google::protobuf::int32 Performance_simplePerformance_30::att15() const {
  return att15_;
}
inline void Performance_simplePerformance_30::set_att15(::google::protobuf::int32 value) {
  set_has_att15();
  att15_ = value;
}

// required int32 att16 = 16;
inline bool Performance_simplePerformance_30::has_att16() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void Performance_simplePerformance_30::set_has_att16() {
  _has_bits_[0] |= 0x00008000u;
}
inline void Performance_simplePerformance_30::clear_has_att16() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void Performance_simplePerformance_30::clear_att16() {
  att16_ = 0;
  clear_has_att16();
}
inline ::google::protobuf::int32 Performance_simplePerformance_30::att16() const {
  return att16_;
}
inline void Performance_simplePerformance_30::set_att16(::google::protobuf::int32 value) {
  set_has_att16();
  att16_ = value;
}

// required int32 att17 = 17;
inline bool Performance_simplePerformance_30::has_att17() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void Performance_simplePerformance_30::set_has_att17() {
  _has_bits_[0] |= 0x00010000u;
}
inline void Performance_simplePerformance_30::clear_has_att17() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void Performance_simplePerformance_30::clear_att17() {
  att17_ = 0;
  clear_has_att17();
}
inline ::google::protobuf::int32 Performance_simplePerformance_30::att17() const {
  return att17_;
}
inline void Performance_simplePerformance_30::set_att17(::google::protobuf::int32 value) {
  set_has_att17();
  att17_ = value;
}

// required int32 att18 = 18;
inline bool Performance_simplePerformance_30::has_att18() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void Performance_simplePerformance_30::set_has_att18() {
  _has_bits_[0] |= 0x00020000u;
}
inline void Performance_simplePerformance_30::clear_has_att18() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void Performance_simplePerformance_30::clear_att18() {
  att18_ = 0;
  clear_has_att18();
}
inline ::google::protobuf::int32 Performance_simplePerformance_30::att18() const {
  return att18_;
}
inline void Performance_simplePerformance_30::set_att18(::google::protobuf::int32 value) {
  set_has_att18();
  att18_ = value;
}

// required int32 att19 = 19;
inline bool Performance_simplePerformance_30::has_att19() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void Performance_simplePerformance_30::set_has_att19() {
  _has_bits_[0] |= 0x00040000u;
}
inline void Performance_simplePerformance_30::clear_has_att19() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void Performance_simplePerformance_30::clear_att19() {
  att19_ = 0;
  clear_has_att19();
}
inline ::google::protobuf::int32 Performance_simplePerformance_30::att19() const {
  return att19_;
}
inline void Performance_simplePerformance_30::set_att19(::google::protobuf::int32 value) {
  set_has_att19();
  att19_ = value;
}

// required int32 att20 = 20;
inline bool Performance_simplePerformance_30::has_att20() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void Performance_simplePerformance_30::set_has_att20() {
  _has_bits_[0] |= 0x00080000u;
}
inline void Performance_simplePerformance_30::clear_has_att20() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void Performance_simplePerformance_30::clear_att20() {
  att20_ = 0;
  clear_has_att20();
}
inline ::google::protobuf::int32 Performance_simplePerformance_30::att20() const {
  return att20_;
}
inline void Performance_simplePerformance_30::set_att20(::google::protobuf::int32 value) {
  set_has_att20();
  att20_ = value;
}

// required int32 att21 = 21;
inline bool Performance_simplePerformance_30::has_att21() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void Performance_simplePerformance_30::set_has_att21() {
  _has_bits_[0] |= 0x00100000u;
}
inline void Performance_simplePerformance_30::clear_has_att21() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void Performance_simplePerformance_30::clear_att21() {
  att21_ = 0;
  clear_has_att21();
}
inline ::google::protobuf::int32 Performance_simplePerformance_30::att21() const {
  return att21_;
}
inline void Performance_simplePerformance_30::set_att21(::google::protobuf::int32 value) {
  set_has_att21();
  att21_ = value;
}

// required int32 att22 = 22;
inline bool Performance_simplePerformance_30::has_att22() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void Performance_simplePerformance_30::set_has_att22() {
  _has_bits_[0] |= 0x00200000u;
}
inline void Performance_simplePerformance_30::clear_has_att22() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void Performance_simplePerformance_30::clear_att22() {
  att22_ = 0;
  clear_has_att22();
}
inline ::google::protobuf::int32 Performance_simplePerformance_30::att22() const {
  return att22_;
}
inline void Performance_simplePerformance_30::set_att22(::google::protobuf::int32 value) {
  set_has_att22();
  att22_ = value;
}

// required int32 att23 = 23;
inline bool Performance_simplePerformance_30::has_att23() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void Performance_simplePerformance_30::set_has_att23() {
  _has_bits_[0] |= 0x00400000u;
}
inline void Performance_simplePerformance_30::clear_has_att23() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void Performance_simplePerformance_30::clear_att23() {
  att23_ = 0;
  clear_has_att23();
}
inline ::google::protobuf::int32 Performance_simplePerformance_30::att23() const {
  return att23_;
}
inline void Performance_simplePerformance_30::set_att23(::google::protobuf::int32 value) {
  set_has_att23();
  att23_ = value;
}

// required int32 att24 = 24;
inline bool Performance_simplePerformance_30::has_att24() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void Performance_simplePerformance_30::set_has_att24() {
  _has_bits_[0] |= 0x00800000u;
}
inline void Performance_simplePerformance_30::clear_has_att24() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void Performance_simplePerformance_30::clear_att24() {
  att24_ = 0;
  clear_has_att24();
}
inline ::google::protobuf::int32 Performance_simplePerformance_30::att24() const {
  return att24_;
}
inline void Performance_simplePerformance_30::set_att24(::google::protobuf::int32 value) {
  set_has_att24();
  att24_ = value;
}

// required int32 att25 = 25;
inline bool Performance_simplePerformance_30::has_att25() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void Performance_simplePerformance_30::set_has_att25() {
  _has_bits_[0] |= 0x01000000u;
}
inline void Performance_simplePerformance_30::clear_has_att25() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void Performance_simplePerformance_30::clear_att25() {
  att25_ = 0;
  clear_has_att25();
}
inline ::google::protobuf::int32 Performance_simplePerformance_30::att25() const {
  return att25_;
}
inline void Performance_simplePerformance_30::set_att25(::google::protobuf::int32 value) {
  set_has_att25();
  att25_ = value;
}

// required int32 att26 = 26;
inline bool Performance_simplePerformance_30::has_att26() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void Performance_simplePerformance_30::set_has_att26() {
  _has_bits_[0] |= 0x02000000u;
}
inline void Performance_simplePerformance_30::clear_has_att26() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void Performance_simplePerformance_30::clear_att26() {
  att26_ = 0;
  clear_has_att26();
}
inline ::google::protobuf::int32 Performance_simplePerformance_30::att26() const {
  return att26_;
}
inline void Performance_simplePerformance_30::set_att26(::google::protobuf::int32 value) {
  set_has_att26();
  att26_ = value;
}

// required int32 att27 = 27;
inline bool Performance_simplePerformance_30::has_att27() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void Performance_simplePerformance_30::set_has_att27() {
  _has_bits_[0] |= 0x04000000u;
}
inline void Performance_simplePerformance_30::clear_has_att27() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void Performance_simplePerformance_30::clear_att27() {
  att27_ = 0;
  clear_has_att27();
}
inline ::google::protobuf::int32 Performance_simplePerformance_30::att27() const {
  return att27_;
}
inline void Performance_simplePerformance_30::set_att27(::google::protobuf::int32 value) {
  set_has_att27();
  att27_ = value;
}

// required int32 att28 = 28;
inline bool Performance_simplePerformance_30::has_att28() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void Performance_simplePerformance_30::set_has_att28() {
  _has_bits_[0] |= 0x08000000u;
}
inline void Performance_simplePerformance_30::clear_has_att28() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void Performance_simplePerformance_30::clear_att28() {
  att28_ = 0;
  clear_has_att28();
}
inline ::google::protobuf::int32 Performance_simplePerformance_30::att28() const {
  return att28_;
}
inline void Performance_simplePerformance_30::set_att28(::google::protobuf::int32 value) {
  set_has_att28();
  att28_ = value;
}

// required int32 att29 = 29;
inline bool Performance_simplePerformance_30::has_att29() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void Performance_simplePerformance_30::set_has_att29() {
  _has_bits_[0] |= 0x10000000u;
}
inline void Performance_simplePerformance_30::clear_has_att29() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void Performance_simplePerformance_30::clear_att29() {
  att29_ = 0;
  clear_has_att29();
}
inline ::google::protobuf::int32 Performance_simplePerformance_30::att29() const {
  return att29_;
}
inline void Performance_simplePerformance_30::set_att29(::google::protobuf::int32 value) {
  set_has_att29();
  att29_ = value;
}

// required int32 att30 = 30;
inline bool Performance_simplePerformance_30::has_att30() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void Performance_simplePerformance_30::set_has_att30() {
  _has_bits_[0] |= 0x20000000u;
}
inline void Performance_simplePerformance_30::clear_has_att30() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void Performance_simplePerformance_30::clear_att30() {
  att30_ = 0;
  clear_has_att30();
}
inline ::google::protobuf::int32 Performance_simplePerformance_30::att30() const {
  return att30_;
}
inline void Performance_simplePerformance_30::set_att30(::google::protobuf::int32 value) {
  set_has_att30();
  att30_ = value;
}

// -------------------------------------------------------------------

// Performance_simplePerformance_40

// required int32 att1 = 1;
inline bool Performance_simplePerformance_40::has_att1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Performance_simplePerformance_40::set_has_att1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Performance_simplePerformance_40::clear_has_att1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Performance_simplePerformance_40::clear_att1() {
  att1_ = 0;
  clear_has_att1();
}
inline ::google::protobuf::int32 Performance_simplePerformance_40::att1() const {
  return att1_;
}
inline void Performance_simplePerformance_40::set_att1(::google::protobuf::int32 value) {
  set_has_att1();
  att1_ = value;
}

// required int32 att2 = 2;
inline bool Performance_simplePerformance_40::has_att2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Performance_simplePerformance_40::set_has_att2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Performance_simplePerformance_40::clear_has_att2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Performance_simplePerformance_40::clear_att2() {
  att2_ = 0;
  clear_has_att2();
}
inline ::google::protobuf::int32 Performance_simplePerformance_40::att2() const {
  return att2_;
}
inline void Performance_simplePerformance_40::set_att2(::google::protobuf::int32 value) {
  set_has_att2();
  att2_ = value;
}

// required int32 att3 = 3;
inline bool Performance_simplePerformance_40::has_att3() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Performance_simplePerformance_40::set_has_att3() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Performance_simplePerformance_40::clear_has_att3() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Performance_simplePerformance_40::clear_att3() {
  att3_ = 0;
  clear_has_att3();
}
inline ::google::protobuf::int32 Performance_simplePerformance_40::att3() const {
  return att3_;
}
inline void Performance_simplePerformance_40::set_att3(::google::protobuf::int32 value) {
  set_has_att3();
  att3_ = value;
}

// required int32 att4 = 4;
inline bool Performance_simplePerformance_40::has_att4() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Performance_simplePerformance_40::set_has_att4() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Performance_simplePerformance_40::clear_has_att4() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Performance_simplePerformance_40::clear_att4() {
  att4_ = 0;
  clear_has_att4();
}
inline ::google::protobuf::int32 Performance_simplePerformance_40::att4() const {
  return att4_;
}
inline void Performance_simplePerformance_40::set_att4(::google::protobuf::int32 value) {
  set_has_att4();
  att4_ = value;
}

// required int32 att5 = 5;
inline bool Performance_simplePerformance_40::has_att5() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Performance_simplePerformance_40::set_has_att5() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Performance_simplePerformance_40::clear_has_att5() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Performance_simplePerformance_40::clear_att5() {
  att5_ = 0;
  clear_has_att5();
}
inline ::google::protobuf::int32 Performance_simplePerformance_40::att5() const {
  return att5_;
}
inline void Performance_simplePerformance_40::set_att5(::google::protobuf::int32 value) {
  set_has_att5();
  att5_ = value;
}

// required int32 att6 = 6;
inline bool Performance_simplePerformance_40::has_att6() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Performance_simplePerformance_40::set_has_att6() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Performance_simplePerformance_40::clear_has_att6() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Performance_simplePerformance_40::clear_att6() {
  att6_ = 0;
  clear_has_att6();
}
inline ::google::protobuf::int32 Performance_simplePerformance_40::att6() const {
  return att6_;
}
inline void Performance_simplePerformance_40::set_att6(::google::protobuf::int32 value) {
  set_has_att6();
  att6_ = value;
}

// required int32 att7 = 7;
inline bool Performance_simplePerformance_40::has_att7() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Performance_simplePerformance_40::set_has_att7() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Performance_simplePerformance_40::clear_has_att7() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Performance_simplePerformance_40::clear_att7() {
  att7_ = 0;
  clear_has_att7();
}
inline ::google::protobuf::int32 Performance_simplePerformance_40::att7() const {
  return att7_;
}
inline void Performance_simplePerformance_40::set_att7(::google::protobuf::int32 value) {
  set_has_att7();
  att7_ = value;
}

// required int32 att8 = 8;
inline bool Performance_simplePerformance_40::has_att8() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Performance_simplePerformance_40::set_has_att8() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Performance_simplePerformance_40::clear_has_att8() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Performance_simplePerformance_40::clear_att8() {
  att8_ = 0;
  clear_has_att8();
}
inline ::google::protobuf::int32 Performance_simplePerformance_40::att8() const {
  return att8_;
}
inline void Performance_simplePerformance_40::set_att8(::google::protobuf::int32 value) {
  set_has_att8();
  att8_ = value;
}

// required int32 att9 = 9;
inline bool Performance_simplePerformance_40::has_att9() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Performance_simplePerformance_40::set_has_att9() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Performance_simplePerformance_40::clear_has_att9() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Performance_simplePerformance_40::clear_att9() {
  att9_ = 0;
  clear_has_att9();
}
inline ::google::protobuf::int32 Performance_simplePerformance_40::att9() const {
  return att9_;
}
inline void Performance_simplePerformance_40::set_att9(::google::protobuf::int32 value) {
  set_has_att9();
  att9_ = value;
}

// required int32 att10 = 10;
inline bool Performance_simplePerformance_40::has_att10() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Performance_simplePerformance_40::set_has_att10() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Performance_simplePerformance_40::clear_has_att10() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Performance_simplePerformance_40::clear_att10() {
  att10_ = 0;
  clear_has_att10();
}
inline ::google::protobuf::int32 Performance_simplePerformance_40::att10() const {
  return att10_;
}
inline void Performance_simplePerformance_40::set_att10(::google::protobuf::int32 value) {
  set_has_att10();
  att10_ = value;
}

// required int32 att11 = 11;
inline bool Performance_simplePerformance_40::has_att11() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Performance_simplePerformance_40::set_has_att11() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Performance_simplePerformance_40::clear_has_att11() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Performance_simplePerformance_40::clear_att11() {
  att11_ = 0;
  clear_has_att11();
}
inline ::google::protobuf::int32 Performance_simplePerformance_40::att11() const {
  return att11_;
}
inline void Performance_simplePerformance_40::set_att11(::google::protobuf::int32 value) {
  set_has_att11();
  att11_ = value;
}

// required int32 att12 = 12;
inline bool Performance_simplePerformance_40::has_att12() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Performance_simplePerformance_40::set_has_att12() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Performance_simplePerformance_40::clear_has_att12() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Performance_simplePerformance_40::clear_att12() {
  att12_ = 0;
  clear_has_att12();
}
inline ::google::protobuf::int32 Performance_simplePerformance_40::att12() const {
  return att12_;
}
inline void Performance_simplePerformance_40::set_att12(::google::protobuf::int32 value) {
  set_has_att12();
  att12_ = value;
}

// required int32 att13 = 13;
inline bool Performance_simplePerformance_40::has_att13() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Performance_simplePerformance_40::set_has_att13() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Performance_simplePerformance_40::clear_has_att13() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Performance_simplePerformance_40::clear_att13() {
  att13_ = 0;
  clear_has_att13();
}
inline ::google::protobuf::int32 Performance_simplePerformance_40::att13() const {
  return att13_;
}
inline void Performance_simplePerformance_40::set_att13(::google::protobuf::int32 value) {
  set_has_att13();
  att13_ = value;
}

// required int32 att14 = 14;
inline bool Performance_simplePerformance_40::has_att14() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void Performance_simplePerformance_40::set_has_att14() {
  _has_bits_[0] |= 0x00002000u;
}
inline void Performance_simplePerformance_40::clear_has_att14() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void Performance_simplePerformance_40::clear_att14() {
  att14_ = 0;
  clear_has_att14();
}
inline ::google::protobuf::int32 Performance_simplePerformance_40::att14() const {
  return att14_;
}
inline void Performance_simplePerformance_40::set_att14(::google::protobuf::int32 value) {
  set_has_att14();
  att14_ = value;
}

// required int32 att15 = 15;
inline bool Performance_simplePerformance_40::has_att15() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void Performance_simplePerformance_40::set_has_att15() {
  _has_bits_[0] |= 0x00004000u;
}
inline void Performance_simplePerformance_40::clear_has_att15() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void Performance_simplePerformance_40::clear_att15() {
  att15_ = 0;
  clear_has_att15();
}
inline ::google::protobuf::int32 Performance_simplePerformance_40::att15() const {
  return att15_;
}
inline void Performance_simplePerformance_40::set_att15(::google::protobuf::int32 value) {
  set_has_att15();
  att15_ = value;
}

// required int32 att16 = 16;
inline bool Performance_simplePerformance_40::has_att16() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void Performance_simplePerformance_40::set_has_att16() {
  _has_bits_[0] |= 0x00008000u;
}
inline void Performance_simplePerformance_40::clear_has_att16() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void Performance_simplePerformance_40::clear_att16() {
  att16_ = 0;
  clear_has_att16();
}
inline ::google::protobuf::int32 Performance_simplePerformance_40::att16() const {
  return att16_;
}
inline void Performance_simplePerformance_40::set_att16(::google::protobuf::int32 value) {
  set_has_att16();
  att16_ = value;
}

// required int32 att17 = 17;
inline bool Performance_simplePerformance_40::has_att17() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void Performance_simplePerformance_40::set_has_att17() {
  _has_bits_[0] |= 0x00010000u;
}
inline void Performance_simplePerformance_40::clear_has_att17() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void Performance_simplePerformance_40::clear_att17() {
  att17_ = 0;
  clear_has_att17();
}
inline ::google::protobuf::int32 Performance_simplePerformance_40::att17() const {
  return att17_;
}
inline void Performance_simplePerformance_40::set_att17(::google::protobuf::int32 value) {
  set_has_att17();
  att17_ = value;
}

// required int32 att18 = 18;
inline bool Performance_simplePerformance_40::has_att18() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void Performance_simplePerformance_40::set_has_att18() {
  _has_bits_[0] |= 0x00020000u;
}
inline void Performance_simplePerformance_40::clear_has_att18() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void Performance_simplePerformance_40::clear_att18() {
  att18_ = 0;
  clear_has_att18();
}
inline ::google::protobuf::int32 Performance_simplePerformance_40::att18() const {
  return att18_;
}
inline void Performance_simplePerformance_40::set_att18(::google::protobuf::int32 value) {
  set_has_att18();
  att18_ = value;
}

// required int32 att19 = 19;
inline bool Performance_simplePerformance_40::has_att19() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void Performance_simplePerformance_40::set_has_att19() {
  _has_bits_[0] |= 0x00040000u;
}
inline void Performance_simplePerformance_40::clear_has_att19() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void Performance_simplePerformance_40::clear_att19() {
  att19_ = 0;
  clear_has_att19();
}
inline ::google::protobuf::int32 Performance_simplePerformance_40::att19() const {
  return att19_;
}
inline void Performance_simplePerformance_40::set_att19(::google::protobuf::int32 value) {
  set_has_att19();
  att19_ = value;
}

// required int32 att20 = 20;
inline bool Performance_simplePerformance_40::has_att20() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void Performance_simplePerformance_40::set_has_att20() {
  _has_bits_[0] |= 0x00080000u;
}
inline void Performance_simplePerformance_40::clear_has_att20() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void Performance_simplePerformance_40::clear_att20() {
  att20_ = 0;
  clear_has_att20();
}
inline ::google::protobuf::int32 Performance_simplePerformance_40::att20() const {
  return att20_;
}
inline void Performance_simplePerformance_40::set_att20(::google::protobuf::int32 value) {
  set_has_att20();
  att20_ = value;
}

// required int32 att21 = 21;
inline bool Performance_simplePerformance_40::has_att21() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void Performance_simplePerformance_40::set_has_att21() {
  _has_bits_[0] |= 0x00100000u;
}
inline void Performance_simplePerformance_40::clear_has_att21() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void Performance_simplePerformance_40::clear_att21() {
  att21_ = 0;
  clear_has_att21();
}
inline ::google::protobuf::int32 Performance_simplePerformance_40::att21() const {
  return att21_;
}
inline void Performance_simplePerformance_40::set_att21(::google::protobuf::int32 value) {
  set_has_att21();
  att21_ = value;
}

// required int32 att22 = 22;
inline bool Performance_simplePerformance_40::has_att22() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void Performance_simplePerformance_40::set_has_att22() {
  _has_bits_[0] |= 0x00200000u;
}
inline void Performance_simplePerformance_40::clear_has_att22() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void Performance_simplePerformance_40::clear_att22() {
  att22_ = 0;
  clear_has_att22();
}
inline ::google::protobuf::int32 Performance_simplePerformance_40::att22() const {
  return att22_;
}
inline void Performance_simplePerformance_40::set_att22(::google::protobuf::int32 value) {
  set_has_att22();
  att22_ = value;
}

// required int32 att23 = 23;
inline bool Performance_simplePerformance_40::has_att23() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void Performance_simplePerformance_40::set_has_att23() {
  _has_bits_[0] |= 0x00400000u;
}
inline void Performance_simplePerformance_40::clear_has_att23() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void Performance_simplePerformance_40::clear_att23() {
  att23_ = 0;
  clear_has_att23();
}
inline ::google::protobuf::int32 Performance_simplePerformance_40::att23() const {
  return att23_;
}
inline void Performance_simplePerformance_40::set_att23(::google::protobuf::int32 value) {
  set_has_att23();
  att23_ = value;
}

// required int32 att24 = 24;
inline bool Performance_simplePerformance_40::has_att24() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void Performance_simplePerformance_40::set_has_att24() {
  _has_bits_[0] |= 0x00800000u;
}
inline void Performance_simplePerformance_40::clear_has_att24() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void Performance_simplePerformance_40::clear_att24() {
  att24_ = 0;
  clear_has_att24();
}
inline ::google::protobuf::int32 Performance_simplePerformance_40::att24() const {
  return att24_;
}
inline void Performance_simplePerformance_40::set_att24(::google::protobuf::int32 value) {
  set_has_att24();
  att24_ = value;
}

// required int32 att25 = 25;
inline bool Performance_simplePerformance_40::has_att25() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void Performance_simplePerformance_40::set_has_att25() {
  _has_bits_[0] |= 0x01000000u;
}
inline void Performance_simplePerformance_40::clear_has_att25() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void Performance_simplePerformance_40::clear_att25() {
  att25_ = 0;
  clear_has_att25();
}
inline ::google::protobuf::int32 Performance_simplePerformance_40::att25() const {
  return att25_;
}
inline void Performance_simplePerformance_40::set_att25(::google::protobuf::int32 value) {
  set_has_att25();
  att25_ = value;
}

// required int32 att26 = 26;
inline bool Performance_simplePerformance_40::has_att26() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void Performance_simplePerformance_40::set_has_att26() {
  _has_bits_[0] |= 0x02000000u;
}
inline void Performance_simplePerformance_40::clear_has_att26() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void Performance_simplePerformance_40::clear_att26() {
  att26_ = 0;
  clear_has_att26();
}
inline ::google::protobuf::int32 Performance_simplePerformance_40::att26() const {
  return att26_;
}
inline void Performance_simplePerformance_40::set_att26(::google::protobuf::int32 value) {
  set_has_att26();
  att26_ = value;
}

// required int32 att27 = 27;
inline bool Performance_simplePerformance_40::has_att27() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void Performance_simplePerformance_40::set_has_att27() {
  _has_bits_[0] |= 0x04000000u;
}
inline void Performance_simplePerformance_40::clear_has_att27() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void Performance_simplePerformance_40::clear_att27() {
  att27_ = 0;
  clear_has_att27();
}
inline ::google::protobuf::int32 Performance_simplePerformance_40::att27() const {
  return att27_;
}
inline void Performance_simplePerformance_40::set_att27(::google::protobuf::int32 value) {
  set_has_att27();
  att27_ = value;
}

// required int32 att28 = 28;
inline bool Performance_simplePerformance_40::has_att28() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void Performance_simplePerformance_40::set_has_att28() {
  _has_bits_[0] |= 0x08000000u;
}
inline void Performance_simplePerformance_40::clear_has_att28() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void Performance_simplePerformance_40::clear_att28() {
  att28_ = 0;
  clear_has_att28();
}
inline ::google::protobuf::int32 Performance_simplePerformance_40::att28() const {
  return att28_;
}
inline void Performance_simplePerformance_40::set_att28(::google::protobuf::int32 value) {
  set_has_att28();
  att28_ = value;
}

// required int32 att29 = 29;
inline bool Performance_simplePerformance_40::has_att29() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void Performance_simplePerformance_40::set_has_att29() {
  _has_bits_[0] |= 0x10000000u;
}
inline void Performance_simplePerformance_40::clear_has_att29() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void Performance_simplePerformance_40::clear_att29() {
  att29_ = 0;
  clear_has_att29();
}
inline ::google::protobuf::int32 Performance_simplePerformance_40::att29() const {
  return att29_;
}
inline void Performance_simplePerformance_40::set_att29(::google::protobuf::int32 value) {
  set_has_att29();
  att29_ = value;
}

// required int32 att30 = 30;
inline bool Performance_simplePerformance_40::has_att30() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void Performance_simplePerformance_40::set_has_att30() {
  _has_bits_[0] |= 0x20000000u;
}
inline void Performance_simplePerformance_40::clear_has_att30() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void Performance_simplePerformance_40::clear_att30() {
  att30_ = 0;
  clear_has_att30();
}
inline ::google::protobuf::int32 Performance_simplePerformance_40::att30() const {
  return att30_;
}
inline void Performance_simplePerformance_40::set_att30(::google::protobuf::int32 value) {
  set_has_att30();
  att30_ = value;
}

// required int32 att31 = 31;
inline bool Performance_simplePerformance_40::has_att31() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void Performance_simplePerformance_40::set_has_att31() {
  _has_bits_[0] |= 0x40000000u;
}
inline void Performance_simplePerformance_40::clear_has_att31() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void Performance_simplePerformance_40::clear_att31() {
  att31_ = 0;
  clear_has_att31();
}
inline ::google::protobuf::int32 Performance_simplePerformance_40::att31() const {
  return att31_;
}
inline void Performance_simplePerformance_40::set_att31(::google::protobuf::int32 value) {
  set_has_att31();
  att31_ = value;
}

// required int32 att32 = 32;
inline bool Performance_simplePerformance_40::has_att32() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void Performance_simplePerformance_40::set_has_att32() {
  _has_bits_[0] |= 0x80000000u;
}
inline void Performance_simplePerformance_40::clear_has_att32() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void Performance_simplePerformance_40::clear_att32() {
  att32_ = 0;
  clear_has_att32();
}
inline ::google::protobuf::int32 Performance_simplePerformance_40::att32() const {
  return att32_;
}
inline void Performance_simplePerformance_40::set_att32(::google::protobuf::int32 value) {
  set_has_att32();
  att32_ = value;
}

// required int32 att33 = 33;
inline bool Performance_simplePerformance_40::has_att33() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void Performance_simplePerformance_40::set_has_att33() {
  _has_bits_[1] |= 0x00000001u;
}
inline void Performance_simplePerformance_40::clear_has_att33() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void Performance_simplePerformance_40::clear_att33() {
  att33_ = 0;
  clear_has_att33();
}
inline ::google::protobuf::int32 Performance_simplePerformance_40::att33() const {
  return att33_;
}
inline void Performance_simplePerformance_40::set_att33(::google::protobuf::int32 value) {
  set_has_att33();
  att33_ = value;
}

// required int32 att34 = 34;
inline bool Performance_simplePerformance_40::has_att34() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void Performance_simplePerformance_40::set_has_att34() {
  _has_bits_[1] |= 0x00000002u;
}
inline void Performance_simplePerformance_40::clear_has_att34() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void Performance_simplePerformance_40::clear_att34() {
  att34_ = 0;
  clear_has_att34();
}
inline ::google::protobuf::int32 Performance_simplePerformance_40::att34() const {
  return att34_;
}
inline void Performance_simplePerformance_40::set_att34(::google::protobuf::int32 value) {
  set_has_att34();
  att34_ = value;
}

// required int32 att35 = 35;
inline bool Performance_simplePerformance_40::has_att35() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void Performance_simplePerformance_40::set_has_att35() {
  _has_bits_[1] |= 0x00000004u;
}
inline void Performance_simplePerformance_40::clear_has_att35() {
  _has_bits_[1] &= ~0x00000004u;
}
inline void Performance_simplePerformance_40::clear_att35() {
  att35_ = 0;
  clear_has_att35();
}
inline ::google::protobuf::int32 Performance_simplePerformance_40::att35() const {
  return att35_;
}
inline void Performance_simplePerformance_40::set_att35(::google::protobuf::int32 value) {
  set_has_att35();
  att35_ = value;
}

// required int32 att36 = 36;
inline bool Performance_simplePerformance_40::has_att36() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void Performance_simplePerformance_40::set_has_att36() {
  _has_bits_[1] |= 0x00000008u;
}
inline void Performance_simplePerformance_40::clear_has_att36() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void Performance_simplePerformance_40::clear_att36() {
  att36_ = 0;
  clear_has_att36();
}
inline ::google::protobuf::int32 Performance_simplePerformance_40::att36() const {
  return att36_;
}
inline void Performance_simplePerformance_40::set_att36(::google::protobuf::int32 value) {
  set_has_att36();
  att36_ = value;
}

// required int32 att37 = 37;
inline bool Performance_simplePerformance_40::has_att37() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void Performance_simplePerformance_40::set_has_att37() {
  _has_bits_[1] |= 0x00000010u;
}
inline void Performance_simplePerformance_40::clear_has_att37() {
  _has_bits_[1] &= ~0x00000010u;
}
inline void Performance_simplePerformance_40::clear_att37() {
  att37_ = 0;
  clear_has_att37();
}
inline ::google::protobuf::int32 Performance_simplePerformance_40::att37() const {
  return att37_;
}
inline void Performance_simplePerformance_40::set_att37(::google::protobuf::int32 value) {
  set_has_att37();
  att37_ = value;
}

// required int32 att38 = 38;
inline bool Performance_simplePerformance_40::has_att38() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
inline void Performance_simplePerformance_40::set_has_att38() {
  _has_bits_[1] |= 0x00000020u;
}
inline void Performance_simplePerformance_40::clear_has_att38() {
  _has_bits_[1] &= ~0x00000020u;
}
inline void Performance_simplePerformance_40::clear_att38() {
  att38_ = 0;
  clear_has_att38();
}
inline ::google::protobuf::int32 Performance_simplePerformance_40::att38() const {
  return att38_;
}
inline void Performance_simplePerformance_40::set_att38(::google::protobuf::int32 value) {
  set_has_att38();
  att38_ = value;
}

// required int32 att39 = 39;
inline bool Performance_simplePerformance_40::has_att39() const {
  return (_has_bits_[1] & 0x00000040u) != 0;
}
inline void Performance_simplePerformance_40::set_has_att39() {
  _has_bits_[1] |= 0x00000040u;
}
inline void Performance_simplePerformance_40::clear_has_att39() {
  _has_bits_[1] &= ~0x00000040u;
}
inline void Performance_simplePerformance_40::clear_att39() {
  att39_ = 0;
  clear_has_att39();
}
inline ::google::protobuf::int32 Performance_simplePerformance_40::att39() const {
  return att39_;
}
inline void Performance_simplePerformance_40::set_att39(::google::protobuf::int32 value) {
  set_has_att39();
  att39_ = value;
}

// required int32 att40 = 40;
inline bool Performance_simplePerformance_40::has_att40() const {
  return (_has_bits_[1] & 0x00000080u) != 0;
}
inline void Performance_simplePerformance_40::set_has_att40() {
  _has_bits_[1] |= 0x00000080u;
}
inline void Performance_simplePerformance_40::clear_has_att40() {
  _has_bits_[1] &= ~0x00000080u;
}
inline void Performance_simplePerformance_40::clear_att40() {
  att40_ = 0;
  clear_has_att40();
}
inline ::google::protobuf::int32 Performance_simplePerformance_40::att40() const {
  return att40_;
}
inline void Performance_simplePerformance_40::set_att40(::google::protobuf::int32 value) {
  set_has_att40();
  att40_ = value;
}

// -------------------------------------------------------------------

// Performance_simplePerformance_50

// required int32 att1 = 1;
inline bool Performance_simplePerformance_50::has_att1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Performance_simplePerformance_50::set_has_att1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Performance_simplePerformance_50::clear_has_att1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Performance_simplePerformance_50::clear_att1() {
  att1_ = 0;
  clear_has_att1();
}
inline ::google::protobuf::int32 Performance_simplePerformance_50::att1() const {
  return att1_;
}
inline void Performance_simplePerformance_50::set_att1(::google::protobuf::int32 value) {
  set_has_att1();
  att1_ = value;
}

// required int32 att2 = 2;
inline bool Performance_simplePerformance_50::has_att2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Performance_simplePerformance_50::set_has_att2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Performance_simplePerformance_50::clear_has_att2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Performance_simplePerformance_50::clear_att2() {
  att2_ = 0;
  clear_has_att2();
}
inline ::google::protobuf::int32 Performance_simplePerformance_50::att2() const {
  return att2_;
}
inline void Performance_simplePerformance_50::set_att2(::google::protobuf::int32 value) {
  set_has_att2();
  att2_ = value;
}

// required int32 att3 = 3;
inline bool Performance_simplePerformance_50::has_att3() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Performance_simplePerformance_50::set_has_att3() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Performance_simplePerformance_50::clear_has_att3() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Performance_simplePerformance_50::clear_att3() {
  att3_ = 0;
  clear_has_att3();
}
inline ::google::protobuf::int32 Performance_simplePerformance_50::att3() const {
  return att3_;
}
inline void Performance_simplePerformance_50::set_att3(::google::protobuf::int32 value) {
  set_has_att3();
  att3_ = value;
}

// required int32 att4 = 4;
inline bool Performance_simplePerformance_50::has_att4() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Performance_simplePerformance_50::set_has_att4() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Performance_simplePerformance_50::clear_has_att4() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Performance_simplePerformance_50::clear_att4() {
  att4_ = 0;
  clear_has_att4();
}
inline ::google::protobuf::int32 Performance_simplePerformance_50::att4() const {
  return att4_;
}
inline void Performance_simplePerformance_50::set_att4(::google::protobuf::int32 value) {
  set_has_att4();
  att4_ = value;
}

// required int32 att5 = 5;
inline bool Performance_simplePerformance_50::has_att5() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Performance_simplePerformance_50::set_has_att5() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Performance_simplePerformance_50::clear_has_att5() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Performance_simplePerformance_50::clear_att5() {
  att5_ = 0;
  clear_has_att5();
}
inline ::google::protobuf::int32 Performance_simplePerformance_50::att5() const {
  return att5_;
}
inline void Performance_simplePerformance_50::set_att5(::google::protobuf::int32 value) {
  set_has_att5();
  att5_ = value;
}

// required int32 att6 = 6;
inline bool Performance_simplePerformance_50::has_att6() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Performance_simplePerformance_50::set_has_att6() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Performance_simplePerformance_50::clear_has_att6() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Performance_simplePerformance_50::clear_att6() {
  att6_ = 0;
  clear_has_att6();
}
inline ::google::protobuf::int32 Performance_simplePerformance_50::att6() const {
  return att6_;
}
inline void Performance_simplePerformance_50::set_att6(::google::protobuf::int32 value) {
  set_has_att6();
  att6_ = value;
}

// required int32 att7 = 7;
inline bool Performance_simplePerformance_50::has_att7() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Performance_simplePerformance_50::set_has_att7() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Performance_simplePerformance_50::clear_has_att7() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Performance_simplePerformance_50::clear_att7() {
  att7_ = 0;
  clear_has_att7();
}
inline ::google::protobuf::int32 Performance_simplePerformance_50::att7() const {
  return att7_;
}
inline void Performance_simplePerformance_50::set_att7(::google::protobuf::int32 value) {
  set_has_att7();
  att7_ = value;
}

// required int32 att8 = 8;
inline bool Performance_simplePerformance_50::has_att8() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Performance_simplePerformance_50::set_has_att8() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Performance_simplePerformance_50::clear_has_att8() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Performance_simplePerformance_50::clear_att8() {
  att8_ = 0;
  clear_has_att8();
}
inline ::google::protobuf::int32 Performance_simplePerformance_50::att8() const {
  return att8_;
}
inline void Performance_simplePerformance_50::set_att8(::google::protobuf::int32 value) {
  set_has_att8();
  att8_ = value;
}

// required int32 att9 = 9;
inline bool Performance_simplePerformance_50::has_att9() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Performance_simplePerformance_50::set_has_att9() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Performance_simplePerformance_50::clear_has_att9() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Performance_simplePerformance_50::clear_att9() {
  att9_ = 0;
  clear_has_att9();
}
inline ::google::protobuf::int32 Performance_simplePerformance_50::att9() const {
  return att9_;
}
inline void Performance_simplePerformance_50::set_att9(::google::protobuf::int32 value) {
  set_has_att9();
  att9_ = value;
}

// required int32 att10 = 10;
inline bool Performance_simplePerformance_50::has_att10() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Performance_simplePerformance_50::set_has_att10() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Performance_simplePerformance_50::clear_has_att10() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Performance_simplePerformance_50::clear_att10() {
  att10_ = 0;
  clear_has_att10();
}
inline ::google::protobuf::int32 Performance_simplePerformance_50::att10() const {
  return att10_;
}
inline void Performance_simplePerformance_50::set_att10(::google::protobuf::int32 value) {
  set_has_att10();
  att10_ = value;
}

// required int32 att11 = 11;
inline bool Performance_simplePerformance_50::has_att11() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Performance_simplePerformance_50::set_has_att11() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Performance_simplePerformance_50::clear_has_att11() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Performance_simplePerformance_50::clear_att11() {
  att11_ = 0;
  clear_has_att11();
}
inline ::google::protobuf::int32 Performance_simplePerformance_50::att11() const {
  return att11_;
}
inline void Performance_simplePerformance_50::set_att11(::google::protobuf::int32 value) {
  set_has_att11();
  att11_ = value;
}

// required int32 att12 = 12;
inline bool Performance_simplePerformance_50::has_att12() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Performance_simplePerformance_50::set_has_att12() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Performance_simplePerformance_50::clear_has_att12() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Performance_simplePerformance_50::clear_att12() {
  att12_ = 0;
  clear_has_att12();
}
inline ::google::protobuf::int32 Performance_simplePerformance_50::att12() const {
  return att12_;
}
inline void Performance_simplePerformance_50::set_att12(::google::protobuf::int32 value) {
  set_has_att12();
  att12_ = value;
}

// required int32 att13 = 13;
inline bool Performance_simplePerformance_50::has_att13() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Performance_simplePerformance_50::set_has_att13() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Performance_simplePerformance_50::clear_has_att13() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Performance_simplePerformance_50::clear_att13() {
  att13_ = 0;
  clear_has_att13();
}
inline ::google::protobuf::int32 Performance_simplePerformance_50::att13() const {
  return att13_;
}
inline void Performance_simplePerformance_50::set_att13(::google::protobuf::int32 value) {
  set_has_att13();
  att13_ = value;
}

// required int32 att14 = 14;
inline bool Performance_simplePerformance_50::has_att14() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void Performance_simplePerformance_50::set_has_att14() {
  _has_bits_[0] |= 0x00002000u;
}
inline void Performance_simplePerformance_50::clear_has_att14() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void Performance_simplePerformance_50::clear_att14() {
  att14_ = 0;
  clear_has_att14();
}
inline ::google::protobuf::int32 Performance_simplePerformance_50::att14() const {
  return att14_;
}
inline void Performance_simplePerformance_50::set_att14(::google::protobuf::int32 value) {
  set_has_att14();
  att14_ = value;
}

// required int32 att15 = 15;
inline bool Performance_simplePerformance_50::has_att15() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void Performance_simplePerformance_50::set_has_att15() {
  _has_bits_[0] |= 0x00004000u;
}
inline void Performance_simplePerformance_50::clear_has_att15() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void Performance_simplePerformance_50::clear_att15() {
  att15_ = 0;
  clear_has_att15();
}
inline ::google::protobuf::int32 Performance_simplePerformance_50::att15() const {
  return att15_;
}
inline void Performance_simplePerformance_50::set_att15(::google::protobuf::int32 value) {
  set_has_att15();
  att15_ = value;
}

// required int32 att16 = 16;
inline bool Performance_simplePerformance_50::has_att16() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void Performance_simplePerformance_50::set_has_att16() {
  _has_bits_[0] |= 0x00008000u;
}
inline void Performance_simplePerformance_50::clear_has_att16() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void Performance_simplePerformance_50::clear_att16() {
  att16_ = 0;
  clear_has_att16();
}
inline ::google::protobuf::int32 Performance_simplePerformance_50::att16() const {
  return att16_;
}
inline void Performance_simplePerformance_50::set_att16(::google::protobuf::int32 value) {
  set_has_att16();
  att16_ = value;
}

// required int32 att17 = 17;
inline bool Performance_simplePerformance_50::has_att17() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void Performance_simplePerformance_50::set_has_att17() {
  _has_bits_[0] |= 0x00010000u;
}
inline void Performance_simplePerformance_50::clear_has_att17() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void Performance_simplePerformance_50::clear_att17() {
  att17_ = 0;
  clear_has_att17();
}
inline ::google::protobuf::int32 Performance_simplePerformance_50::att17() const {
  return att17_;
}
inline void Performance_simplePerformance_50::set_att17(::google::protobuf::int32 value) {
  set_has_att17();
  att17_ = value;
}

// required int32 att18 = 18;
inline bool Performance_simplePerformance_50::has_att18() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void Performance_simplePerformance_50::set_has_att18() {
  _has_bits_[0] |= 0x00020000u;
}
inline void Performance_simplePerformance_50::clear_has_att18() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void Performance_simplePerformance_50::clear_att18() {
  att18_ = 0;
  clear_has_att18();
}
inline ::google::protobuf::int32 Performance_simplePerformance_50::att18() const {
  return att18_;
}
inline void Performance_simplePerformance_50::set_att18(::google::protobuf::int32 value) {
  set_has_att18();
  att18_ = value;
}

// required int32 att19 = 19;
inline bool Performance_simplePerformance_50::has_att19() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void Performance_simplePerformance_50::set_has_att19() {
  _has_bits_[0] |= 0x00040000u;
}
inline void Performance_simplePerformance_50::clear_has_att19() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void Performance_simplePerformance_50::clear_att19() {
  att19_ = 0;
  clear_has_att19();
}
inline ::google::protobuf::int32 Performance_simplePerformance_50::att19() const {
  return att19_;
}
inline void Performance_simplePerformance_50::set_att19(::google::protobuf::int32 value) {
  set_has_att19();
  att19_ = value;
}

// required int32 att20 = 20;
inline bool Performance_simplePerformance_50::has_att20() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void Performance_simplePerformance_50::set_has_att20() {
  _has_bits_[0] |= 0x00080000u;
}
inline void Performance_simplePerformance_50::clear_has_att20() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void Performance_simplePerformance_50::clear_att20() {
  att20_ = 0;
  clear_has_att20();
}
inline ::google::protobuf::int32 Performance_simplePerformance_50::att20() const {
  return att20_;
}
inline void Performance_simplePerformance_50::set_att20(::google::protobuf::int32 value) {
  set_has_att20();
  att20_ = value;
}

// required int32 att21 = 21;
inline bool Performance_simplePerformance_50::has_att21() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void Performance_simplePerformance_50::set_has_att21() {
  _has_bits_[0] |= 0x00100000u;
}
inline void Performance_simplePerformance_50::clear_has_att21() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void Performance_simplePerformance_50::clear_att21() {
  att21_ = 0;
  clear_has_att21();
}
inline ::google::protobuf::int32 Performance_simplePerformance_50::att21() const {
  return att21_;
}
inline void Performance_simplePerformance_50::set_att21(::google::protobuf::int32 value) {
  set_has_att21();
  att21_ = value;
}

// required int32 att22 = 22;
inline bool Performance_simplePerformance_50::has_att22() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void Performance_simplePerformance_50::set_has_att22() {
  _has_bits_[0] |= 0x00200000u;
}
inline void Performance_simplePerformance_50::clear_has_att22() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void Performance_simplePerformance_50::clear_att22() {
  att22_ = 0;
  clear_has_att22();
}
inline ::google::protobuf::int32 Performance_simplePerformance_50::att22() const {
  return att22_;
}
inline void Performance_simplePerformance_50::set_att22(::google::protobuf::int32 value) {
  set_has_att22();
  att22_ = value;
}

// required int32 att23 = 23;
inline bool Performance_simplePerformance_50::has_att23() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void Performance_simplePerformance_50::set_has_att23() {
  _has_bits_[0] |= 0x00400000u;
}
inline void Performance_simplePerformance_50::clear_has_att23() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void Performance_simplePerformance_50::clear_att23() {
  att23_ = 0;
  clear_has_att23();
}
inline ::google::protobuf::int32 Performance_simplePerformance_50::att23() const {
  return att23_;
}
inline void Performance_simplePerformance_50::set_att23(::google::protobuf::int32 value) {
  set_has_att23();
  att23_ = value;
}

// required int32 att24 = 24;
inline bool Performance_simplePerformance_50::has_att24() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void Performance_simplePerformance_50::set_has_att24() {
  _has_bits_[0] |= 0x00800000u;
}
inline void Performance_simplePerformance_50::clear_has_att24() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void Performance_simplePerformance_50::clear_att24() {
  att24_ = 0;
  clear_has_att24();
}
inline ::google::protobuf::int32 Performance_simplePerformance_50::att24() const {
  return att24_;
}
inline void Performance_simplePerformance_50::set_att24(::google::protobuf::int32 value) {
  set_has_att24();
  att24_ = value;
}

// required int32 att25 = 25;
inline bool Performance_simplePerformance_50::has_att25() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void Performance_simplePerformance_50::set_has_att25() {
  _has_bits_[0] |= 0x01000000u;
}
inline void Performance_simplePerformance_50::clear_has_att25() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void Performance_simplePerformance_50::clear_att25() {
  att25_ = 0;
  clear_has_att25();
}
inline ::google::protobuf::int32 Performance_simplePerformance_50::att25() const {
  return att25_;
}
inline void Performance_simplePerformance_50::set_att25(::google::protobuf::int32 value) {
  set_has_att25();
  att25_ = value;
}

// required int32 att26 = 26;
inline bool Performance_simplePerformance_50::has_att26() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void Performance_simplePerformance_50::set_has_att26() {
  _has_bits_[0] |= 0x02000000u;
}
inline void Performance_simplePerformance_50::clear_has_att26() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void Performance_simplePerformance_50::clear_att26() {
  att26_ = 0;
  clear_has_att26();
}
inline ::google::protobuf::int32 Performance_simplePerformance_50::att26() const {
  return att26_;
}
inline void Performance_simplePerformance_50::set_att26(::google::protobuf::int32 value) {
  set_has_att26();
  att26_ = value;
}

// required int32 att27 = 27;
inline bool Performance_simplePerformance_50::has_att27() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void Performance_simplePerformance_50::set_has_att27() {
  _has_bits_[0] |= 0x04000000u;
}
inline void Performance_simplePerformance_50::clear_has_att27() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void Performance_simplePerformance_50::clear_att27() {
  att27_ = 0;
  clear_has_att27();
}
inline ::google::protobuf::int32 Performance_simplePerformance_50::att27() const {
  return att27_;
}
inline void Performance_simplePerformance_50::set_att27(::google::protobuf::int32 value) {
  set_has_att27();
  att27_ = value;
}

// required int32 att28 = 28;
inline bool Performance_simplePerformance_50::has_att28() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void Performance_simplePerformance_50::set_has_att28() {
  _has_bits_[0] |= 0x08000000u;
}
inline void Performance_simplePerformance_50::clear_has_att28() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void Performance_simplePerformance_50::clear_att28() {
  att28_ = 0;
  clear_has_att28();
}
inline ::google::protobuf::int32 Performance_simplePerformance_50::att28() const {
  return att28_;
}
inline void Performance_simplePerformance_50::set_att28(::google::protobuf::int32 value) {
  set_has_att28();
  att28_ = value;
}

// required int32 att29 = 29;
inline bool Performance_simplePerformance_50::has_att29() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void Performance_simplePerformance_50::set_has_att29() {
  _has_bits_[0] |= 0x10000000u;
}
inline void Performance_simplePerformance_50::clear_has_att29() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void Performance_simplePerformance_50::clear_att29() {
  att29_ = 0;
  clear_has_att29();
}
inline ::google::protobuf::int32 Performance_simplePerformance_50::att29() const {
  return att29_;
}
inline void Performance_simplePerformance_50::set_att29(::google::protobuf::int32 value) {
  set_has_att29();
  att29_ = value;
}

// required int32 att30 = 30;
inline bool Performance_simplePerformance_50::has_att30() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void Performance_simplePerformance_50::set_has_att30() {
  _has_bits_[0] |= 0x20000000u;
}
inline void Performance_simplePerformance_50::clear_has_att30() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void Performance_simplePerformance_50::clear_att30() {
  att30_ = 0;
  clear_has_att30();
}
inline ::google::protobuf::int32 Performance_simplePerformance_50::att30() const {
  return att30_;
}
inline void Performance_simplePerformance_50::set_att30(::google::protobuf::int32 value) {
  set_has_att30();
  att30_ = value;
}

// required int32 att31 = 31;
inline bool Performance_simplePerformance_50::has_att31() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void Performance_simplePerformance_50::set_has_att31() {
  _has_bits_[0] |= 0x40000000u;
}
inline void Performance_simplePerformance_50::clear_has_att31() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void Performance_simplePerformance_50::clear_att31() {
  att31_ = 0;
  clear_has_att31();
}
inline ::google::protobuf::int32 Performance_simplePerformance_50::att31() const {
  return att31_;
}
inline void Performance_simplePerformance_50::set_att31(::google::protobuf::int32 value) {
  set_has_att31();
  att31_ = value;
}

// required int32 att32 = 32;
inline bool Performance_simplePerformance_50::has_att32() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void Performance_simplePerformance_50::set_has_att32() {
  _has_bits_[0] |= 0x80000000u;
}
inline void Performance_simplePerformance_50::clear_has_att32() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void Performance_simplePerformance_50::clear_att32() {
  att32_ = 0;
  clear_has_att32();
}
inline ::google::protobuf::int32 Performance_simplePerformance_50::att32() const {
  return att32_;
}
inline void Performance_simplePerformance_50::set_att32(::google::protobuf::int32 value) {
  set_has_att32();
  att32_ = value;
}

// required int32 att33 = 33;
inline bool Performance_simplePerformance_50::has_att33() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void Performance_simplePerformance_50::set_has_att33() {
  _has_bits_[1] |= 0x00000001u;
}
inline void Performance_simplePerformance_50::clear_has_att33() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void Performance_simplePerformance_50::clear_att33() {
  att33_ = 0;
  clear_has_att33();
}
inline ::google::protobuf::int32 Performance_simplePerformance_50::att33() const {
  return att33_;
}
inline void Performance_simplePerformance_50::set_att33(::google::protobuf::int32 value) {
  set_has_att33();
  att33_ = value;
}

// required int32 att34 = 34;
inline bool Performance_simplePerformance_50::has_att34() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void Performance_simplePerformance_50::set_has_att34() {
  _has_bits_[1] |= 0x00000002u;
}
inline void Performance_simplePerformance_50::clear_has_att34() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void Performance_simplePerformance_50::clear_att34() {
  att34_ = 0;
  clear_has_att34();
}
inline ::google::protobuf::int32 Performance_simplePerformance_50::att34() const {
  return att34_;
}
inline void Performance_simplePerformance_50::set_att34(::google::protobuf::int32 value) {
  set_has_att34();
  att34_ = value;
}

// required int32 att35 = 35;
inline bool Performance_simplePerformance_50::has_att35() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void Performance_simplePerformance_50::set_has_att35() {
  _has_bits_[1] |= 0x00000004u;
}
inline void Performance_simplePerformance_50::clear_has_att35() {
  _has_bits_[1] &= ~0x00000004u;
}
inline void Performance_simplePerformance_50::clear_att35() {
  att35_ = 0;
  clear_has_att35();
}
inline ::google::protobuf::int32 Performance_simplePerformance_50::att35() const {
  return att35_;
}
inline void Performance_simplePerformance_50::set_att35(::google::protobuf::int32 value) {
  set_has_att35();
  att35_ = value;
}

// required int32 att36 = 36;
inline bool Performance_simplePerformance_50::has_att36() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void Performance_simplePerformance_50::set_has_att36() {
  _has_bits_[1] |= 0x00000008u;
}
inline void Performance_simplePerformance_50::clear_has_att36() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void Performance_simplePerformance_50::clear_att36() {
  att36_ = 0;
  clear_has_att36();
}
inline ::google::protobuf::int32 Performance_simplePerformance_50::att36() const {
  return att36_;
}
inline void Performance_simplePerformance_50::set_att36(::google::protobuf::int32 value) {
  set_has_att36();
  att36_ = value;
}

// required int32 att37 = 37;
inline bool Performance_simplePerformance_50::has_att37() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void Performance_simplePerformance_50::set_has_att37() {
  _has_bits_[1] |= 0x00000010u;
}
inline void Performance_simplePerformance_50::clear_has_att37() {
  _has_bits_[1] &= ~0x00000010u;
}
inline void Performance_simplePerformance_50::clear_att37() {
  att37_ = 0;
  clear_has_att37();
}
inline ::google::protobuf::int32 Performance_simplePerformance_50::att37() const {
  return att37_;
}
inline void Performance_simplePerformance_50::set_att37(::google::protobuf::int32 value) {
  set_has_att37();
  att37_ = value;
}

// required int32 att38 = 38;
inline bool Performance_simplePerformance_50::has_att38() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
inline void Performance_simplePerformance_50::set_has_att38() {
  _has_bits_[1] |= 0x00000020u;
}
inline void Performance_simplePerformance_50::clear_has_att38() {
  _has_bits_[1] &= ~0x00000020u;
}
inline void Performance_simplePerformance_50::clear_att38() {
  att38_ = 0;
  clear_has_att38();
}
inline ::google::protobuf::int32 Performance_simplePerformance_50::att38() const {
  return att38_;
}
inline void Performance_simplePerformance_50::set_att38(::google::protobuf::int32 value) {
  set_has_att38();
  att38_ = value;
}

// required int32 att39 = 39;
inline bool Performance_simplePerformance_50::has_att39() const {
  return (_has_bits_[1] & 0x00000040u) != 0;
}
inline void Performance_simplePerformance_50::set_has_att39() {
  _has_bits_[1] |= 0x00000040u;
}
inline void Performance_simplePerformance_50::clear_has_att39() {
  _has_bits_[1] &= ~0x00000040u;
}
inline void Performance_simplePerformance_50::clear_att39() {
  att39_ = 0;
  clear_has_att39();
}
inline ::google::protobuf::int32 Performance_simplePerformance_50::att39() const {
  return att39_;
}
inline void Performance_simplePerformance_50::set_att39(::google::protobuf::int32 value) {
  set_has_att39();
  att39_ = value;
}

// required int32 att40 = 40;
inline bool Performance_simplePerformance_50::has_att40() const {
  return (_has_bits_[1] & 0x00000080u) != 0;
}
inline void Performance_simplePerformance_50::set_has_att40() {
  _has_bits_[1] |= 0x00000080u;
}
inline void Performance_simplePerformance_50::clear_has_att40() {
  _has_bits_[1] &= ~0x00000080u;
}
inline void Performance_simplePerformance_50::clear_att40() {
  att40_ = 0;
  clear_has_att40();
}
inline ::google::protobuf::int32 Performance_simplePerformance_50::att40() const {
  return att40_;
}
inline void Performance_simplePerformance_50::set_att40(::google::protobuf::int32 value) {
  set_has_att40();
  att40_ = value;
}

// required int32 att41 = 41;
inline bool Performance_simplePerformance_50::has_att41() const {
  return (_has_bits_[1] & 0x00000100u) != 0;
}
inline void Performance_simplePerformance_50::set_has_att41() {
  _has_bits_[1] |= 0x00000100u;
}
inline void Performance_simplePerformance_50::clear_has_att41() {
  _has_bits_[1] &= ~0x00000100u;
}
inline void Performance_simplePerformance_50::clear_att41() {
  att41_ = 0;
  clear_has_att41();
}
inline ::google::protobuf::int32 Performance_simplePerformance_50::att41() const {
  return att41_;
}
inline void Performance_simplePerformance_50::set_att41(::google::protobuf::int32 value) {
  set_has_att41();
  att41_ = value;
}

// required int32 att42 = 42;
inline bool Performance_simplePerformance_50::has_att42() const {
  return (_has_bits_[1] & 0x00000200u) != 0;
}
inline void Performance_simplePerformance_50::set_has_att42() {
  _has_bits_[1] |= 0x00000200u;
}
inline void Performance_simplePerformance_50::clear_has_att42() {
  _has_bits_[1] &= ~0x00000200u;
}
inline void Performance_simplePerformance_50::clear_att42() {
  att42_ = 0;
  clear_has_att42();
}
inline ::google::protobuf::int32 Performance_simplePerformance_50::att42() const {
  return att42_;
}
inline void Performance_simplePerformance_50::set_att42(::google::protobuf::int32 value) {
  set_has_att42();
  att42_ = value;
}

// required int32 att43 = 43;
inline bool Performance_simplePerformance_50::has_att43() const {
  return (_has_bits_[1] & 0x00000400u) != 0;
}
inline void Performance_simplePerformance_50::set_has_att43() {
  _has_bits_[1] |= 0x00000400u;
}
inline void Performance_simplePerformance_50::clear_has_att43() {
  _has_bits_[1] &= ~0x00000400u;
}
inline void Performance_simplePerformance_50::clear_att43() {
  att43_ = 0;
  clear_has_att43();
}
inline ::google::protobuf::int32 Performance_simplePerformance_50::att43() const {
  return att43_;
}
inline void Performance_simplePerformance_50::set_att43(::google::protobuf::int32 value) {
  set_has_att43();
  att43_ = value;
}

// required int32 att44 = 44;
inline bool Performance_simplePerformance_50::has_att44() const {
  return (_has_bits_[1] & 0x00000800u) != 0;
}
inline void Performance_simplePerformance_50::set_has_att44() {
  _has_bits_[1] |= 0x00000800u;
}
inline void Performance_simplePerformance_50::clear_has_att44() {
  _has_bits_[1] &= ~0x00000800u;
}
inline void Performance_simplePerformance_50::clear_att44() {
  att44_ = 0;
  clear_has_att44();
}
inline ::google::protobuf::int32 Performance_simplePerformance_50::att44() const {
  return att44_;
}
inline void Performance_simplePerformance_50::set_att44(::google::protobuf::int32 value) {
  set_has_att44();
  att44_ = value;
}

// required int32 att45 = 45;
inline bool Performance_simplePerformance_50::has_att45() const {
  return (_has_bits_[1] & 0x00001000u) != 0;
}
inline void Performance_simplePerformance_50::set_has_att45() {
  _has_bits_[1] |= 0x00001000u;
}
inline void Performance_simplePerformance_50::clear_has_att45() {
  _has_bits_[1] &= ~0x00001000u;
}
inline void Performance_simplePerformance_50::clear_att45() {
  att45_ = 0;
  clear_has_att45();
}
inline ::google::protobuf::int32 Performance_simplePerformance_50::att45() const {
  return att45_;
}
inline void Performance_simplePerformance_50::set_att45(::google::protobuf::int32 value) {
  set_has_att45();
  att45_ = value;
}

// required int32 att46 = 46;
inline bool Performance_simplePerformance_50::has_att46() const {
  return (_has_bits_[1] & 0x00002000u) != 0;
}
inline void Performance_simplePerformance_50::set_has_att46() {
  _has_bits_[1] |= 0x00002000u;
}
inline void Performance_simplePerformance_50::clear_has_att46() {
  _has_bits_[1] &= ~0x00002000u;
}
inline void Performance_simplePerformance_50::clear_att46() {
  att46_ = 0;
  clear_has_att46();
}
inline ::google::protobuf::int32 Performance_simplePerformance_50::att46() const {
  return att46_;
}
inline void Performance_simplePerformance_50::set_att46(::google::protobuf::int32 value) {
  set_has_att46();
  att46_ = value;
}

// required int32 att47 = 47;
inline bool Performance_simplePerformance_50::has_att47() const {
  return (_has_bits_[1] & 0x00004000u) != 0;
}
inline void Performance_simplePerformance_50::set_has_att47() {
  _has_bits_[1] |= 0x00004000u;
}
inline void Performance_simplePerformance_50::clear_has_att47() {
  _has_bits_[1] &= ~0x00004000u;
}
inline void Performance_simplePerformance_50::clear_att47() {
  att47_ = 0;
  clear_has_att47();
}
inline ::google::protobuf::int32 Performance_simplePerformance_50::att47() const {
  return att47_;
}
inline void Performance_simplePerformance_50::set_att47(::google::protobuf::int32 value) {
  set_has_att47();
  att47_ = value;
}

// required int32 att48 = 48;
inline bool Performance_simplePerformance_50::has_att48() const {
  return (_has_bits_[1] & 0x00008000u) != 0;
}
inline void Performance_simplePerformance_50::set_has_att48() {
  _has_bits_[1] |= 0x00008000u;
}
inline void Performance_simplePerformance_50::clear_has_att48() {
  _has_bits_[1] &= ~0x00008000u;
}
inline void Performance_simplePerformance_50::clear_att48() {
  att48_ = 0;
  clear_has_att48();
}
inline ::google::protobuf::int32 Performance_simplePerformance_50::att48() const {
  return att48_;
}
inline void Performance_simplePerformance_50::set_att48(::google::protobuf::int32 value) {
  set_has_att48();
  att48_ = value;
}

// required int32 att49 = 49;
inline bool Performance_simplePerformance_50::has_att49() const {
  return (_has_bits_[1] & 0x00010000u) != 0;
}
inline void Performance_simplePerformance_50::set_has_att49() {
  _has_bits_[1] |= 0x00010000u;
}
inline void Performance_simplePerformance_50::clear_has_att49() {
  _has_bits_[1] &= ~0x00010000u;
}
inline void Performance_simplePerformance_50::clear_att49() {
  att49_ = 0;
  clear_has_att49();
}
inline ::google::protobuf::int32 Performance_simplePerformance_50::att49() const {
  return att49_;
}
inline void Performance_simplePerformance_50::set_att49(::google::protobuf::int32 value) {
  set_has_att49();
  att49_ = value;
}

// required int32 att50 = 50;
inline bool Performance_simplePerformance_50::has_att50() const {
  return (_has_bits_[1] & 0x00020000u) != 0;
}
inline void Performance_simplePerformance_50::set_has_att50() {
  _has_bits_[1] |= 0x00020000u;
}
inline void Performance_simplePerformance_50::clear_has_att50() {
  _has_bits_[1] &= ~0x00020000u;
}
inline void Performance_simplePerformance_50::clear_att50() {
  att50_ = 0;
  clear_has_att50();
}
inline ::google::protobuf::int32 Performance_simplePerformance_50::att50() const {
  return att50_;
}
inline void Performance_simplePerformance_50::set_att50(::google::protobuf::int32 value) {
  set_has_att50();
  att50_ = value;
}

// -------------------------------------------------------------------

// Performance_complexPerformance_2

// required int32 att1 = 1;
inline bool Performance_complexPerformance_2::has_att1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Performance_complexPerformance_2::set_has_att1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Performance_complexPerformance_2::clear_has_att1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Performance_complexPerformance_2::clear_att1() {
  att1_ = 0;
  clear_has_att1();
}
inline ::google::protobuf::int32 Performance_complexPerformance_2::att1() const {
  return att1_;
}
inline void Performance_complexPerformance_2::set_att1(::google::protobuf::int32 value) {
  set_has_att1();
  att1_ = value;
}

// required int32 att2 = 2;
inline bool Performance_complexPerformance_2::has_att2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Performance_complexPerformance_2::set_has_att2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Performance_complexPerformance_2::clear_has_att2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Performance_complexPerformance_2::clear_att2() {
  att2_ = 0;
  clear_has_att2();
}
inline ::google::protobuf::int32 Performance_complexPerformance_2::att2() const {
  return att2_;
}
inline void Performance_complexPerformance_2::set_att2(::google::protobuf::int32 value) {
  set_has_att2();
  att2_ = value;
}

// required int64 att3 = 3;
inline bool Performance_complexPerformance_2::has_att3() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Performance_complexPerformance_2::set_has_att3() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Performance_complexPerformance_2::clear_has_att3() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Performance_complexPerformance_2::clear_att3() {
  att3_ = GOOGLE_LONGLONG(0);
  clear_has_att3();
}
inline ::google::protobuf::int64 Performance_complexPerformance_2::att3() const {
  return att3_;
}
inline void Performance_complexPerformance_2::set_att3(::google::protobuf::int64 value) {
  set_has_att3();
  att3_ = value;
}

// required int64 att4 = 4;
inline bool Performance_complexPerformance_2::has_att4() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Performance_complexPerformance_2::set_has_att4() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Performance_complexPerformance_2::clear_has_att4() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Performance_complexPerformance_2::clear_att4() {
  att4_ = GOOGLE_LONGLONG(0);
  clear_has_att4();
}
inline ::google::protobuf::int64 Performance_complexPerformance_2::att4() const {
  return att4_;
}
inline void Performance_complexPerformance_2::set_att4(::google::protobuf::int64 value) {
  set_has_att4();
  att4_ = value;
}

// required string att5 = 5;
inline bool Performance_complexPerformance_2::has_att5() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Performance_complexPerformance_2::set_has_att5() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Performance_complexPerformance_2::clear_has_att5() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Performance_complexPerformance_2::clear_att5() {
  if (att5_ != &::google::protobuf::internal::kEmptyString) {
    att5_->clear();
  }
  clear_has_att5();
}
inline const ::std::string& Performance_complexPerformance_2::att5() const {
  return *att5_;
}
inline void Performance_complexPerformance_2::set_att5(const ::std::string& value) {
  set_has_att5();
  if (att5_ == &::google::protobuf::internal::kEmptyString) {
    att5_ = new ::std::string;
  }
  att5_->assign(value);
}
inline void Performance_complexPerformance_2::set_att5(const char* value) {
  set_has_att5();
  if (att5_ == &::google::protobuf::internal::kEmptyString) {
    att5_ = new ::std::string;
  }
  att5_->assign(value);
}
inline void Performance_complexPerformance_2::set_att5(const char* value, size_t size) {
  set_has_att5();
  if (att5_ == &::google::protobuf::internal::kEmptyString) {
    att5_ = new ::std::string;
  }
  att5_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Performance_complexPerformance_2::mutable_att5() {
  set_has_att5();
  if (att5_ == &::google::protobuf::internal::kEmptyString) {
    att5_ = new ::std::string;
  }
  return att5_;
}
inline ::std::string* Performance_complexPerformance_2::release_att5() {
  clear_has_att5();
  if (att5_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = att5_;
    att5_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Performance_complexPerformance_2::set_allocated_att5(::std::string* att5) {
  if (att5_ != &::google::protobuf::internal::kEmptyString) {
    delete att5_;
  }
  if (att5) {
    set_has_att5();
    att5_ = att5;
  } else {
    clear_has_att5();
    att5_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string att6 = 6;
inline bool Performance_complexPerformance_2::has_att6() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Performance_complexPerformance_2::set_has_att6() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Performance_complexPerformance_2::clear_has_att6() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Performance_complexPerformance_2::clear_att6() {
  if (att6_ != &::google::protobuf::internal::kEmptyString) {
    att6_->clear();
  }
  clear_has_att6();
}
inline const ::std::string& Performance_complexPerformance_2::att6() const {
  return *att6_;
}
inline void Performance_complexPerformance_2::set_att6(const ::std::string& value) {
  set_has_att6();
  if (att6_ == &::google::protobuf::internal::kEmptyString) {
    att6_ = new ::std::string;
  }
  att6_->assign(value);
}
inline void Performance_complexPerformance_2::set_att6(const char* value) {
  set_has_att6();
  if (att6_ == &::google::protobuf::internal::kEmptyString) {
    att6_ = new ::std::string;
  }
  att6_->assign(value);
}
inline void Performance_complexPerformance_2::set_att6(const char* value, size_t size) {
  set_has_att6();
  if (att6_ == &::google::protobuf::internal::kEmptyString) {
    att6_ = new ::std::string;
  }
  att6_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Performance_complexPerformance_2::mutable_att6() {
  set_has_att6();
  if (att6_ == &::google::protobuf::internal::kEmptyString) {
    att6_ = new ::std::string;
  }
  return att6_;
}
inline ::std::string* Performance_complexPerformance_2::release_att6() {
  clear_has_att6();
  if (att6_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = att6_;
    att6_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Performance_complexPerformance_2::set_allocated_att6(::std::string* att6) {
  if (att6_ != &::google::protobuf::internal::kEmptyString) {
    delete att6_;
  }
  if (att6) {
    set_has_att6();
    att6_ = att6;
  } else {
    clear_has_att6();
    att6_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required float att7 = 7;
inline bool Performance_complexPerformance_2::has_att7() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Performance_complexPerformance_2::set_has_att7() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Performance_complexPerformance_2::clear_has_att7() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Performance_complexPerformance_2::clear_att7() {
  att7_ = 0;
  clear_has_att7();
}
inline float Performance_complexPerformance_2::att7() const {
  return att7_;
}
inline void Performance_complexPerformance_2::set_att7(float value) {
  set_has_att7();
  att7_ = value;
}

// required float att8 = 8;
inline bool Performance_complexPerformance_2::has_att8() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Performance_complexPerformance_2::set_has_att8() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Performance_complexPerformance_2::clear_has_att8() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Performance_complexPerformance_2::clear_att8() {
  att8_ = 0;
  clear_has_att8();
}
inline float Performance_complexPerformance_2::att8() const {
  return att8_;
}
inline void Performance_complexPerformance_2::set_att8(float value) {
  set_has_att8();
  att8_ = value;
}

// required double att9 = 9;
inline bool Performance_complexPerformance_2::has_att9() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Performance_complexPerformance_2::set_has_att9() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Performance_complexPerformance_2::clear_has_att9() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Performance_complexPerformance_2::clear_att9() {
  att9_ = 0;
  clear_has_att9();
}
inline double Performance_complexPerformance_2::att9() const {
  return att9_;
}
inline void Performance_complexPerformance_2::set_att9(double value) {
  set_has_att9();
  att9_ = value;
}

// required double att10 = 10;
inline bool Performance_complexPerformance_2::has_att10() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Performance_complexPerformance_2::set_has_att10() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Performance_complexPerformance_2::clear_has_att10() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Performance_complexPerformance_2::clear_att10() {
  att10_ = 0;
  clear_has_att10();
}
inline double Performance_complexPerformance_2::att10() const {
  return att10_;
}
inline void Performance_complexPerformance_2::set_att10(double value) {
  set_has_att10();
  att10_ = value;
}

// required bool att11 = 11;
inline bool Performance_complexPerformance_2::has_att11() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Performance_complexPerformance_2::set_has_att11() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Performance_complexPerformance_2::clear_has_att11() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Performance_complexPerformance_2::clear_att11() {
  att11_ = false;
  clear_has_att11();
}
inline bool Performance_complexPerformance_2::att11() const {
  return att11_;
}
inline void Performance_complexPerformance_2::set_att11(bool value) {
  set_has_att11();
  att11_ = value;
}

// required bool att12 = 12;
inline bool Performance_complexPerformance_2::has_att12() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Performance_complexPerformance_2::set_has_att12() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Performance_complexPerformance_2::clear_has_att12() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Performance_complexPerformance_2::clear_att12() {
  att12_ = false;
  clear_has_att12();
}
inline bool Performance_complexPerformance_2::att12() const {
  return att12_;
}
inline void Performance_complexPerformance_2::set_att12(bool value) {
  set_has_att12();
  att12_ = value;
}

// -------------------------------------------------------------------

// Performance_complexPerformance_4

// required int32 att1 = 1;
inline bool Performance_complexPerformance_4::has_att1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Performance_complexPerformance_4::set_has_att1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Performance_complexPerformance_4::clear_has_att1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Performance_complexPerformance_4::clear_att1() {
  att1_ = 0;
  clear_has_att1();
}
inline ::google::protobuf::int32 Performance_complexPerformance_4::att1() const {
  return att1_;
}
inline void Performance_complexPerformance_4::set_att1(::google::protobuf::int32 value) {
  set_has_att1();
  att1_ = value;
}

// required int32 att2 = 2;
inline bool Performance_complexPerformance_4::has_att2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Performance_complexPerformance_4::set_has_att2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Performance_complexPerformance_4::clear_has_att2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Performance_complexPerformance_4::clear_att2() {
  att2_ = 0;
  clear_has_att2();
}
inline ::google::protobuf::int32 Performance_complexPerformance_4::att2() const {
  return att2_;
}
inline void Performance_complexPerformance_4::set_att2(::google::protobuf::int32 value) {
  set_has_att2();
  att2_ = value;
}

// required int32 att3 = 3;
inline bool Performance_complexPerformance_4::has_att3() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Performance_complexPerformance_4::set_has_att3() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Performance_complexPerformance_4::clear_has_att3() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Performance_complexPerformance_4::clear_att3() {
  att3_ = 0;
  clear_has_att3();
}
inline ::google::protobuf::int32 Performance_complexPerformance_4::att3() const {
  return att3_;
}
inline void Performance_complexPerformance_4::set_att3(::google::protobuf::int32 value) {
  set_has_att3();
  att3_ = value;
}

// required int32 att4 = 4;
inline bool Performance_complexPerformance_4::has_att4() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Performance_complexPerformance_4::set_has_att4() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Performance_complexPerformance_4::clear_has_att4() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Performance_complexPerformance_4::clear_att4() {
  att4_ = 0;
  clear_has_att4();
}
inline ::google::protobuf::int32 Performance_complexPerformance_4::att4() const {
  return att4_;
}
inline void Performance_complexPerformance_4::set_att4(::google::protobuf::int32 value) {
  set_has_att4();
  att4_ = value;
}

// required int64 att5 = 5;
inline bool Performance_complexPerformance_4::has_att5() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Performance_complexPerformance_4::set_has_att5() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Performance_complexPerformance_4::clear_has_att5() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Performance_complexPerformance_4::clear_att5() {
  att5_ = GOOGLE_LONGLONG(0);
  clear_has_att5();
}
inline ::google::protobuf::int64 Performance_complexPerformance_4::att5() const {
  return att5_;
}
inline void Performance_complexPerformance_4::set_att5(::google::protobuf::int64 value) {
  set_has_att5();
  att5_ = value;
}

// required int64 att6 = 6;
inline bool Performance_complexPerformance_4::has_att6() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Performance_complexPerformance_4::set_has_att6() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Performance_complexPerformance_4::clear_has_att6() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Performance_complexPerformance_4::clear_att6() {
  att6_ = GOOGLE_LONGLONG(0);
  clear_has_att6();
}
inline ::google::protobuf::int64 Performance_complexPerformance_4::att6() const {
  return att6_;
}
inline void Performance_complexPerformance_4::set_att6(::google::protobuf::int64 value) {
  set_has_att6();
  att6_ = value;
}

// required int64 att7 = 7;
inline bool Performance_complexPerformance_4::has_att7() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Performance_complexPerformance_4::set_has_att7() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Performance_complexPerformance_4::clear_has_att7() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Performance_complexPerformance_4::clear_att7() {
  att7_ = GOOGLE_LONGLONG(0);
  clear_has_att7();
}
inline ::google::protobuf::int64 Performance_complexPerformance_4::att7() const {
  return att7_;
}
inline void Performance_complexPerformance_4::set_att7(::google::protobuf::int64 value) {
  set_has_att7();
  att7_ = value;
}

// required int64 att8 = 8;
inline bool Performance_complexPerformance_4::has_att8() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Performance_complexPerformance_4::set_has_att8() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Performance_complexPerformance_4::clear_has_att8() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Performance_complexPerformance_4::clear_att8() {
  att8_ = GOOGLE_LONGLONG(0);
  clear_has_att8();
}
inline ::google::protobuf::int64 Performance_complexPerformance_4::att8() const {
  return att8_;
}
inline void Performance_complexPerformance_4::set_att8(::google::protobuf::int64 value) {
  set_has_att8();
  att8_ = value;
}

// required string att9 = 9;
inline bool Performance_complexPerformance_4::has_att9() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Performance_complexPerformance_4::set_has_att9() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Performance_complexPerformance_4::clear_has_att9() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Performance_complexPerformance_4::clear_att9() {
  if (att9_ != &::google::protobuf::internal::kEmptyString) {
    att9_->clear();
  }
  clear_has_att9();
}
inline const ::std::string& Performance_complexPerformance_4::att9() const {
  return *att9_;
}
inline void Performance_complexPerformance_4::set_att9(const ::std::string& value) {
  set_has_att9();
  if (att9_ == &::google::protobuf::internal::kEmptyString) {
    att9_ = new ::std::string;
  }
  att9_->assign(value);
}
inline void Performance_complexPerformance_4::set_att9(const char* value) {
  set_has_att9();
  if (att9_ == &::google::protobuf::internal::kEmptyString) {
    att9_ = new ::std::string;
  }
  att9_->assign(value);
}
inline void Performance_complexPerformance_4::set_att9(const char* value, size_t size) {
  set_has_att9();
  if (att9_ == &::google::protobuf::internal::kEmptyString) {
    att9_ = new ::std::string;
  }
  att9_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Performance_complexPerformance_4::mutable_att9() {
  set_has_att9();
  if (att9_ == &::google::protobuf::internal::kEmptyString) {
    att9_ = new ::std::string;
  }
  return att9_;
}
inline ::std::string* Performance_complexPerformance_4::release_att9() {
  clear_has_att9();
  if (att9_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = att9_;
    att9_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Performance_complexPerformance_4::set_allocated_att9(::std::string* att9) {
  if (att9_ != &::google::protobuf::internal::kEmptyString) {
    delete att9_;
  }
  if (att9) {
    set_has_att9();
    att9_ = att9;
  } else {
    clear_has_att9();
    att9_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string att10 = 10;
inline bool Performance_complexPerformance_4::has_att10() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Performance_complexPerformance_4::set_has_att10() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Performance_complexPerformance_4::clear_has_att10() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Performance_complexPerformance_4::clear_att10() {
  if (att10_ != &::google::protobuf::internal::kEmptyString) {
    att10_->clear();
  }
  clear_has_att10();
}
inline const ::std::string& Performance_complexPerformance_4::att10() const {
  return *att10_;
}
inline void Performance_complexPerformance_4::set_att10(const ::std::string& value) {
  set_has_att10();
  if (att10_ == &::google::protobuf::internal::kEmptyString) {
    att10_ = new ::std::string;
  }
  att10_->assign(value);
}
inline void Performance_complexPerformance_4::set_att10(const char* value) {
  set_has_att10();
  if (att10_ == &::google::protobuf::internal::kEmptyString) {
    att10_ = new ::std::string;
  }
  att10_->assign(value);
}
inline void Performance_complexPerformance_4::set_att10(const char* value, size_t size) {
  set_has_att10();
  if (att10_ == &::google::protobuf::internal::kEmptyString) {
    att10_ = new ::std::string;
  }
  att10_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Performance_complexPerformance_4::mutable_att10() {
  set_has_att10();
  if (att10_ == &::google::protobuf::internal::kEmptyString) {
    att10_ = new ::std::string;
  }
  return att10_;
}
inline ::std::string* Performance_complexPerformance_4::release_att10() {
  clear_has_att10();
  if (att10_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = att10_;
    att10_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Performance_complexPerformance_4::set_allocated_att10(::std::string* att10) {
  if (att10_ != &::google::protobuf::internal::kEmptyString) {
    delete att10_;
  }
  if (att10) {
    set_has_att10();
    att10_ = att10;
  } else {
    clear_has_att10();
    att10_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string att11 = 11;
inline bool Performance_complexPerformance_4::has_att11() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Performance_complexPerformance_4::set_has_att11() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Performance_complexPerformance_4::clear_has_att11() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Performance_complexPerformance_4::clear_att11() {
  if (att11_ != &::google::protobuf::internal::kEmptyString) {
    att11_->clear();
  }
  clear_has_att11();
}
inline const ::std::string& Performance_complexPerformance_4::att11() const {
  return *att11_;
}
inline void Performance_complexPerformance_4::set_att11(const ::std::string& value) {
  set_has_att11();
  if (att11_ == &::google::protobuf::internal::kEmptyString) {
    att11_ = new ::std::string;
  }
  att11_->assign(value);
}
inline void Performance_complexPerformance_4::set_att11(const char* value) {
  set_has_att11();
  if (att11_ == &::google::protobuf::internal::kEmptyString) {
    att11_ = new ::std::string;
  }
  att11_->assign(value);
}
inline void Performance_complexPerformance_4::set_att11(const char* value, size_t size) {
  set_has_att11();
  if (att11_ == &::google::protobuf::internal::kEmptyString) {
    att11_ = new ::std::string;
  }
  att11_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Performance_complexPerformance_4::mutable_att11() {
  set_has_att11();
  if (att11_ == &::google::protobuf::internal::kEmptyString) {
    att11_ = new ::std::string;
  }
  return att11_;
}
inline ::std::string* Performance_complexPerformance_4::release_att11() {
  clear_has_att11();
  if (att11_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = att11_;
    att11_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Performance_complexPerformance_4::set_allocated_att11(::std::string* att11) {
  if (att11_ != &::google::protobuf::internal::kEmptyString) {
    delete att11_;
  }
  if (att11) {
    set_has_att11();
    att11_ = att11;
  } else {
    clear_has_att11();
    att11_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string att12 = 12;
inline bool Performance_complexPerformance_4::has_att12() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Performance_complexPerformance_4::set_has_att12() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Performance_complexPerformance_4::clear_has_att12() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Performance_complexPerformance_4::clear_att12() {
  if (att12_ != &::google::protobuf::internal::kEmptyString) {
    att12_->clear();
  }
  clear_has_att12();
}
inline const ::std::string& Performance_complexPerformance_4::att12() const {
  return *att12_;
}
inline void Performance_complexPerformance_4::set_att12(const ::std::string& value) {
  set_has_att12();
  if (att12_ == &::google::protobuf::internal::kEmptyString) {
    att12_ = new ::std::string;
  }
  att12_->assign(value);
}
inline void Performance_complexPerformance_4::set_att12(const char* value) {
  set_has_att12();
  if (att12_ == &::google::protobuf::internal::kEmptyString) {
    att12_ = new ::std::string;
  }
  att12_->assign(value);
}
inline void Performance_complexPerformance_4::set_att12(const char* value, size_t size) {
  set_has_att12();
  if (att12_ == &::google::protobuf::internal::kEmptyString) {
    att12_ = new ::std::string;
  }
  att12_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Performance_complexPerformance_4::mutable_att12() {
  set_has_att12();
  if (att12_ == &::google::protobuf::internal::kEmptyString) {
    att12_ = new ::std::string;
  }
  return att12_;
}
inline ::std::string* Performance_complexPerformance_4::release_att12() {
  clear_has_att12();
  if (att12_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = att12_;
    att12_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Performance_complexPerformance_4::set_allocated_att12(::std::string* att12) {
  if (att12_ != &::google::protobuf::internal::kEmptyString) {
    delete att12_;
  }
  if (att12) {
    set_has_att12();
    att12_ = att12;
  } else {
    clear_has_att12();
    att12_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required float att13 = 13;
inline bool Performance_complexPerformance_4::has_att13() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Performance_complexPerformance_4::set_has_att13() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Performance_complexPerformance_4::clear_has_att13() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Performance_complexPerformance_4::clear_att13() {
  att13_ = 0;
  clear_has_att13();
}
inline float Performance_complexPerformance_4::att13() const {
  return att13_;
}
inline void Performance_complexPerformance_4::set_att13(float value) {
  set_has_att13();
  att13_ = value;
}

// required float att14 = 14;
inline bool Performance_complexPerformance_4::has_att14() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void Performance_complexPerformance_4::set_has_att14() {
  _has_bits_[0] |= 0x00002000u;
}
inline void Performance_complexPerformance_4::clear_has_att14() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void Performance_complexPerformance_4::clear_att14() {
  att14_ = 0;
  clear_has_att14();
}
inline float Performance_complexPerformance_4::att14() const {
  return att14_;
}
inline void Performance_complexPerformance_4::set_att14(float value) {
  set_has_att14();
  att14_ = value;
}

// required float att15 = 15;
inline bool Performance_complexPerformance_4::has_att15() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void Performance_complexPerformance_4::set_has_att15() {
  _has_bits_[0] |= 0x00004000u;
}
inline void Performance_complexPerformance_4::clear_has_att15() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void Performance_complexPerformance_4::clear_att15() {
  att15_ = 0;
  clear_has_att15();
}
inline float Performance_complexPerformance_4::att15() const {
  return att15_;
}
inline void Performance_complexPerformance_4::set_att15(float value) {
  set_has_att15();
  att15_ = value;
}

// required float att16 = 16;
inline bool Performance_complexPerformance_4::has_att16() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void Performance_complexPerformance_4::set_has_att16() {
  _has_bits_[0] |= 0x00008000u;
}
inline void Performance_complexPerformance_4::clear_has_att16() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void Performance_complexPerformance_4::clear_att16() {
  att16_ = 0;
  clear_has_att16();
}
inline float Performance_complexPerformance_4::att16() const {
  return att16_;
}
inline void Performance_complexPerformance_4::set_att16(float value) {
  set_has_att16();
  att16_ = value;
}

// required double att17 = 17;
inline bool Performance_complexPerformance_4::has_att17() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void Performance_complexPerformance_4::set_has_att17() {
  _has_bits_[0] |= 0x00010000u;
}
inline void Performance_complexPerformance_4::clear_has_att17() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void Performance_complexPerformance_4::clear_att17() {
  att17_ = 0;
  clear_has_att17();
}
inline double Performance_complexPerformance_4::att17() const {
  return att17_;
}
inline void Performance_complexPerformance_4::set_att17(double value) {
  set_has_att17();
  att17_ = value;
}

// required double att18 = 18;
inline bool Performance_complexPerformance_4::has_att18() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void Performance_complexPerformance_4::set_has_att18() {
  _has_bits_[0] |= 0x00020000u;
}
inline void Performance_complexPerformance_4::clear_has_att18() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void Performance_complexPerformance_4::clear_att18() {
  att18_ = 0;
  clear_has_att18();
}
inline double Performance_complexPerformance_4::att18() const {
  return att18_;
}
inline void Performance_complexPerformance_4::set_att18(double value) {
  set_has_att18();
  att18_ = value;
}

// required double att19 = 19;
inline bool Performance_complexPerformance_4::has_att19() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void Performance_complexPerformance_4::set_has_att19() {
  _has_bits_[0] |= 0x00040000u;
}
inline void Performance_complexPerformance_4::clear_has_att19() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void Performance_complexPerformance_4::clear_att19() {
  att19_ = 0;
  clear_has_att19();
}
inline double Performance_complexPerformance_4::att19() const {
  return att19_;
}
inline void Performance_complexPerformance_4::set_att19(double value) {
  set_has_att19();
  att19_ = value;
}

// required double att20 = 20;
inline bool Performance_complexPerformance_4::has_att20() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void Performance_complexPerformance_4::set_has_att20() {
  _has_bits_[0] |= 0x00080000u;
}
inline void Performance_complexPerformance_4::clear_has_att20() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void Performance_complexPerformance_4::clear_att20() {
  att20_ = 0;
  clear_has_att20();
}
inline double Performance_complexPerformance_4::att20() const {
  return att20_;
}
inline void Performance_complexPerformance_4::set_att20(double value) {
  set_has_att20();
  att20_ = value;
}

// required bool att21 = 21;
inline bool Performance_complexPerformance_4::has_att21() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void Performance_complexPerformance_4::set_has_att21() {
  _has_bits_[0] |= 0x00100000u;
}
inline void Performance_complexPerformance_4::clear_has_att21() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void Performance_complexPerformance_4::clear_att21() {
  att21_ = false;
  clear_has_att21();
}
inline bool Performance_complexPerformance_4::att21() const {
  return att21_;
}
inline void Performance_complexPerformance_4::set_att21(bool value) {
  set_has_att21();
  att21_ = value;
}

// required bool att22 = 22;
inline bool Performance_complexPerformance_4::has_att22() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void Performance_complexPerformance_4::set_has_att22() {
  _has_bits_[0] |= 0x00200000u;
}
inline void Performance_complexPerformance_4::clear_has_att22() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void Performance_complexPerformance_4::clear_att22() {
  att22_ = false;
  clear_has_att22();
}
inline bool Performance_complexPerformance_4::att22() const {
  return att22_;
}
inline void Performance_complexPerformance_4::set_att22(bool value) {
  set_has_att22();
  att22_ = value;
}

// required bool att23 = 23;
inline bool Performance_complexPerformance_4::has_att23() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void Performance_complexPerformance_4::set_has_att23() {
  _has_bits_[0] |= 0x00400000u;
}
inline void Performance_complexPerformance_4::clear_has_att23() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void Performance_complexPerformance_4::clear_att23() {
  att23_ = false;
  clear_has_att23();
}
inline bool Performance_complexPerformance_4::att23() const {
  return att23_;
}
inline void Performance_complexPerformance_4::set_att23(bool value) {
  set_has_att23();
  att23_ = value;
}

// required bool att24 = 24;
inline bool Performance_complexPerformance_4::has_att24() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void Performance_complexPerformance_4::set_has_att24() {
  _has_bits_[0] |= 0x00800000u;
}
inline void Performance_complexPerformance_4::clear_has_att24() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void Performance_complexPerformance_4::clear_att24() {
  att24_ = false;
  clear_has_att24();
}
inline bool Performance_complexPerformance_4::att24() const {
  return att24_;
}
inline void Performance_complexPerformance_4::set_att24(bool value) {
  set_has_att24();
  att24_ = value;
}

// -------------------------------------------------------------------

// Performance_complexPerformance_6

// required int32 att1 = 1;
inline bool Performance_complexPerformance_6::has_att1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Performance_complexPerformance_6::set_has_att1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Performance_complexPerformance_6::clear_has_att1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Performance_complexPerformance_6::clear_att1() {
  att1_ = 0;
  clear_has_att1();
}
inline ::google::protobuf::int32 Performance_complexPerformance_6::att1() const {
  return att1_;
}
inline void Performance_complexPerformance_6::set_att1(::google::protobuf::int32 value) {
  set_has_att1();
  att1_ = value;
}

// required int32 att2 = 2;
inline bool Performance_complexPerformance_6::has_att2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Performance_complexPerformance_6::set_has_att2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Performance_complexPerformance_6::clear_has_att2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Performance_complexPerformance_6::clear_att2() {
  att2_ = 0;
  clear_has_att2();
}
inline ::google::protobuf::int32 Performance_complexPerformance_6::att2() const {
  return att2_;
}
inline void Performance_complexPerformance_6::set_att2(::google::protobuf::int32 value) {
  set_has_att2();
  att2_ = value;
}

// required int32 att3 = 3;
inline bool Performance_complexPerformance_6::has_att3() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Performance_complexPerformance_6::set_has_att3() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Performance_complexPerformance_6::clear_has_att3() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Performance_complexPerformance_6::clear_att3() {
  att3_ = 0;
  clear_has_att3();
}
inline ::google::protobuf::int32 Performance_complexPerformance_6::att3() const {
  return att3_;
}
inline void Performance_complexPerformance_6::set_att3(::google::protobuf::int32 value) {
  set_has_att3();
  att3_ = value;
}

// required int32 att4 = 4;
inline bool Performance_complexPerformance_6::has_att4() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Performance_complexPerformance_6::set_has_att4() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Performance_complexPerformance_6::clear_has_att4() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Performance_complexPerformance_6::clear_att4() {
  att4_ = 0;
  clear_has_att4();
}
inline ::google::protobuf::int32 Performance_complexPerformance_6::att4() const {
  return att4_;
}
inline void Performance_complexPerformance_6::set_att4(::google::protobuf::int32 value) {
  set_has_att4();
  att4_ = value;
}

// required int32 att5 = 5;
inline bool Performance_complexPerformance_6::has_att5() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Performance_complexPerformance_6::set_has_att5() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Performance_complexPerformance_6::clear_has_att5() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Performance_complexPerformance_6::clear_att5() {
  att5_ = 0;
  clear_has_att5();
}
inline ::google::protobuf::int32 Performance_complexPerformance_6::att5() const {
  return att5_;
}
inline void Performance_complexPerformance_6::set_att5(::google::protobuf::int32 value) {
  set_has_att5();
  att5_ = value;
}

// required int32 att6 = 6;
inline bool Performance_complexPerformance_6::has_att6() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Performance_complexPerformance_6::set_has_att6() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Performance_complexPerformance_6::clear_has_att6() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Performance_complexPerformance_6::clear_att6() {
  att6_ = 0;
  clear_has_att6();
}
inline ::google::protobuf::int32 Performance_complexPerformance_6::att6() const {
  return att6_;
}
inline void Performance_complexPerformance_6::set_att6(::google::protobuf::int32 value) {
  set_has_att6();
  att6_ = value;
}

// required int64 att7 = 7;
inline bool Performance_complexPerformance_6::has_att7() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Performance_complexPerformance_6::set_has_att7() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Performance_complexPerformance_6::clear_has_att7() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Performance_complexPerformance_6::clear_att7() {
  att7_ = GOOGLE_LONGLONG(0);
  clear_has_att7();
}
inline ::google::protobuf::int64 Performance_complexPerformance_6::att7() const {
  return att7_;
}
inline void Performance_complexPerformance_6::set_att7(::google::protobuf::int64 value) {
  set_has_att7();
  att7_ = value;
}

// required int64 att8 = 8;
inline bool Performance_complexPerformance_6::has_att8() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Performance_complexPerformance_6::set_has_att8() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Performance_complexPerformance_6::clear_has_att8() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Performance_complexPerformance_6::clear_att8() {
  att8_ = GOOGLE_LONGLONG(0);
  clear_has_att8();
}
inline ::google::protobuf::int64 Performance_complexPerformance_6::att8() const {
  return att8_;
}
inline void Performance_complexPerformance_6::set_att8(::google::protobuf::int64 value) {
  set_has_att8();
  att8_ = value;
}

// required int64 att9 = 9;
inline bool Performance_complexPerformance_6::has_att9() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Performance_complexPerformance_6::set_has_att9() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Performance_complexPerformance_6::clear_has_att9() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Performance_complexPerformance_6::clear_att9() {
  att9_ = GOOGLE_LONGLONG(0);
  clear_has_att9();
}
inline ::google::protobuf::int64 Performance_complexPerformance_6::att9() const {
  return att9_;
}
inline void Performance_complexPerformance_6::set_att9(::google::protobuf::int64 value) {
  set_has_att9();
  att9_ = value;
}

// required int64 att10 = 10;
inline bool Performance_complexPerformance_6::has_att10() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Performance_complexPerformance_6::set_has_att10() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Performance_complexPerformance_6::clear_has_att10() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Performance_complexPerformance_6::clear_att10() {
  att10_ = GOOGLE_LONGLONG(0);
  clear_has_att10();
}
inline ::google::protobuf::int64 Performance_complexPerformance_6::att10() const {
  return att10_;
}
inline void Performance_complexPerformance_6::set_att10(::google::protobuf::int64 value) {
  set_has_att10();
  att10_ = value;
}

// required int64 att11 = 11;
inline bool Performance_complexPerformance_6::has_att11() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Performance_complexPerformance_6::set_has_att11() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Performance_complexPerformance_6::clear_has_att11() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Performance_complexPerformance_6::clear_att11() {
  att11_ = GOOGLE_LONGLONG(0);
  clear_has_att11();
}
inline ::google::protobuf::int64 Performance_complexPerformance_6::att11() const {
  return att11_;
}
inline void Performance_complexPerformance_6::set_att11(::google::protobuf::int64 value) {
  set_has_att11();
  att11_ = value;
}

// required int64 att12 = 12;
inline bool Performance_complexPerformance_6::has_att12() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Performance_complexPerformance_6::set_has_att12() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Performance_complexPerformance_6::clear_has_att12() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Performance_complexPerformance_6::clear_att12() {
  att12_ = GOOGLE_LONGLONG(0);
  clear_has_att12();
}
inline ::google::protobuf::int64 Performance_complexPerformance_6::att12() const {
  return att12_;
}
inline void Performance_complexPerformance_6::set_att12(::google::protobuf::int64 value) {
  set_has_att12();
  att12_ = value;
}

// required string att13 = 13;
inline bool Performance_complexPerformance_6::has_att13() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Performance_complexPerformance_6::set_has_att13() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Performance_complexPerformance_6::clear_has_att13() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Performance_complexPerformance_6::clear_att13() {
  if (att13_ != &::google::protobuf::internal::kEmptyString) {
    att13_->clear();
  }
  clear_has_att13();
}
inline const ::std::string& Performance_complexPerformance_6::att13() const {
  return *att13_;
}
inline void Performance_complexPerformance_6::set_att13(const ::std::string& value) {
  set_has_att13();
  if (att13_ == &::google::protobuf::internal::kEmptyString) {
    att13_ = new ::std::string;
  }
  att13_->assign(value);
}
inline void Performance_complexPerformance_6::set_att13(const char* value) {
  set_has_att13();
  if (att13_ == &::google::protobuf::internal::kEmptyString) {
    att13_ = new ::std::string;
  }
  att13_->assign(value);
}
inline void Performance_complexPerformance_6::set_att13(const char* value, size_t size) {
  set_has_att13();
  if (att13_ == &::google::protobuf::internal::kEmptyString) {
    att13_ = new ::std::string;
  }
  att13_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Performance_complexPerformance_6::mutable_att13() {
  set_has_att13();
  if (att13_ == &::google::protobuf::internal::kEmptyString) {
    att13_ = new ::std::string;
  }
  return att13_;
}
inline ::std::string* Performance_complexPerformance_6::release_att13() {
  clear_has_att13();
  if (att13_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = att13_;
    att13_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Performance_complexPerformance_6::set_allocated_att13(::std::string* att13) {
  if (att13_ != &::google::protobuf::internal::kEmptyString) {
    delete att13_;
  }
  if (att13) {
    set_has_att13();
    att13_ = att13;
  } else {
    clear_has_att13();
    att13_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string att14 = 14;
inline bool Performance_complexPerformance_6::has_att14() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void Performance_complexPerformance_6::set_has_att14() {
  _has_bits_[0] |= 0x00002000u;
}
inline void Performance_complexPerformance_6::clear_has_att14() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void Performance_complexPerformance_6::clear_att14() {
  if (att14_ != &::google::protobuf::internal::kEmptyString) {
    att14_->clear();
  }
  clear_has_att14();
}
inline const ::std::string& Performance_complexPerformance_6::att14() const {
  return *att14_;
}
inline void Performance_complexPerformance_6::set_att14(const ::std::string& value) {
  set_has_att14();
  if (att14_ == &::google::protobuf::internal::kEmptyString) {
    att14_ = new ::std::string;
  }
  att14_->assign(value);
}
inline void Performance_complexPerformance_6::set_att14(const char* value) {
  set_has_att14();
  if (att14_ == &::google::protobuf::internal::kEmptyString) {
    att14_ = new ::std::string;
  }
  att14_->assign(value);
}
inline void Performance_complexPerformance_6::set_att14(const char* value, size_t size) {
  set_has_att14();
  if (att14_ == &::google::protobuf::internal::kEmptyString) {
    att14_ = new ::std::string;
  }
  att14_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Performance_complexPerformance_6::mutable_att14() {
  set_has_att14();
  if (att14_ == &::google::protobuf::internal::kEmptyString) {
    att14_ = new ::std::string;
  }
  return att14_;
}
inline ::std::string* Performance_complexPerformance_6::release_att14() {
  clear_has_att14();
  if (att14_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = att14_;
    att14_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Performance_complexPerformance_6::set_allocated_att14(::std::string* att14) {
  if (att14_ != &::google::protobuf::internal::kEmptyString) {
    delete att14_;
  }
  if (att14) {
    set_has_att14();
    att14_ = att14;
  } else {
    clear_has_att14();
    att14_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string att15 = 15;
inline bool Performance_complexPerformance_6::has_att15() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void Performance_complexPerformance_6::set_has_att15() {
  _has_bits_[0] |= 0x00004000u;
}
inline void Performance_complexPerformance_6::clear_has_att15() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void Performance_complexPerformance_6::clear_att15() {
  if (att15_ != &::google::protobuf::internal::kEmptyString) {
    att15_->clear();
  }
  clear_has_att15();
}
inline const ::std::string& Performance_complexPerformance_6::att15() const {
  return *att15_;
}
inline void Performance_complexPerformance_6::set_att15(const ::std::string& value) {
  set_has_att15();
  if (att15_ == &::google::protobuf::internal::kEmptyString) {
    att15_ = new ::std::string;
  }
  att15_->assign(value);
}
inline void Performance_complexPerformance_6::set_att15(const char* value) {
  set_has_att15();
  if (att15_ == &::google::protobuf::internal::kEmptyString) {
    att15_ = new ::std::string;
  }
  att15_->assign(value);
}
inline void Performance_complexPerformance_6::set_att15(const char* value, size_t size) {
  set_has_att15();
  if (att15_ == &::google::protobuf::internal::kEmptyString) {
    att15_ = new ::std::string;
  }
  att15_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Performance_complexPerformance_6::mutable_att15() {
  set_has_att15();
  if (att15_ == &::google::protobuf::internal::kEmptyString) {
    att15_ = new ::std::string;
  }
  return att15_;
}
inline ::std::string* Performance_complexPerformance_6::release_att15() {
  clear_has_att15();
  if (att15_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = att15_;
    att15_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Performance_complexPerformance_6::set_allocated_att15(::std::string* att15) {
  if (att15_ != &::google::protobuf::internal::kEmptyString) {
    delete att15_;
  }
  if (att15) {
    set_has_att15();
    att15_ = att15;
  } else {
    clear_has_att15();
    att15_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string att16 = 16;
inline bool Performance_complexPerformance_6::has_att16() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void Performance_complexPerformance_6::set_has_att16() {
  _has_bits_[0] |= 0x00008000u;
}
inline void Performance_complexPerformance_6::clear_has_att16() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void Performance_complexPerformance_6::clear_att16() {
  if (att16_ != &::google::protobuf::internal::kEmptyString) {
    att16_->clear();
  }
  clear_has_att16();
}
inline const ::std::string& Performance_complexPerformance_6::att16() const {
  return *att16_;
}
inline void Performance_complexPerformance_6::set_att16(const ::std::string& value) {
  set_has_att16();
  if (att16_ == &::google::protobuf::internal::kEmptyString) {
    att16_ = new ::std::string;
  }
  att16_->assign(value);
}
inline void Performance_complexPerformance_6::set_att16(const char* value) {
  set_has_att16();
  if (att16_ == &::google::protobuf::internal::kEmptyString) {
    att16_ = new ::std::string;
  }
  att16_->assign(value);
}
inline void Performance_complexPerformance_6::set_att16(const char* value, size_t size) {
  set_has_att16();
  if (att16_ == &::google::protobuf::internal::kEmptyString) {
    att16_ = new ::std::string;
  }
  att16_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Performance_complexPerformance_6::mutable_att16() {
  set_has_att16();
  if (att16_ == &::google::protobuf::internal::kEmptyString) {
    att16_ = new ::std::string;
  }
  return att16_;
}
inline ::std::string* Performance_complexPerformance_6::release_att16() {
  clear_has_att16();
  if (att16_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = att16_;
    att16_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Performance_complexPerformance_6::set_allocated_att16(::std::string* att16) {
  if (att16_ != &::google::protobuf::internal::kEmptyString) {
    delete att16_;
  }
  if (att16) {
    set_has_att16();
    att16_ = att16;
  } else {
    clear_has_att16();
    att16_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string att17 = 17;
inline bool Performance_complexPerformance_6::has_att17() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void Performance_complexPerformance_6::set_has_att17() {
  _has_bits_[0] |= 0x00010000u;
}
inline void Performance_complexPerformance_6::clear_has_att17() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void Performance_complexPerformance_6::clear_att17() {
  if (att17_ != &::google::protobuf::internal::kEmptyString) {
    att17_->clear();
  }
  clear_has_att17();
}
inline const ::std::string& Performance_complexPerformance_6::att17() const {
  return *att17_;
}
inline void Performance_complexPerformance_6::set_att17(const ::std::string& value) {
  set_has_att17();
  if (att17_ == &::google::protobuf::internal::kEmptyString) {
    att17_ = new ::std::string;
  }
  att17_->assign(value);
}
inline void Performance_complexPerformance_6::set_att17(const char* value) {
  set_has_att17();
  if (att17_ == &::google::protobuf::internal::kEmptyString) {
    att17_ = new ::std::string;
  }
  att17_->assign(value);
}
inline void Performance_complexPerformance_6::set_att17(const char* value, size_t size) {
  set_has_att17();
  if (att17_ == &::google::protobuf::internal::kEmptyString) {
    att17_ = new ::std::string;
  }
  att17_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Performance_complexPerformance_6::mutable_att17() {
  set_has_att17();
  if (att17_ == &::google::protobuf::internal::kEmptyString) {
    att17_ = new ::std::string;
  }
  return att17_;
}
inline ::std::string* Performance_complexPerformance_6::release_att17() {
  clear_has_att17();
  if (att17_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = att17_;
    att17_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Performance_complexPerformance_6::set_allocated_att17(::std::string* att17) {
  if (att17_ != &::google::protobuf::internal::kEmptyString) {
    delete att17_;
  }
  if (att17) {
    set_has_att17();
    att17_ = att17;
  } else {
    clear_has_att17();
    att17_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string att18 = 18;
inline bool Performance_complexPerformance_6::has_att18() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void Performance_complexPerformance_6::set_has_att18() {
  _has_bits_[0] |= 0x00020000u;
}
inline void Performance_complexPerformance_6::clear_has_att18() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void Performance_complexPerformance_6::clear_att18() {
  if (att18_ != &::google::protobuf::internal::kEmptyString) {
    att18_->clear();
  }
  clear_has_att18();
}
inline const ::std::string& Performance_complexPerformance_6::att18() const {
  return *att18_;
}
inline void Performance_complexPerformance_6::set_att18(const ::std::string& value) {
  set_has_att18();
  if (att18_ == &::google::protobuf::internal::kEmptyString) {
    att18_ = new ::std::string;
  }
  att18_->assign(value);
}
inline void Performance_complexPerformance_6::set_att18(const char* value) {
  set_has_att18();
  if (att18_ == &::google::protobuf::internal::kEmptyString) {
    att18_ = new ::std::string;
  }
  att18_->assign(value);
}
inline void Performance_complexPerformance_6::set_att18(const char* value, size_t size) {
  set_has_att18();
  if (att18_ == &::google::protobuf::internal::kEmptyString) {
    att18_ = new ::std::string;
  }
  att18_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Performance_complexPerformance_6::mutable_att18() {
  set_has_att18();
  if (att18_ == &::google::protobuf::internal::kEmptyString) {
    att18_ = new ::std::string;
  }
  return att18_;
}
inline ::std::string* Performance_complexPerformance_6::release_att18() {
  clear_has_att18();
  if (att18_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = att18_;
    att18_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Performance_complexPerformance_6::set_allocated_att18(::std::string* att18) {
  if (att18_ != &::google::protobuf::internal::kEmptyString) {
    delete att18_;
  }
  if (att18) {
    set_has_att18();
    att18_ = att18;
  } else {
    clear_has_att18();
    att18_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required float att19 = 19;
inline bool Performance_complexPerformance_6::has_att19() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void Performance_complexPerformance_6::set_has_att19() {
  _has_bits_[0] |= 0x00040000u;
}
inline void Performance_complexPerformance_6::clear_has_att19() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void Performance_complexPerformance_6::clear_att19() {
  att19_ = 0;
  clear_has_att19();
}
inline float Performance_complexPerformance_6::att19() const {
  return att19_;
}
inline void Performance_complexPerformance_6::set_att19(float value) {
  set_has_att19();
  att19_ = value;
}

// required float att20 = 20;
inline bool Performance_complexPerformance_6::has_att20() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void Performance_complexPerformance_6::set_has_att20() {
  _has_bits_[0] |= 0x00080000u;
}
inline void Performance_complexPerformance_6::clear_has_att20() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void Performance_complexPerformance_6::clear_att20() {
  att20_ = 0;
  clear_has_att20();
}
inline float Performance_complexPerformance_6::att20() const {
  return att20_;
}
inline void Performance_complexPerformance_6::set_att20(float value) {
  set_has_att20();
  att20_ = value;
}

// required float att21 = 21;
inline bool Performance_complexPerformance_6::has_att21() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void Performance_complexPerformance_6::set_has_att21() {
  _has_bits_[0] |= 0x00100000u;
}
inline void Performance_complexPerformance_6::clear_has_att21() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void Performance_complexPerformance_6::clear_att21() {
  att21_ = 0;
  clear_has_att21();
}
inline float Performance_complexPerformance_6::att21() const {
  return att21_;
}
inline void Performance_complexPerformance_6::set_att21(float value) {
  set_has_att21();
  att21_ = value;
}

// required float att22 = 22;
inline bool Performance_complexPerformance_6::has_att22() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void Performance_complexPerformance_6::set_has_att22() {
  _has_bits_[0] |= 0x00200000u;
}
inline void Performance_complexPerformance_6::clear_has_att22() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void Performance_complexPerformance_6::clear_att22() {
  att22_ = 0;
  clear_has_att22();
}
inline float Performance_complexPerformance_6::att22() const {
  return att22_;
}
inline void Performance_complexPerformance_6::set_att22(float value) {
  set_has_att22();
  att22_ = value;
}

// required float att23 = 23;
inline bool Performance_complexPerformance_6::has_att23() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void Performance_complexPerformance_6::set_has_att23() {
  _has_bits_[0] |= 0x00400000u;
}
inline void Performance_complexPerformance_6::clear_has_att23() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void Performance_complexPerformance_6::clear_att23() {
  att23_ = 0;
  clear_has_att23();
}
inline float Performance_complexPerformance_6::att23() const {
  return att23_;
}
inline void Performance_complexPerformance_6::set_att23(float value) {
  set_has_att23();
  att23_ = value;
}

// required float att24 = 24;
inline bool Performance_complexPerformance_6::has_att24() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void Performance_complexPerformance_6::set_has_att24() {
  _has_bits_[0] |= 0x00800000u;
}
inline void Performance_complexPerformance_6::clear_has_att24() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void Performance_complexPerformance_6::clear_att24() {
  att24_ = 0;
  clear_has_att24();
}
inline float Performance_complexPerformance_6::att24() const {
  return att24_;
}
inline void Performance_complexPerformance_6::set_att24(float value) {
  set_has_att24();
  att24_ = value;
}

// required double att25 = 25;
inline bool Performance_complexPerformance_6::has_att25() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void Performance_complexPerformance_6::set_has_att25() {
  _has_bits_[0] |= 0x01000000u;
}
inline void Performance_complexPerformance_6::clear_has_att25() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void Performance_complexPerformance_6::clear_att25() {
  att25_ = 0;
  clear_has_att25();
}
inline double Performance_complexPerformance_6::att25() const {
  return att25_;
}
inline void Performance_complexPerformance_6::set_att25(double value) {
  set_has_att25();
  att25_ = value;
}

// required double att26 = 26;
inline bool Performance_complexPerformance_6::has_att26() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void Performance_complexPerformance_6::set_has_att26() {
  _has_bits_[0] |= 0x02000000u;
}
inline void Performance_complexPerformance_6::clear_has_att26() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void Performance_complexPerformance_6::clear_att26() {
  att26_ = 0;
  clear_has_att26();
}
inline double Performance_complexPerformance_6::att26() const {
  return att26_;
}
inline void Performance_complexPerformance_6::set_att26(double value) {
  set_has_att26();
  att26_ = value;
}

// required double att27 = 27;
inline bool Performance_complexPerformance_6::has_att27() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void Performance_complexPerformance_6::set_has_att27() {
  _has_bits_[0] |= 0x04000000u;
}
inline void Performance_complexPerformance_6::clear_has_att27() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void Performance_complexPerformance_6::clear_att27() {
  att27_ = 0;
  clear_has_att27();
}
inline double Performance_complexPerformance_6::att27() const {
  return att27_;
}
inline void Performance_complexPerformance_6::set_att27(double value) {
  set_has_att27();
  att27_ = value;
}

// required double att28 = 28;
inline bool Performance_complexPerformance_6::has_att28() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void Performance_complexPerformance_6::set_has_att28() {
  _has_bits_[0] |= 0x08000000u;
}
inline void Performance_complexPerformance_6::clear_has_att28() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void Performance_complexPerformance_6::clear_att28() {
  att28_ = 0;
  clear_has_att28();
}
inline double Performance_complexPerformance_6::att28() const {
  return att28_;
}
inline void Performance_complexPerformance_6::set_att28(double value) {
  set_has_att28();
  att28_ = value;
}

// required double att29 = 29;
inline bool Performance_complexPerformance_6::has_att29() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void Performance_complexPerformance_6::set_has_att29() {
  _has_bits_[0] |= 0x10000000u;
}
inline void Performance_complexPerformance_6::clear_has_att29() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void Performance_complexPerformance_6::clear_att29() {
  att29_ = 0;
  clear_has_att29();
}
inline double Performance_complexPerformance_6::att29() const {
  return att29_;
}
inline void Performance_complexPerformance_6::set_att29(double value) {
  set_has_att29();
  att29_ = value;
}

// required double att30 = 30;
inline bool Performance_complexPerformance_6::has_att30() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void Performance_complexPerformance_6::set_has_att30() {
  _has_bits_[0] |= 0x20000000u;
}
inline void Performance_complexPerformance_6::clear_has_att30() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void Performance_complexPerformance_6::clear_att30() {
  att30_ = 0;
  clear_has_att30();
}
inline double Performance_complexPerformance_6::att30() const {
  return att30_;
}
inline void Performance_complexPerformance_6::set_att30(double value) {
  set_has_att30();
  att30_ = value;
}

// required bool att31 = 31;
inline bool Performance_complexPerformance_6::has_att31() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void Performance_complexPerformance_6::set_has_att31() {
  _has_bits_[0] |= 0x40000000u;
}
inline void Performance_complexPerformance_6::clear_has_att31() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void Performance_complexPerformance_6::clear_att31() {
  att31_ = false;
  clear_has_att31();
}
inline bool Performance_complexPerformance_6::att31() const {
  return att31_;
}
inline void Performance_complexPerformance_6::set_att31(bool value) {
  set_has_att31();
  att31_ = value;
}

// required bool att32 = 32;
inline bool Performance_complexPerformance_6::has_att32() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void Performance_complexPerformance_6::set_has_att32() {
  _has_bits_[0] |= 0x80000000u;
}
inline void Performance_complexPerformance_6::clear_has_att32() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void Performance_complexPerformance_6::clear_att32() {
  att32_ = false;
  clear_has_att32();
}
inline bool Performance_complexPerformance_6::att32() const {
  return att32_;
}
inline void Performance_complexPerformance_6::set_att32(bool value) {
  set_has_att32();
  att32_ = value;
}

// required bool att33 = 33;
inline bool Performance_complexPerformance_6::has_att33() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void Performance_complexPerformance_6::set_has_att33() {
  _has_bits_[1] |= 0x00000001u;
}
inline void Performance_complexPerformance_6::clear_has_att33() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void Performance_complexPerformance_6::clear_att33() {
  att33_ = false;
  clear_has_att33();
}
inline bool Performance_complexPerformance_6::att33() const {
  return att33_;
}
inline void Performance_complexPerformance_6::set_att33(bool value) {
  set_has_att33();
  att33_ = value;
}

// required bool att34 = 34;
inline bool Performance_complexPerformance_6::has_att34() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void Performance_complexPerformance_6::set_has_att34() {
  _has_bits_[1] |= 0x00000002u;
}
inline void Performance_complexPerformance_6::clear_has_att34() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void Performance_complexPerformance_6::clear_att34() {
  att34_ = false;
  clear_has_att34();
}
inline bool Performance_complexPerformance_6::att34() const {
  return att34_;
}
inline void Performance_complexPerformance_6::set_att34(bool value) {
  set_has_att34();
  att34_ = value;
}

// required bool att35 = 35;
inline bool Performance_complexPerformance_6::has_att35() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void Performance_complexPerformance_6::set_has_att35() {
  _has_bits_[1] |= 0x00000004u;
}
inline void Performance_complexPerformance_6::clear_has_att35() {
  _has_bits_[1] &= ~0x00000004u;
}
inline void Performance_complexPerformance_6::clear_att35() {
  att35_ = false;
  clear_has_att35();
}
inline bool Performance_complexPerformance_6::att35() const {
  return att35_;
}
inline void Performance_complexPerformance_6::set_att35(bool value) {
  set_has_att35();
  att35_ = value;
}

// required bool att36 = 36;
inline bool Performance_complexPerformance_6::has_att36() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void Performance_complexPerformance_6::set_has_att36() {
  _has_bits_[1] |= 0x00000008u;
}
inline void Performance_complexPerformance_6::clear_has_att36() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void Performance_complexPerformance_6::clear_att36() {
  att36_ = false;
  clear_has_att36();
}
inline bool Performance_complexPerformance_6::att36() const {
  return att36_;
}
inline void Performance_complexPerformance_6::set_att36(bool value) {
  set_has_att36();
  att36_ = value;
}

// -------------------------------------------------------------------

// Performance_complexPerformance_8

// required int32 att1 = 1;
inline bool Performance_complexPerformance_8::has_att1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Performance_complexPerformance_8::set_has_att1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Performance_complexPerformance_8::clear_has_att1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Performance_complexPerformance_8::clear_att1() {
  att1_ = 0;
  clear_has_att1();
}
inline ::google::protobuf::int32 Performance_complexPerformance_8::att1() const {
  return att1_;
}
inline void Performance_complexPerformance_8::set_att1(::google::protobuf::int32 value) {
  set_has_att1();
  att1_ = value;
}

// required int32 att2 = 2;
inline bool Performance_complexPerformance_8::has_att2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Performance_complexPerformance_8::set_has_att2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Performance_complexPerformance_8::clear_has_att2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Performance_complexPerformance_8::clear_att2() {
  att2_ = 0;
  clear_has_att2();
}
inline ::google::protobuf::int32 Performance_complexPerformance_8::att2() const {
  return att2_;
}
inline void Performance_complexPerformance_8::set_att2(::google::protobuf::int32 value) {
  set_has_att2();
  att2_ = value;
}

// required int32 att3 = 3;
inline bool Performance_complexPerformance_8::has_att3() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Performance_complexPerformance_8::set_has_att3() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Performance_complexPerformance_8::clear_has_att3() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Performance_complexPerformance_8::clear_att3() {
  att3_ = 0;
  clear_has_att3();
}
inline ::google::protobuf::int32 Performance_complexPerformance_8::att3() const {
  return att3_;
}
inline void Performance_complexPerformance_8::set_att3(::google::protobuf::int32 value) {
  set_has_att3();
  att3_ = value;
}

// required int32 att4 = 4;
inline bool Performance_complexPerformance_8::has_att4() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Performance_complexPerformance_8::set_has_att4() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Performance_complexPerformance_8::clear_has_att4() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Performance_complexPerformance_8::clear_att4() {
  att4_ = 0;
  clear_has_att4();
}
inline ::google::protobuf::int32 Performance_complexPerformance_8::att4() const {
  return att4_;
}
inline void Performance_complexPerformance_8::set_att4(::google::protobuf::int32 value) {
  set_has_att4();
  att4_ = value;
}

// required int32 att5 = 5;
inline bool Performance_complexPerformance_8::has_att5() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Performance_complexPerformance_8::set_has_att5() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Performance_complexPerformance_8::clear_has_att5() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Performance_complexPerformance_8::clear_att5() {
  att5_ = 0;
  clear_has_att5();
}
inline ::google::protobuf::int32 Performance_complexPerformance_8::att5() const {
  return att5_;
}
inline void Performance_complexPerformance_8::set_att5(::google::protobuf::int32 value) {
  set_has_att5();
  att5_ = value;
}

// required int32 att6 = 6;
inline bool Performance_complexPerformance_8::has_att6() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Performance_complexPerformance_8::set_has_att6() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Performance_complexPerformance_8::clear_has_att6() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Performance_complexPerformance_8::clear_att6() {
  att6_ = 0;
  clear_has_att6();
}
inline ::google::protobuf::int32 Performance_complexPerformance_8::att6() const {
  return att6_;
}
inline void Performance_complexPerformance_8::set_att6(::google::protobuf::int32 value) {
  set_has_att6();
  att6_ = value;
}

// required int32 att7 = 7;
inline bool Performance_complexPerformance_8::has_att7() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Performance_complexPerformance_8::set_has_att7() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Performance_complexPerformance_8::clear_has_att7() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Performance_complexPerformance_8::clear_att7() {
  att7_ = 0;
  clear_has_att7();
}
inline ::google::protobuf::int32 Performance_complexPerformance_8::att7() const {
  return att7_;
}
inline void Performance_complexPerformance_8::set_att7(::google::protobuf::int32 value) {
  set_has_att7();
  att7_ = value;
}

// required int32 att8 = 8;
inline bool Performance_complexPerformance_8::has_att8() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Performance_complexPerformance_8::set_has_att8() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Performance_complexPerformance_8::clear_has_att8() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Performance_complexPerformance_8::clear_att8() {
  att8_ = 0;
  clear_has_att8();
}
inline ::google::protobuf::int32 Performance_complexPerformance_8::att8() const {
  return att8_;
}
inline void Performance_complexPerformance_8::set_att8(::google::protobuf::int32 value) {
  set_has_att8();
  att8_ = value;
}

// required int64 att9 = 9;
inline bool Performance_complexPerformance_8::has_att9() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Performance_complexPerformance_8::set_has_att9() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Performance_complexPerformance_8::clear_has_att9() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Performance_complexPerformance_8::clear_att9() {
  att9_ = GOOGLE_LONGLONG(0);
  clear_has_att9();
}
inline ::google::protobuf::int64 Performance_complexPerformance_8::att9() const {
  return att9_;
}
inline void Performance_complexPerformance_8::set_att9(::google::protobuf::int64 value) {
  set_has_att9();
  att9_ = value;
}

// required int64 att10 = 10;
inline bool Performance_complexPerformance_8::has_att10() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Performance_complexPerformance_8::set_has_att10() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Performance_complexPerformance_8::clear_has_att10() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Performance_complexPerformance_8::clear_att10() {
  att10_ = GOOGLE_LONGLONG(0);
  clear_has_att10();
}
inline ::google::protobuf::int64 Performance_complexPerformance_8::att10() const {
  return att10_;
}
inline void Performance_complexPerformance_8::set_att10(::google::protobuf::int64 value) {
  set_has_att10();
  att10_ = value;
}

// required int64 att11 = 11;
inline bool Performance_complexPerformance_8::has_att11() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Performance_complexPerformance_8::set_has_att11() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Performance_complexPerformance_8::clear_has_att11() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Performance_complexPerformance_8::clear_att11() {
  att11_ = GOOGLE_LONGLONG(0);
  clear_has_att11();
}
inline ::google::protobuf::int64 Performance_complexPerformance_8::att11() const {
  return att11_;
}
inline void Performance_complexPerformance_8::set_att11(::google::protobuf::int64 value) {
  set_has_att11();
  att11_ = value;
}

// required int64 att12 = 12;
inline bool Performance_complexPerformance_8::has_att12() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Performance_complexPerformance_8::set_has_att12() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Performance_complexPerformance_8::clear_has_att12() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Performance_complexPerformance_8::clear_att12() {
  att12_ = GOOGLE_LONGLONG(0);
  clear_has_att12();
}
inline ::google::protobuf::int64 Performance_complexPerformance_8::att12() const {
  return att12_;
}
inline void Performance_complexPerformance_8::set_att12(::google::protobuf::int64 value) {
  set_has_att12();
  att12_ = value;
}

// required int64 att13 = 13;
inline bool Performance_complexPerformance_8::has_att13() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Performance_complexPerformance_8::set_has_att13() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Performance_complexPerformance_8::clear_has_att13() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Performance_complexPerformance_8::clear_att13() {
  att13_ = GOOGLE_LONGLONG(0);
  clear_has_att13();
}
inline ::google::protobuf::int64 Performance_complexPerformance_8::att13() const {
  return att13_;
}
inline void Performance_complexPerformance_8::set_att13(::google::protobuf::int64 value) {
  set_has_att13();
  att13_ = value;
}

// required int64 att14 = 14;
inline bool Performance_complexPerformance_8::has_att14() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void Performance_complexPerformance_8::set_has_att14() {
  _has_bits_[0] |= 0x00002000u;
}
inline void Performance_complexPerformance_8::clear_has_att14() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void Performance_complexPerformance_8::clear_att14() {
  att14_ = GOOGLE_LONGLONG(0);
  clear_has_att14();
}
inline ::google::protobuf::int64 Performance_complexPerformance_8::att14() const {
  return att14_;
}
inline void Performance_complexPerformance_8::set_att14(::google::protobuf::int64 value) {
  set_has_att14();
  att14_ = value;
}

// required int64 att15 = 15;
inline bool Performance_complexPerformance_8::has_att15() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void Performance_complexPerformance_8::set_has_att15() {
  _has_bits_[0] |= 0x00004000u;
}
inline void Performance_complexPerformance_8::clear_has_att15() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void Performance_complexPerformance_8::clear_att15() {
  att15_ = GOOGLE_LONGLONG(0);
  clear_has_att15();
}
inline ::google::protobuf::int64 Performance_complexPerformance_8::att15() const {
  return att15_;
}
inline void Performance_complexPerformance_8::set_att15(::google::protobuf::int64 value) {
  set_has_att15();
  att15_ = value;
}

// required int64 att16 = 16;
inline bool Performance_complexPerformance_8::has_att16() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void Performance_complexPerformance_8::set_has_att16() {
  _has_bits_[0] |= 0x00008000u;
}
inline void Performance_complexPerformance_8::clear_has_att16() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void Performance_complexPerformance_8::clear_att16() {
  att16_ = GOOGLE_LONGLONG(0);
  clear_has_att16();
}
inline ::google::protobuf::int64 Performance_complexPerformance_8::att16() const {
  return att16_;
}
inline void Performance_complexPerformance_8::set_att16(::google::protobuf::int64 value) {
  set_has_att16();
  att16_ = value;
}

// required string att17 = 17;
inline bool Performance_complexPerformance_8::has_att17() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void Performance_complexPerformance_8::set_has_att17() {
  _has_bits_[0] |= 0x00010000u;
}
inline void Performance_complexPerformance_8::clear_has_att17() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void Performance_complexPerformance_8::clear_att17() {
  if (att17_ != &::google::protobuf::internal::kEmptyString) {
    att17_->clear();
  }
  clear_has_att17();
}
inline const ::std::string& Performance_complexPerformance_8::att17() const {
  return *att17_;
}
inline void Performance_complexPerformance_8::set_att17(const ::std::string& value) {
  set_has_att17();
  if (att17_ == &::google::protobuf::internal::kEmptyString) {
    att17_ = new ::std::string;
  }
  att17_->assign(value);
}
inline void Performance_complexPerformance_8::set_att17(const char* value) {
  set_has_att17();
  if (att17_ == &::google::protobuf::internal::kEmptyString) {
    att17_ = new ::std::string;
  }
  att17_->assign(value);
}
inline void Performance_complexPerformance_8::set_att17(const char* value, size_t size) {
  set_has_att17();
  if (att17_ == &::google::protobuf::internal::kEmptyString) {
    att17_ = new ::std::string;
  }
  att17_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Performance_complexPerformance_8::mutable_att17() {
  set_has_att17();
  if (att17_ == &::google::protobuf::internal::kEmptyString) {
    att17_ = new ::std::string;
  }
  return att17_;
}
inline ::std::string* Performance_complexPerformance_8::release_att17() {
  clear_has_att17();
  if (att17_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = att17_;
    att17_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Performance_complexPerformance_8::set_allocated_att17(::std::string* att17) {
  if (att17_ != &::google::protobuf::internal::kEmptyString) {
    delete att17_;
  }
  if (att17) {
    set_has_att17();
    att17_ = att17;
  } else {
    clear_has_att17();
    att17_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string att18 = 18;
inline bool Performance_complexPerformance_8::has_att18() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void Performance_complexPerformance_8::set_has_att18() {
  _has_bits_[0] |= 0x00020000u;
}
inline void Performance_complexPerformance_8::clear_has_att18() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void Performance_complexPerformance_8::clear_att18() {
  if (att18_ != &::google::protobuf::internal::kEmptyString) {
    att18_->clear();
  }
  clear_has_att18();
}
inline const ::std::string& Performance_complexPerformance_8::att18() const {
  return *att18_;
}
inline void Performance_complexPerformance_8::set_att18(const ::std::string& value) {
  set_has_att18();
  if (att18_ == &::google::protobuf::internal::kEmptyString) {
    att18_ = new ::std::string;
  }
  att18_->assign(value);
}
inline void Performance_complexPerformance_8::set_att18(const char* value) {
  set_has_att18();
  if (att18_ == &::google::protobuf::internal::kEmptyString) {
    att18_ = new ::std::string;
  }
  att18_->assign(value);
}
inline void Performance_complexPerformance_8::set_att18(const char* value, size_t size) {
  set_has_att18();
  if (att18_ == &::google::protobuf::internal::kEmptyString) {
    att18_ = new ::std::string;
  }
  att18_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Performance_complexPerformance_8::mutable_att18() {
  set_has_att18();
  if (att18_ == &::google::protobuf::internal::kEmptyString) {
    att18_ = new ::std::string;
  }
  return att18_;
}
inline ::std::string* Performance_complexPerformance_8::release_att18() {
  clear_has_att18();
  if (att18_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = att18_;
    att18_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Performance_complexPerformance_8::set_allocated_att18(::std::string* att18) {
  if (att18_ != &::google::protobuf::internal::kEmptyString) {
    delete att18_;
  }
  if (att18) {
    set_has_att18();
    att18_ = att18;
  } else {
    clear_has_att18();
    att18_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string att19 = 19;
inline bool Performance_complexPerformance_8::has_att19() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void Performance_complexPerformance_8::set_has_att19() {
  _has_bits_[0] |= 0x00040000u;
}
inline void Performance_complexPerformance_8::clear_has_att19() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void Performance_complexPerformance_8::clear_att19() {
  if (att19_ != &::google::protobuf::internal::kEmptyString) {
    att19_->clear();
  }
  clear_has_att19();
}
inline const ::std::string& Performance_complexPerformance_8::att19() const {
  return *att19_;
}
inline void Performance_complexPerformance_8::set_att19(const ::std::string& value) {
  set_has_att19();
  if (att19_ == &::google::protobuf::internal::kEmptyString) {
    att19_ = new ::std::string;
  }
  att19_->assign(value);
}
inline void Performance_complexPerformance_8::set_att19(const char* value) {
  set_has_att19();
  if (att19_ == &::google::protobuf::internal::kEmptyString) {
    att19_ = new ::std::string;
  }
  att19_->assign(value);
}
inline void Performance_complexPerformance_8::set_att19(const char* value, size_t size) {
  set_has_att19();
  if (att19_ == &::google::protobuf::internal::kEmptyString) {
    att19_ = new ::std::string;
  }
  att19_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Performance_complexPerformance_8::mutable_att19() {
  set_has_att19();
  if (att19_ == &::google::protobuf::internal::kEmptyString) {
    att19_ = new ::std::string;
  }
  return att19_;
}
inline ::std::string* Performance_complexPerformance_8::release_att19() {
  clear_has_att19();
  if (att19_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = att19_;
    att19_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Performance_complexPerformance_8::set_allocated_att19(::std::string* att19) {
  if (att19_ != &::google::protobuf::internal::kEmptyString) {
    delete att19_;
  }
  if (att19) {
    set_has_att19();
    att19_ = att19;
  } else {
    clear_has_att19();
    att19_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string att20 = 20;
inline bool Performance_complexPerformance_8::has_att20() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void Performance_complexPerformance_8::set_has_att20() {
  _has_bits_[0] |= 0x00080000u;
}
inline void Performance_complexPerformance_8::clear_has_att20() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void Performance_complexPerformance_8::clear_att20() {
  if (att20_ != &::google::protobuf::internal::kEmptyString) {
    att20_->clear();
  }
  clear_has_att20();
}
inline const ::std::string& Performance_complexPerformance_8::att20() const {
  return *att20_;
}
inline void Performance_complexPerformance_8::set_att20(const ::std::string& value) {
  set_has_att20();
  if (att20_ == &::google::protobuf::internal::kEmptyString) {
    att20_ = new ::std::string;
  }
  att20_->assign(value);
}
inline void Performance_complexPerformance_8::set_att20(const char* value) {
  set_has_att20();
  if (att20_ == &::google::protobuf::internal::kEmptyString) {
    att20_ = new ::std::string;
  }
  att20_->assign(value);
}
inline void Performance_complexPerformance_8::set_att20(const char* value, size_t size) {
  set_has_att20();
  if (att20_ == &::google::protobuf::internal::kEmptyString) {
    att20_ = new ::std::string;
  }
  att20_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Performance_complexPerformance_8::mutable_att20() {
  set_has_att20();
  if (att20_ == &::google::protobuf::internal::kEmptyString) {
    att20_ = new ::std::string;
  }
  return att20_;
}
inline ::std::string* Performance_complexPerformance_8::release_att20() {
  clear_has_att20();
  if (att20_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = att20_;
    att20_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Performance_complexPerformance_8::set_allocated_att20(::std::string* att20) {
  if (att20_ != &::google::protobuf::internal::kEmptyString) {
    delete att20_;
  }
  if (att20) {
    set_has_att20();
    att20_ = att20;
  } else {
    clear_has_att20();
    att20_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string att21 = 21;
inline bool Performance_complexPerformance_8::has_att21() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void Performance_complexPerformance_8::set_has_att21() {
  _has_bits_[0] |= 0x00100000u;
}
inline void Performance_complexPerformance_8::clear_has_att21() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void Performance_complexPerformance_8::clear_att21() {
  if (att21_ != &::google::protobuf::internal::kEmptyString) {
    att21_->clear();
  }
  clear_has_att21();
}
inline const ::std::string& Performance_complexPerformance_8::att21() const {
  return *att21_;
}
inline void Performance_complexPerformance_8::set_att21(const ::std::string& value) {
  set_has_att21();
  if (att21_ == &::google::protobuf::internal::kEmptyString) {
    att21_ = new ::std::string;
  }
  att21_->assign(value);
}
inline void Performance_complexPerformance_8::set_att21(const char* value) {
  set_has_att21();
  if (att21_ == &::google::protobuf::internal::kEmptyString) {
    att21_ = new ::std::string;
  }
  att21_->assign(value);
}
inline void Performance_complexPerformance_8::set_att21(const char* value, size_t size) {
  set_has_att21();
  if (att21_ == &::google::protobuf::internal::kEmptyString) {
    att21_ = new ::std::string;
  }
  att21_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Performance_complexPerformance_8::mutable_att21() {
  set_has_att21();
  if (att21_ == &::google::protobuf::internal::kEmptyString) {
    att21_ = new ::std::string;
  }
  return att21_;
}
inline ::std::string* Performance_complexPerformance_8::release_att21() {
  clear_has_att21();
  if (att21_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = att21_;
    att21_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Performance_complexPerformance_8::set_allocated_att21(::std::string* att21) {
  if (att21_ != &::google::protobuf::internal::kEmptyString) {
    delete att21_;
  }
  if (att21) {
    set_has_att21();
    att21_ = att21;
  } else {
    clear_has_att21();
    att21_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string att22 = 22;
inline bool Performance_complexPerformance_8::has_att22() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void Performance_complexPerformance_8::set_has_att22() {
  _has_bits_[0] |= 0x00200000u;
}
inline void Performance_complexPerformance_8::clear_has_att22() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void Performance_complexPerformance_8::clear_att22() {
  if (att22_ != &::google::protobuf::internal::kEmptyString) {
    att22_->clear();
  }
  clear_has_att22();
}
inline const ::std::string& Performance_complexPerformance_8::att22() const {
  return *att22_;
}
inline void Performance_complexPerformance_8::set_att22(const ::std::string& value) {
  set_has_att22();
  if (att22_ == &::google::protobuf::internal::kEmptyString) {
    att22_ = new ::std::string;
  }
  att22_->assign(value);
}
inline void Performance_complexPerformance_8::set_att22(const char* value) {
  set_has_att22();
  if (att22_ == &::google::protobuf::internal::kEmptyString) {
    att22_ = new ::std::string;
  }
  att22_->assign(value);
}
inline void Performance_complexPerformance_8::set_att22(const char* value, size_t size) {
  set_has_att22();
  if (att22_ == &::google::protobuf::internal::kEmptyString) {
    att22_ = new ::std::string;
  }
  att22_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Performance_complexPerformance_8::mutable_att22() {
  set_has_att22();
  if (att22_ == &::google::protobuf::internal::kEmptyString) {
    att22_ = new ::std::string;
  }
  return att22_;
}
inline ::std::string* Performance_complexPerformance_8::release_att22() {
  clear_has_att22();
  if (att22_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = att22_;
    att22_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Performance_complexPerformance_8::set_allocated_att22(::std::string* att22) {
  if (att22_ != &::google::protobuf::internal::kEmptyString) {
    delete att22_;
  }
  if (att22) {
    set_has_att22();
    att22_ = att22;
  } else {
    clear_has_att22();
    att22_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string att23 = 23;
inline bool Performance_complexPerformance_8::has_att23() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void Performance_complexPerformance_8::set_has_att23() {
  _has_bits_[0] |= 0x00400000u;
}
inline void Performance_complexPerformance_8::clear_has_att23() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void Performance_complexPerformance_8::clear_att23() {
  if (att23_ != &::google::protobuf::internal::kEmptyString) {
    att23_->clear();
  }
  clear_has_att23();
}
inline const ::std::string& Performance_complexPerformance_8::att23() const {
  return *att23_;
}
inline void Performance_complexPerformance_8::set_att23(const ::std::string& value) {
  set_has_att23();
  if (att23_ == &::google::protobuf::internal::kEmptyString) {
    att23_ = new ::std::string;
  }
  att23_->assign(value);
}
inline void Performance_complexPerformance_8::set_att23(const char* value) {
  set_has_att23();
  if (att23_ == &::google::protobuf::internal::kEmptyString) {
    att23_ = new ::std::string;
  }
  att23_->assign(value);
}
inline void Performance_complexPerformance_8::set_att23(const char* value, size_t size) {
  set_has_att23();
  if (att23_ == &::google::protobuf::internal::kEmptyString) {
    att23_ = new ::std::string;
  }
  att23_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Performance_complexPerformance_8::mutable_att23() {
  set_has_att23();
  if (att23_ == &::google::protobuf::internal::kEmptyString) {
    att23_ = new ::std::string;
  }
  return att23_;
}
inline ::std::string* Performance_complexPerformance_8::release_att23() {
  clear_has_att23();
  if (att23_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = att23_;
    att23_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Performance_complexPerformance_8::set_allocated_att23(::std::string* att23) {
  if (att23_ != &::google::protobuf::internal::kEmptyString) {
    delete att23_;
  }
  if (att23) {
    set_has_att23();
    att23_ = att23;
  } else {
    clear_has_att23();
    att23_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string att24 = 24;
inline bool Performance_complexPerformance_8::has_att24() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void Performance_complexPerformance_8::set_has_att24() {
  _has_bits_[0] |= 0x00800000u;
}
inline void Performance_complexPerformance_8::clear_has_att24() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void Performance_complexPerformance_8::clear_att24() {
  if (att24_ != &::google::protobuf::internal::kEmptyString) {
    att24_->clear();
  }
  clear_has_att24();
}
inline const ::std::string& Performance_complexPerformance_8::att24() const {
  return *att24_;
}
inline void Performance_complexPerformance_8::set_att24(const ::std::string& value) {
  set_has_att24();
  if (att24_ == &::google::protobuf::internal::kEmptyString) {
    att24_ = new ::std::string;
  }
  att24_->assign(value);
}
inline void Performance_complexPerformance_8::set_att24(const char* value) {
  set_has_att24();
  if (att24_ == &::google::protobuf::internal::kEmptyString) {
    att24_ = new ::std::string;
  }
  att24_->assign(value);
}
inline void Performance_complexPerformance_8::set_att24(const char* value, size_t size) {
  set_has_att24();
  if (att24_ == &::google::protobuf::internal::kEmptyString) {
    att24_ = new ::std::string;
  }
  att24_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Performance_complexPerformance_8::mutable_att24() {
  set_has_att24();
  if (att24_ == &::google::protobuf::internal::kEmptyString) {
    att24_ = new ::std::string;
  }
  return att24_;
}
inline ::std::string* Performance_complexPerformance_8::release_att24() {
  clear_has_att24();
  if (att24_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = att24_;
    att24_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Performance_complexPerformance_8::set_allocated_att24(::std::string* att24) {
  if (att24_ != &::google::protobuf::internal::kEmptyString) {
    delete att24_;
  }
  if (att24) {
    set_has_att24();
    att24_ = att24;
  } else {
    clear_has_att24();
    att24_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required float att25 = 25;
inline bool Performance_complexPerformance_8::has_att25() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void Performance_complexPerformance_8::set_has_att25() {
  _has_bits_[0] |= 0x01000000u;
}
inline void Performance_complexPerformance_8::clear_has_att25() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void Performance_complexPerformance_8::clear_att25() {
  att25_ = 0;
  clear_has_att25();
}
inline float Performance_complexPerformance_8::att25() const {
  return att25_;
}
inline void Performance_complexPerformance_8::set_att25(float value) {
  set_has_att25();
  att25_ = value;
}

// required float att26 = 26;
inline bool Performance_complexPerformance_8::has_att26() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void Performance_complexPerformance_8::set_has_att26() {
  _has_bits_[0] |= 0x02000000u;
}
inline void Performance_complexPerformance_8::clear_has_att26() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void Performance_complexPerformance_8::clear_att26() {
  att26_ = 0;
  clear_has_att26();
}
inline float Performance_complexPerformance_8::att26() const {
  return att26_;
}
inline void Performance_complexPerformance_8::set_att26(float value) {
  set_has_att26();
  att26_ = value;
}

// required float att27 = 27;
inline bool Performance_complexPerformance_8::has_att27() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void Performance_complexPerformance_8::set_has_att27() {
  _has_bits_[0] |= 0x04000000u;
}
inline void Performance_complexPerformance_8::clear_has_att27() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void Performance_complexPerformance_8::clear_att27() {
  att27_ = 0;
  clear_has_att27();
}
inline float Performance_complexPerformance_8::att27() const {
  return att27_;
}
inline void Performance_complexPerformance_8::set_att27(float value) {
  set_has_att27();
  att27_ = value;
}

// required float att28 = 28;
inline bool Performance_complexPerformance_8::has_att28() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void Performance_complexPerformance_8::set_has_att28() {
  _has_bits_[0] |= 0x08000000u;
}
inline void Performance_complexPerformance_8::clear_has_att28() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void Performance_complexPerformance_8::clear_att28() {
  att28_ = 0;
  clear_has_att28();
}
inline float Performance_complexPerformance_8::att28() const {
  return att28_;
}
inline void Performance_complexPerformance_8::set_att28(float value) {
  set_has_att28();
  att28_ = value;
}

// required float att29 = 29;
inline bool Performance_complexPerformance_8::has_att29() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void Performance_complexPerformance_8::set_has_att29() {
  _has_bits_[0] |= 0x10000000u;
}
inline void Performance_complexPerformance_8::clear_has_att29() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void Performance_complexPerformance_8::clear_att29() {
  att29_ = 0;
  clear_has_att29();
}
inline float Performance_complexPerformance_8::att29() const {
  return att29_;
}
inline void Performance_complexPerformance_8::set_att29(float value) {
  set_has_att29();
  att29_ = value;
}

// required float att30 = 30;
inline bool Performance_complexPerformance_8::has_att30() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void Performance_complexPerformance_8::set_has_att30() {
  _has_bits_[0] |= 0x20000000u;
}
inline void Performance_complexPerformance_8::clear_has_att30() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void Performance_complexPerformance_8::clear_att30() {
  att30_ = 0;
  clear_has_att30();
}
inline float Performance_complexPerformance_8::att30() const {
  return att30_;
}
inline void Performance_complexPerformance_8::set_att30(float value) {
  set_has_att30();
  att30_ = value;
}

// required float att31 = 31;
inline bool Performance_complexPerformance_8::has_att31() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void Performance_complexPerformance_8::set_has_att31() {
  _has_bits_[0] |= 0x40000000u;
}
inline void Performance_complexPerformance_8::clear_has_att31() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void Performance_complexPerformance_8::clear_att31() {
  att31_ = 0;
  clear_has_att31();
}
inline float Performance_complexPerformance_8::att31() const {
  return att31_;
}
inline void Performance_complexPerformance_8::set_att31(float value) {
  set_has_att31();
  att31_ = value;
}

// required float att32 = 32;
inline bool Performance_complexPerformance_8::has_att32() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void Performance_complexPerformance_8::set_has_att32() {
  _has_bits_[0] |= 0x80000000u;
}
inline void Performance_complexPerformance_8::clear_has_att32() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void Performance_complexPerformance_8::clear_att32() {
  att32_ = 0;
  clear_has_att32();
}
inline float Performance_complexPerformance_8::att32() const {
  return att32_;
}
inline void Performance_complexPerformance_8::set_att32(float value) {
  set_has_att32();
  att32_ = value;
}

// required double att33 = 33;
inline bool Performance_complexPerformance_8::has_att33() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void Performance_complexPerformance_8::set_has_att33() {
  _has_bits_[1] |= 0x00000001u;
}
inline void Performance_complexPerformance_8::clear_has_att33() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void Performance_complexPerformance_8::clear_att33() {
  att33_ = 0;
  clear_has_att33();
}
inline double Performance_complexPerformance_8::att33() const {
  return att33_;
}
inline void Performance_complexPerformance_8::set_att33(double value) {
  set_has_att33();
  att33_ = value;
}

// required double att34 = 34;
inline bool Performance_complexPerformance_8::has_att34() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void Performance_complexPerformance_8::set_has_att34() {
  _has_bits_[1] |= 0x00000002u;
}
inline void Performance_complexPerformance_8::clear_has_att34() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void Performance_complexPerformance_8::clear_att34() {
  att34_ = 0;
  clear_has_att34();
}
inline double Performance_complexPerformance_8::att34() const {
  return att34_;
}
inline void Performance_complexPerformance_8::set_att34(double value) {
  set_has_att34();
  att34_ = value;
}

// required double att35 = 35;
inline bool Performance_complexPerformance_8::has_att35() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void Performance_complexPerformance_8::set_has_att35() {
  _has_bits_[1] |= 0x00000004u;
}
inline void Performance_complexPerformance_8::clear_has_att35() {
  _has_bits_[1] &= ~0x00000004u;
}
inline void Performance_complexPerformance_8::clear_att35() {
  att35_ = 0;
  clear_has_att35();
}
inline double Performance_complexPerformance_8::att35() const {
  return att35_;
}
inline void Performance_complexPerformance_8::set_att35(double value) {
  set_has_att35();
  att35_ = value;
}

// required double att36 = 36;
inline bool Performance_complexPerformance_8::has_att36() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void Performance_complexPerformance_8::set_has_att36() {
  _has_bits_[1] |= 0x00000008u;
}
inline void Performance_complexPerformance_8::clear_has_att36() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void Performance_complexPerformance_8::clear_att36() {
  att36_ = 0;
  clear_has_att36();
}
inline double Performance_complexPerformance_8::att36() const {
  return att36_;
}
inline void Performance_complexPerformance_8::set_att36(double value) {
  set_has_att36();
  att36_ = value;
}

// required double att37 = 37;
inline bool Performance_complexPerformance_8::has_att37() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void Performance_complexPerformance_8::set_has_att37() {
  _has_bits_[1] |= 0x00000010u;
}
inline void Performance_complexPerformance_8::clear_has_att37() {
  _has_bits_[1] &= ~0x00000010u;
}
inline void Performance_complexPerformance_8::clear_att37() {
  att37_ = 0;
  clear_has_att37();
}
inline double Performance_complexPerformance_8::att37() const {
  return att37_;
}
inline void Performance_complexPerformance_8::set_att37(double value) {
  set_has_att37();
  att37_ = value;
}

// required double att38 = 38;
inline bool Performance_complexPerformance_8::has_att38() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
inline void Performance_complexPerformance_8::set_has_att38() {
  _has_bits_[1] |= 0x00000020u;
}
inline void Performance_complexPerformance_8::clear_has_att38() {
  _has_bits_[1] &= ~0x00000020u;
}
inline void Performance_complexPerformance_8::clear_att38() {
  att38_ = 0;
  clear_has_att38();
}
inline double Performance_complexPerformance_8::att38() const {
  return att38_;
}
inline void Performance_complexPerformance_8::set_att38(double value) {
  set_has_att38();
  att38_ = value;
}

// required double att39 = 39;
inline bool Performance_complexPerformance_8::has_att39() const {
  return (_has_bits_[1] & 0x00000040u) != 0;
}
inline void Performance_complexPerformance_8::set_has_att39() {
  _has_bits_[1] |= 0x00000040u;
}
inline void Performance_complexPerformance_8::clear_has_att39() {
  _has_bits_[1] &= ~0x00000040u;
}
inline void Performance_complexPerformance_8::clear_att39() {
  att39_ = 0;
  clear_has_att39();
}
inline double Performance_complexPerformance_8::att39() const {
  return att39_;
}
inline void Performance_complexPerformance_8::set_att39(double value) {
  set_has_att39();
  att39_ = value;
}

// required double att40 = 40;
inline bool Performance_complexPerformance_8::has_att40() const {
  return (_has_bits_[1] & 0x00000080u) != 0;
}
inline void Performance_complexPerformance_8::set_has_att40() {
  _has_bits_[1] |= 0x00000080u;
}
inline void Performance_complexPerformance_8::clear_has_att40() {
  _has_bits_[1] &= ~0x00000080u;
}
inline void Performance_complexPerformance_8::clear_att40() {
  att40_ = 0;
  clear_has_att40();
}
inline double Performance_complexPerformance_8::att40() const {
  return att40_;
}
inline void Performance_complexPerformance_8::set_att40(double value) {
  set_has_att40();
  att40_ = value;
}

// required bool att41 = 41;
inline bool Performance_complexPerformance_8::has_att41() const {
  return (_has_bits_[1] & 0x00000100u) != 0;
}
inline void Performance_complexPerformance_8::set_has_att41() {
  _has_bits_[1] |= 0x00000100u;
}
inline void Performance_complexPerformance_8::clear_has_att41() {
  _has_bits_[1] &= ~0x00000100u;
}
inline void Performance_complexPerformance_8::clear_att41() {
  att41_ = false;
  clear_has_att41();
}
inline bool Performance_complexPerformance_8::att41() const {
  return att41_;
}
inline void Performance_complexPerformance_8::set_att41(bool value) {
  set_has_att41();
  att41_ = value;
}

// required bool att42 = 42;
inline bool Performance_complexPerformance_8::has_att42() const {
  return (_has_bits_[1] & 0x00000200u) != 0;
}
inline void Performance_complexPerformance_8::set_has_att42() {
  _has_bits_[1] |= 0x00000200u;
}
inline void Performance_complexPerformance_8::clear_has_att42() {
  _has_bits_[1] &= ~0x00000200u;
}
inline void Performance_complexPerformance_8::clear_att42() {
  att42_ = false;
  clear_has_att42();
}
inline bool Performance_complexPerformance_8::att42() const {
  return att42_;
}
inline void Performance_complexPerformance_8::set_att42(bool value) {
  set_has_att42();
  att42_ = value;
}

// required bool att43 = 43;
inline bool Performance_complexPerformance_8::has_att43() const {
  return (_has_bits_[1] & 0x00000400u) != 0;
}
inline void Performance_complexPerformance_8::set_has_att43() {
  _has_bits_[1] |= 0x00000400u;
}
inline void Performance_complexPerformance_8::clear_has_att43() {
  _has_bits_[1] &= ~0x00000400u;
}
inline void Performance_complexPerformance_8::clear_att43() {
  att43_ = false;
  clear_has_att43();
}
inline bool Performance_complexPerformance_8::att43() const {
  return att43_;
}
inline void Performance_complexPerformance_8::set_att43(bool value) {
  set_has_att43();
  att43_ = value;
}

// required bool att44 = 44;
inline bool Performance_complexPerformance_8::has_att44() const {
  return (_has_bits_[1] & 0x00000800u) != 0;
}
inline void Performance_complexPerformance_8::set_has_att44() {
  _has_bits_[1] |= 0x00000800u;
}
inline void Performance_complexPerformance_8::clear_has_att44() {
  _has_bits_[1] &= ~0x00000800u;
}
inline void Performance_complexPerformance_8::clear_att44() {
  att44_ = false;
  clear_has_att44();
}
inline bool Performance_complexPerformance_8::att44() const {
  return att44_;
}
inline void Performance_complexPerformance_8::set_att44(bool value) {
  set_has_att44();
  att44_ = value;
}

// required bool att45 = 45;
inline bool Performance_complexPerformance_8::has_att45() const {
  return (_has_bits_[1] & 0x00001000u) != 0;
}
inline void Performance_complexPerformance_8::set_has_att45() {
  _has_bits_[1] |= 0x00001000u;
}
inline void Performance_complexPerformance_8::clear_has_att45() {
  _has_bits_[1] &= ~0x00001000u;
}
inline void Performance_complexPerformance_8::clear_att45() {
  att45_ = false;
  clear_has_att45();
}
inline bool Performance_complexPerformance_8::att45() const {
  return att45_;
}
inline void Performance_complexPerformance_8::set_att45(bool value) {
  set_has_att45();
  att45_ = value;
}

// required bool att46 = 46;
inline bool Performance_complexPerformance_8::has_att46() const {
  return (_has_bits_[1] & 0x00002000u) != 0;
}
inline void Performance_complexPerformance_8::set_has_att46() {
  _has_bits_[1] |= 0x00002000u;
}
inline void Performance_complexPerformance_8::clear_has_att46() {
  _has_bits_[1] &= ~0x00002000u;
}
inline void Performance_complexPerformance_8::clear_att46() {
  att46_ = false;
  clear_has_att46();
}
inline bool Performance_complexPerformance_8::att46() const {
  return att46_;
}
inline void Performance_complexPerformance_8::set_att46(bool value) {
  set_has_att46();
  att46_ = value;
}

// required bool att47 = 47;
inline bool Performance_complexPerformance_8::has_att47() const {
  return (_has_bits_[1] & 0x00004000u) != 0;
}
inline void Performance_complexPerformance_8::set_has_att47() {
  _has_bits_[1] |= 0x00004000u;
}
inline void Performance_complexPerformance_8::clear_has_att47() {
  _has_bits_[1] &= ~0x00004000u;
}
inline void Performance_complexPerformance_8::clear_att47() {
  att47_ = false;
  clear_has_att47();
}
inline bool Performance_complexPerformance_8::att47() const {
  return att47_;
}
inline void Performance_complexPerformance_8::set_att47(bool value) {
  set_has_att47();
  att47_ = value;
}

// required bool att48 = 48;
inline bool Performance_complexPerformance_8::has_att48() const {
  return (_has_bits_[1] & 0x00008000u) != 0;
}
inline void Performance_complexPerformance_8::set_has_att48() {
  _has_bits_[1] |= 0x00008000u;
}
inline void Performance_complexPerformance_8::clear_has_att48() {
  _has_bits_[1] &= ~0x00008000u;
}
inline void Performance_complexPerformance_8::clear_att48() {
  att48_ = false;
  clear_has_att48();
}
inline bool Performance_complexPerformance_8::att48() const {
  return att48_;
}
inline void Performance_complexPerformance_8::set_att48(bool value) {
  set_has_att48();
  att48_ = value;
}

// -------------------------------------------------------------------

// Performance_complexPerformance_10

// required int32 att1 = 1;
inline bool Performance_complexPerformance_10::has_att1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Performance_complexPerformance_10::set_has_att1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Performance_complexPerformance_10::clear_has_att1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Performance_complexPerformance_10::clear_att1() {
  att1_ = 0;
  clear_has_att1();
}
inline ::google::protobuf::int32 Performance_complexPerformance_10::att1() const {
  return att1_;
}
inline void Performance_complexPerformance_10::set_att1(::google::protobuf::int32 value) {
  set_has_att1();
  att1_ = value;
}

// required int32 att2 = 2;
inline bool Performance_complexPerformance_10::has_att2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Performance_complexPerformance_10::set_has_att2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Performance_complexPerformance_10::clear_has_att2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Performance_complexPerformance_10::clear_att2() {
  att2_ = 0;
  clear_has_att2();
}
inline ::google::protobuf::int32 Performance_complexPerformance_10::att2() const {
  return att2_;
}
inline void Performance_complexPerformance_10::set_att2(::google::protobuf::int32 value) {
  set_has_att2();
  att2_ = value;
}

// required int32 att3 = 3;
inline bool Performance_complexPerformance_10::has_att3() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Performance_complexPerformance_10::set_has_att3() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Performance_complexPerformance_10::clear_has_att3() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Performance_complexPerformance_10::clear_att3() {
  att3_ = 0;
  clear_has_att3();
}
inline ::google::protobuf::int32 Performance_complexPerformance_10::att3() const {
  return att3_;
}
inline void Performance_complexPerformance_10::set_att3(::google::protobuf::int32 value) {
  set_has_att3();
  att3_ = value;
}

// required int32 att4 = 4;
inline bool Performance_complexPerformance_10::has_att4() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Performance_complexPerformance_10::set_has_att4() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Performance_complexPerformance_10::clear_has_att4() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Performance_complexPerformance_10::clear_att4() {
  att4_ = 0;
  clear_has_att4();
}
inline ::google::protobuf::int32 Performance_complexPerformance_10::att4() const {
  return att4_;
}
inline void Performance_complexPerformance_10::set_att4(::google::protobuf::int32 value) {
  set_has_att4();
  att4_ = value;
}

// required int32 att5 = 5;
inline bool Performance_complexPerformance_10::has_att5() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Performance_complexPerformance_10::set_has_att5() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Performance_complexPerformance_10::clear_has_att5() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Performance_complexPerformance_10::clear_att5() {
  att5_ = 0;
  clear_has_att5();
}
inline ::google::protobuf::int32 Performance_complexPerformance_10::att5() const {
  return att5_;
}
inline void Performance_complexPerformance_10::set_att5(::google::protobuf::int32 value) {
  set_has_att5();
  att5_ = value;
}

// required int32 att6 = 6;
inline bool Performance_complexPerformance_10::has_att6() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Performance_complexPerformance_10::set_has_att6() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Performance_complexPerformance_10::clear_has_att6() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Performance_complexPerformance_10::clear_att6() {
  att6_ = 0;
  clear_has_att6();
}
inline ::google::protobuf::int32 Performance_complexPerformance_10::att6() const {
  return att6_;
}
inline void Performance_complexPerformance_10::set_att6(::google::protobuf::int32 value) {
  set_has_att6();
  att6_ = value;
}

// required int32 att7 = 7;
inline bool Performance_complexPerformance_10::has_att7() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Performance_complexPerformance_10::set_has_att7() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Performance_complexPerformance_10::clear_has_att7() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Performance_complexPerformance_10::clear_att7() {
  att7_ = 0;
  clear_has_att7();
}
inline ::google::protobuf::int32 Performance_complexPerformance_10::att7() const {
  return att7_;
}
inline void Performance_complexPerformance_10::set_att7(::google::protobuf::int32 value) {
  set_has_att7();
  att7_ = value;
}

// required int32 att8 = 8;
inline bool Performance_complexPerformance_10::has_att8() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Performance_complexPerformance_10::set_has_att8() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Performance_complexPerformance_10::clear_has_att8() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Performance_complexPerformance_10::clear_att8() {
  att8_ = 0;
  clear_has_att8();
}
inline ::google::protobuf::int32 Performance_complexPerformance_10::att8() const {
  return att8_;
}
inline void Performance_complexPerformance_10::set_att8(::google::protobuf::int32 value) {
  set_has_att8();
  att8_ = value;
}

// required int32 att9 = 9;
inline bool Performance_complexPerformance_10::has_att9() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Performance_complexPerformance_10::set_has_att9() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Performance_complexPerformance_10::clear_has_att9() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Performance_complexPerformance_10::clear_att9() {
  att9_ = 0;
  clear_has_att9();
}
inline ::google::protobuf::int32 Performance_complexPerformance_10::att9() const {
  return att9_;
}
inline void Performance_complexPerformance_10::set_att9(::google::protobuf::int32 value) {
  set_has_att9();
  att9_ = value;
}

// required int32 att10 = 10;
inline bool Performance_complexPerformance_10::has_att10() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Performance_complexPerformance_10::set_has_att10() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Performance_complexPerformance_10::clear_has_att10() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Performance_complexPerformance_10::clear_att10() {
  att10_ = 0;
  clear_has_att10();
}
inline ::google::protobuf::int32 Performance_complexPerformance_10::att10() const {
  return att10_;
}
inline void Performance_complexPerformance_10::set_att10(::google::protobuf::int32 value) {
  set_has_att10();
  att10_ = value;
}

// required int64 att11 = 11;
inline bool Performance_complexPerformance_10::has_att11() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Performance_complexPerformance_10::set_has_att11() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Performance_complexPerformance_10::clear_has_att11() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Performance_complexPerformance_10::clear_att11() {
  att11_ = GOOGLE_LONGLONG(0);
  clear_has_att11();
}
inline ::google::protobuf::int64 Performance_complexPerformance_10::att11() const {
  return att11_;
}
inline void Performance_complexPerformance_10::set_att11(::google::protobuf::int64 value) {
  set_has_att11();
  att11_ = value;
}

// required int64 att12 = 12;
inline bool Performance_complexPerformance_10::has_att12() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Performance_complexPerformance_10::set_has_att12() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Performance_complexPerformance_10::clear_has_att12() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Performance_complexPerformance_10::clear_att12() {
  att12_ = GOOGLE_LONGLONG(0);
  clear_has_att12();
}
inline ::google::protobuf::int64 Performance_complexPerformance_10::att12() const {
  return att12_;
}
inline void Performance_complexPerformance_10::set_att12(::google::protobuf::int64 value) {
  set_has_att12();
  att12_ = value;
}

// required int64 att13 = 13;
inline bool Performance_complexPerformance_10::has_att13() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Performance_complexPerformance_10::set_has_att13() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Performance_complexPerformance_10::clear_has_att13() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Performance_complexPerformance_10::clear_att13() {
  att13_ = GOOGLE_LONGLONG(0);
  clear_has_att13();
}
inline ::google::protobuf::int64 Performance_complexPerformance_10::att13() const {
  return att13_;
}
inline void Performance_complexPerformance_10::set_att13(::google::protobuf::int64 value) {
  set_has_att13();
  att13_ = value;
}

// required int64 att14 = 14;
inline bool Performance_complexPerformance_10::has_att14() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void Performance_complexPerformance_10::set_has_att14() {
  _has_bits_[0] |= 0x00002000u;
}
inline void Performance_complexPerformance_10::clear_has_att14() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void Performance_complexPerformance_10::clear_att14() {
  att14_ = GOOGLE_LONGLONG(0);
  clear_has_att14();
}
inline ::google::protobuf::int64 Performance_complexPerformance_10::att14() const {
  return att14_;
}
inline void Performance_complexPerformance_10::set_att14(::google::protobuf::int64 value) {
  set_has_att14();
  att14_ = value;
}

// required int64 att15 = 15;
inline bool Performance_complexPerformance_10::has_att15() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void Performance_complexPerformance_10::set_has_att15() {
  _has_bits_[0] |= 0x00004000u;
}
inline void Performance_complexPerformance_10::clear_has_att15() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void Performance_complexPerformance_10::clear_att15() {
  att15_ = GOOGLE_LONGLONG(0);
  clear_has_att15();
}
inline ::google::protobuf::int64 Performance_complexPerformance_10::att15() const {
  return att15_;
}
inline void Performance_complexPerformance_10::set_att15(::google::protobuf::int64 value) {
  set_has_att15();
  att15_ = value;
}

// required int64 att16 = 16;
inline bool Performance_complexPerformance_10::has_att16() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void Performance_complexPerformance_10::set_has_att16() {
  _has_bits_[0] |= 0x00008000u;
}
inline void Performance_complexPerformance_10::clear_has_att16() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void Performance_complexPerformance_10::clear_att16() {
  att16_ = GOOGLE_LONGLONG(0);
  clear_has_att16();
}
inline ::google::protobuf::int64 Performance_complexPerformance_10::att16() const {
  return att16_;
}
inline void Performance_complexPerformance_10::set_att16(::google::protobuf::int64 value) {
  set_has_att16();
  att16_ = value;
}

// required int64 att17 = 17;
inline bool Performance_complexPerformance_10::has_att17() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void Performance_complexPerformance_10::set_has_att17() {
  _has_bits_[0] |= 0x00010000u;
}
inline void Performance_complexPerformance_10::clear_has_att17() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void Performance_complexPerformance_10::clear_att17() {
  att17_ = GOOGLE_LONGLONG(0);
  clear_has_att17();
}
inline ::google::protobuf::int64 Performance_complexPerformance_10::att17() const {
  return att17_;
}
inline void Performance_complexPerformance_10::set_att17(::google::protobuf::int64 value) {
  set_has_att17();
  att17_ = value;
}

// required int64 att18 = 18;
inline bool Performance_complexPerformance_10::has_att18() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void Performance_complexPerformance_10::set_has_att18() {
  _has_bits_[0] |= 0x00020000u;
}
inline void Performance_complexPerformance_10::clear_has_att18() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void Performance_complexPerformance_10::clear_att18() {
  att18_ = GOOGLE_LONGLONG(0);
  clear_has_att18();
}
inline ::google::protobuf::int64 Performance_complexPerformance_10::att18() const {
  return att18_;
}
inline void Performance_complexPerformance_10::set_att18(::google::protobuf::int64 value) {
  set_has_att18();
  att18_ = value;
}

// required int64 att19 = 19;
inline bool Performance_complexPerformance_10::has_att19() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void Performance_complexPerformance_10::set_has_att19() {
  _has_bits_[0] |= 0x00040000u;
}
inline void Performance_complexPerformance_10::clear_has_att19() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void Performance_complexPerformance_10::clear_att19() {
  att19_ = GOOGLE_LONGLONG(0);
  clear_has_att19();
}
inline ::google::protobuf::int64 Performance_complexPerformance_10::att19() const {
  return att19_;
}
inline void Performance_complexPerformance_10::set_att19(::google::protobuf::int64 value) {
  set_has_att19();
  att19_ = value;
}

// required int64 att20 = 20;
inline bool Performance_complexPerformance_10::has_att20() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void Performance_complexPerformance_10::set_has_att20() {
  _has_bits_[0] |= 0x00080000u;
}
inline void Performance_complexPerformance_10::clear_has_att20() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void Performance_complexPerformance_10::clear_att20() {
  att20_ = GOOGLE_LONGLONG(0);
  clear_has_att20();
}
inline ::google::protobuf::int64 Performance_complexPerformance_10::att20() const {
  return att20_;
}
inline void Performance_complexPerformance_10::set_att20(::google::protobuf::int64 value) {
  set_has_att20();
  att20_ = value;
}

// required string att21 = 21;
inline bool Performance_complexPerformance_10::has_att21() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void Performance_complexPerformance_10::set_has_att21() {
  _has_bits_[0] |= 0x00100000u;
}
inline void Performance_complexPerformance_10::clear_has_att21() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void Performance_complexPerformance_10::clear_att21() {
  if (att21_ != &::google::protobuf::internal::kEmptyString) {
    att21_->clear();
  }
  clear_has_att21();
}
inline const ::std::string& Performance_complexPerformance_10::att21() const {
  return *att21_;
}
inline void Performance_complexPerformance_10::set_att21(const ::std::string& value) {
  set_has_att21();
  if (att21_ == &::google::protobuf::internal::kEmptyString) {
    att21_ = new ::std::string;
  }
  att21_->assign(value);
}
inline void Performance_complexPerformance_10::set_att21(const char* value) {
  set_has_att21();
  if (att21_ == &::google::protobuf::internal::kEmptyString) {
    att21_ = new ::std::string;
  }
  att21_->assign(value);
}
inline void Performance_complexPerformance_10::set_att21(const char* value, size_t size) {
  set_has_att21();
  if (att21_ == &::google::protobuf::internal::kEmptyString) {
    att21_ = new ::std::string;
  }
  att21_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Performance_complexPerformance_10::mutable_att21() {
  set_has_att21();
  if (att21_ == &::google::protobuf::internal::kEmptyString) {
    att21_ = new ::std::string;
  }
  return att21_;
}
inline ::std::string* Performance_complexPerformance_10::release_att21() {
  clear_has_att21();
  if (att21_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = att21_;
    att21_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Performance_complexPerformance_10::set_allocated_att21(::std::string* att21) {
  if (att21_ != &::google::protobuf::internal::kEmptyString) {
    delete att21_;
  }
  if (att21) {
    set_has_att21();
    att21_ = att21;
  } else {
    clear_has_att21();
    att21_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string att22 = 22;
inline bool Performance_complexPerformance_10::has_att22() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void Performance_complexPerformance_10::set_has_att22() {
  _has_bits_[0] |= 0x00200000u;
}
inline void Performance_complexPerformance_10::clear_has_att22() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void Performance_complexPerformance_10::clear_att22() {
  if (att22_ != &::google::protobuf::internal::kEmptyString) {
    att22_->clear();
  }
  clear_has_att22();
}
inline const ::std::string& Performance_complexPerformance_10::att22() const {
  return *att22_;
}
inline void Performance_complexPerformance_10::set_att22(const ::std::string& value) {
  set_has_att22();
  if (att22_ == &::google::protobuf::internal::kEmptyString) {
    att22_ = new ::std::string;
  }
  att22_->assign(value);
}
inline void Performance_complexPerformance_10::set_att22(const char* value) {
  set_has_att22();
  if (att22_ == &::google::protobuf::internal::kEmptyString) {
    att22_ = new ::std::string;
  }
  att22_->assign(value);
}
inline void Performance_complexPerformance_10::set_att22(const char* value, size_t size) {
  set_has_att22();
  if (att22_ == &::google::protobuf::internal::kEmptyString) {
    att22_ = new ::std::string;
  }
  att22_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Performance_complexPerformance_10::mutable_att22() {
  set_has_att22();
  if (att22_ == &::google::protobuf::internal::kEmptyString) {
    att22_ = new ::std::string;
  }
  return att22_;
}
inline ::std::string* Performance_complexPerformance_10::release_att22() {
  clear_has_att22();
  if (att22_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = att22_;
    att22_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Performance_complexPerformance_10::set_allocated_att22(::std::string* att22) {
  if (att22_ != &::google::protobuf::internal::kEmptyString) {
    delete att22_;
  }
  if (att22) {
    set_has_att22();
    att22_ = att22;
  } else {
    clear_has_att22();
    att22_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string att23 = 23;
inline bool Performance_complexPerformance_10::has_att23() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void Performance_complexPerformance_10::set_has_att23() {
  _has_bits_[0] |= 0x00400000u;
}
inline void Performance_complexPerformance_10::clear_has_att23() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void Performance_complexPerformance_10::clear_att23() {
  if (att23_ != &::google::protobuf::internal::kEmptyString) {
    att23_->clear();
  }
  clear_has_att23();
}
inline const ::std::string& Performance_complexPerformance_10::att23() const {
  return *att23_;
}
inline void Performance_complexPerformance_10::set_att23(const ::std::string& value) {
  set_has_att23();
  if (att23_ == &::google::protobuf::internal::kEmptyString) {
    att23_ = new ::std::string;
  }
  att23_->assign(value);
}
inline void Performance_complexPerformance_10::set_att23(const char* value) {
  set_has_att23();
  if (att23_ == &::google::protobuf::internal::kEmptyString) {
    att23_ = new ::std::string;
  }
  att23_->assign(value);
}
inline void Performance_complexPerformance_10::set_att23(const char* value, size_t size) {
  set_has_att23();
  if (att23_ == &::google::protobuf::internal::kEmptyString) {
    att23_ = new ::std::string;
  }
  att23_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Performance_complexPerformance_10::mutable_att23() {
  set_has_att23();
  if (att23_ == &::google::protobuf::internal::kEmptyString) {
    att23_ = new ::std::string;
  }
  return att23_;
}
inline ::std::string* Performance_complexPerformance_10::release_att23() {
  clear_has_att23();
  if (att23_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = att23_;
    att23_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Performance_complexPerformance_10::set_allocated_att23(::std::string* att23) {
  if (att23_ != &::google::protobuf::internal::kEmptyString) {
    delete att23_;
  }
  if (att23) {
    set_has_att23();
    att23_ = att23;
  } else {
    clear_has_att23();
    att23_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string att24 = 24;
inline bool Performance_complexPerformance_10::has_att24() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void Performance_complexPerformance_10::set_has_att24() {
  _has_bits_[0] |= 0x00800000u;
}
inline void Performance_complexPerformance_10::clear_has_att24() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void Performance_complexPerformance_10::clear_att24() {
  if (att24_ != &::google::protobuf::internal::kEmptyString) {
    att24_->clear();
  }
  clear_has_att24();
}
inline const ::std::string& Performance_complexPerformance_10::att24() const {
  return *att24_;
}
inline void Performance_complexPerformance_10::set_att24(const ::std::string& value) {
  set_has_att24();
  if (att24_ == &::google::protobuf::internal::kEmptyString) {
    att24_ = new ::std::string;
  }
  att24_->assign(value);
}
inline void Performance_complexPerformance_10::set_att24(const char* value) {
  set_has_att24();
  if (att24_ == &::google::protobuf::internal::kEmptyString) {
    att24_ = new ::std::string;
  }
  att24_->assign(value);
}
inline void Performance_complexPerformance_10::set_att24(const char* value, size_t size) {
  set_has_att24();
  if (att24_ == &::google::protobuf::internal::kEmptyString) {
    att24_ = new ::std::string;
  }
  att24_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Performance_complexPerformance_10::mutable_att24() {
  set_has_att24();
  if (att24_ == &::google::protobuf::internal::kEmptyString) {
    att24_ = new ::std::string;
  }
  return att24_;
}
inline ::std::string* Performance_complexPerformance_10::release_att24() {
  clear_has_att24();
  if (att24_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = att24_;
    att24_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Performance_complexPerformance_10::set_allocated_att24(::std::string* att24) {
  if (att24_ != &::google::protobuf::internal::kEmptyString) {
    delete att24_;
  }
  if (att24) {
    set_has_att24();
    att24_ = att24;
  } else {
    clear_has_att24();
    att24_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string att25 = 25;
inline bool Performance_complexPerformance_10::has_att25() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void Performance_complexPerformance_10::set_has_att25() {
  _has_bits_[0] |= 0x01000000u;
}
inline void Performance_complexPerformance_10::clear_has_att25() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void Performance_complexPerformance_10::clear_att25() {
  if (att25_ != &::google::protobuf::internal::kEmptyString) {
    att25_->clear();
  }
  clear_has_att25();
}
inline const ::std::string& Performance_complexPerformance_10::att25() const {
  return *att25_;
}
inline void Performance_complexPerformance_10::set_att25(const ::std::string& value) {
  set_has_att25();
  if (att25_ == &::google::protobuf::internal::kEmptyString) {
    att25_ = new ::std::string;
  }
  att25_->assign(value);
}
inline void Performance_complexPerformance_10::set_att25(const char* value) {
  set_has_att25();
  if (att25_ == &::google::protobuf::internal::kEmptyString) {
    att25_ = new ::std::string;
  }
  att25_->assign(value);
}
inline void Performance_complexPerformance_10::set_att25(const char* value, size_t size) {
  set_has_att25();
  if (att25_ == &::google::protobuf::internal::kEmptyString) {
    att25_ = new ::std::string;
  }
  att25_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Performance_complexPerformance_10::mutable_att25() {
  set_has_att25();
  if (att25_ == &::google::protobuf::internal::kEmptyString) {
    att25_ = new ::std::string;
  }
  return att25_;
}
inline ::std::string* Performance_complexPerformance_10::release_att25() {
  clear_has_att25();
  if (att25_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = att25_;
    att25_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Performance_complexPerformance_10::set_allocated_att25(::std::string* att25) {
  if (att25_ != &::google::protobuf::internal::kEmptyString) {
    delete att25_;
  }
  if (att25) {
    set_has_att25();
    att25_ = att25;
  } else {
    clear_has_att25();
    att25_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string att26 = 26;
inline bool Performance_complexPerformance_10::has_att26() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void Performance_complexPerformance_10::set_has_att26() {
  _has_bits_[0] |= 0x02000000u;
}
inline void Performance_complexPerformance_10::clear_has_att26() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void Performance_complexPerformance_10::clear_att26() {
  if (att26_ != &::google::protobuf::internal::kEmptyString) {
    att26_->clear();
  }
  clear_has_att26();
}
inline const ::std::string& Performance_complexPerformance_10::att26() const {
  return *att26_;
}
inline void Performance_complexPerformance_10::set_att26(const ::std::string& value) {
  set_has_att26();
  if (att26_ == &::google::protobuf::internal::kEmptyString) {
    att26_ = new ::std::string;
  }
  att26_->assign(value);
}
inline void Performance_complexPerformance_10::set_att26(const char* value) {
  set_has_att26();
  if (att26_ == &::google::protobuf::internal::kEmptyString) {
    att26_ = new ::std::string;
  }
  att26_->assign(value);
}
inline void Performance_complexPerformance_10::set_att26(const char* value, size_t size) {
  set_has_att26();
  if (att26_ == &::google::protobuf::internal::kEmptyString) {
    att26_ = new ::std::string;
  }
  att26_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Performance_complexPerformance_10::mutable_att26() {
  set_has_att26();
  if (att26_ == &::google::protobuf::internal::kEmptyString) {
    att26_ = new ::std::string;
  }
  return att26_;
}
inline ::std::string* Performance_complexPerformance_10::release_att26() {
  clear_has_att26();
  if (att26_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = att26_;
    att26_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Performance_complexPerformance_10::set_allocated_att26(::std::string* att26) {
  if (att26_ != &::google::protobuf::internal::kEmptyString) {
    delete att26_;
  }
  if (att26) {
    set_has_att26();
    att26_ = att26;
  } else {
    clear_has_att26();
    att26_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string att27 = 27;
inline bool Performance_complexPerformance_10::has_att27() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void Performance_complexPerformance_10::set_has_att27() {
  _has_bits_[0] |= 0x04000000u;
}
inline void Performance_complexPerformance_10::clear_has_att27() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void Performance_complexPerformance_10::clear_att27() {
  if (att27_ != &::google::protobuf::internal::kEmptyString) {
    att27_->clear();
  }
  clear_has_att27();
}
inline const ::std::string& Performance_complexPerformance_10::att27() const {
  return *att27_;
}
inline void Performance_complexPerformance_10::set_att27(const ::std::string& value) {
  set_has_att27();
  if (att27_ == &::google::protobuf::internal::kEmptyString) {
    att27_ = new ::std::string;
  }
  att27_->assign(value);
}
inline void Performance_complexPerformance_10::set_att27(const char* value) {
  set_has_att27();
  if (att27_ == &::google::protobuf::internal::kEmptyString) {
    att27_ = new ::std::string;
  }
  att27_->assign(value);
}
inline void Performance_complexPerformance_10::set_att27(const char* value, size_t size) {
  set_has_att27();
  if (att27_ == &::google::protobuf::internal::kEmptyString) {
    att27_ = new ::std::string;
  }
  att27_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Performance_complexPerformance_10::mutable_att27() {
  set_has_att27();
  if (att27_ == &::google::protobuf::internal::kEmptyString) {
    att27_ = new ::std::string;
  }
  return att27_;
}
inline ::std::string* Performance_complexPerformance_10::release_att27() {
  clear_has_att27();
  if (att27_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = att27_;
    att27_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Performance_complexPerformance_10::set_allocated_att27(::std::string* att27) {
  if (att27_ != &::google::protobuf::internal::kEmptyString) {
    delete att27_;
  }
  if (att27) {
    set_has_att27();
    att27_ = att27;
  } else {
    clear_has_att27();
    att27_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string att28 = 28;
inline bool Performance_complexPerformance_10::has_att28() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void Performance_complexPerformance_10::set_has_att28() {
  _has_bits_[0] |= 0x08000000u;
}
inline void Performance_complexPerformance_10::clear_has_att28() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void Performance_complexPerformance_10::clear_att28() {
  if (att28_ != &::google::protobuf::internal::kEmptyString) {
    att28_->clear();
  }
  clear_has_att28();
}
inline const ::std::string& Performance_complexPerformance_10::att28() const {
  return *att28_;
}
inline void Performance_complexPerformance_10::set_att28(const ::std::string& value) {
  set_has_att28();
  if (att28_ == &::google::protobuf::internal::kEmptyString) {
    att28_ = new ::std::string;
  }
  att28_->assign(value);
}
inline void Performance_complexPerformance_10::set_att28(const char* value) {
  set_has_att28();
  if (att28_ == &::google::protobuf::internal::kEmptyString) {
    att28_ = new ::std::string;
  }
  att28_->assign(value);
}
inline void Performance_complexPerformance_10::set_att28(const char* value, size_t size) {
  set_has_att28();
  if (att28_ == &::google::protobuf::internal::kEmptyString) {
    att28_ = new ::std::string;
  }
  att28_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Performance_complexPerformance_10::mutable_att28() {
  set_has_att28();
  if (att28_ == &::google::protobuf::internal::kEmptyString) {
    att28_ = new ::std::string;
  }
  return att28_;
}
inline ::std::string* Performance_complexPerformance_10::release_att28() {
  clear_has_att28();
  if (att28_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = att28_;
    att28_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Performance_complexPerformance_10::set_allocated_att28(::std::string* att28) {
  if (att28_ != &::google::protobuf::internal::kEmptyString) {
    delete att28_;
  }
  if (att28) {
    set_has_att28();
    att28_ = att28;
  } else {
    clear_has_att28();
    att28_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string att29 = 29;
inline bool Performance_complexPerformance_10::has_att29() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void Performance_complexPerformance_10::set_has_att29() {
  _has_bits_[0] |= 0x10000000u;
}
inline void Performance_complexPerformance_10::clear_has_att29() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void Performance_complexPerformance_10::clear_att29() {
  if (att29_ != &::google::protobuf::internal::kEmptyString) {
    att29_->clear();
  }
  clear_has_att29();
}
inline const ::std::string& Performance_complexPerformance_10::att29() const {
  return *att29_;
}
inline void Performance_complexPerformance_10::set_att29(const ::std::string& value) {
  set_has_att29();
  if (att29_ == &::google::protobuf::internal::kEmptyString) {
    att29_ = new ::std::string;
  }
  att29_->assign(value);
}
inline void Performance_complexPerformance_10::set_att29(const char* value) {
  set_has_att29();
  if (att29_ == &::google::protobuf::internal::kEmptyString) {
    att29_ = new ::std::string;
  }
  att29_->assign(value);
}
inline void Performance_complexPerformance_10::set_att29(const char* value, size_t size) {
  set_has_att29();
  if (att29_ == &::google::protobuf::internal::kEmptyString) {
    att29_ = new ::std::string;
  }
  att29_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Performance_complexPerformance_10::mutable_att29() {
  set_has_att29();
  if (att29_ == &::google::protobuf::internal::kEmptyString) {
    att29_ = new ::std::string;
  }
  return att29_;
}
inline ::std::string* Performance_complexPerformance_10::release_att29() {
  clear_has_att29();
  if (att29_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = att29_;
    att29_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Performance_complexPerformance_10::set_allocated_att29(::std::string* att29) {
  if (att29_ != &::google::protobuf::internal::kEmptyString) {
    delete att29_;
  }
  if (att29) {
    set_has_att29();
    att29_ = att29;
  } else {
    clear_has_att29();
    att29_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string att30 = 30;
inline bool Performance_complexPerformance_10::has_att30() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void Performance_complexPerformance_10::set_has_att30() {
  _has_bits_[0] |= 0x20000000u;
}
inline void Performance_complexPerformance_10::clear_has_att30() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void Performance_complexPerformance_10::clear_att30() {
  if (att30_ != &::google::protobuf::internal::kEmptyString) {
    att30_->clear();
  }
  clear_has_att30();
}
inline const ::std::string& Performance_complexPerformance_10::att30() const {
  return *att30_;
}
inline void Performance_complexPerformance_10::set_att30(const ::std::string& value) {
  set_has_att30();
  if (att30_ == &::google::protobuf::internal::kEmptyString) {
    att30_ = new ::std::string;
  }
  att30_->assign(value);
}
inline void Performance_complexPerformance_10::set_att30(const char* value) {
  set_has_att30();
  if (att30_ == &::google::protobuf::internal::kEmptyString) {
    att30_ = new ::std::string;
  }
  att30_->assign(value);
}
inline void Performance_complexPerformance_10::set_att30(const char* value, size_t size) {
  set_has_att30();
  if (att30_ == &::google::protobuf::internal::kEmptyString) {
    att30_ = new ::std::string;
  }
  att30_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Performance_complexPerformance_10::mutable_att30() {
  set_has_att30();
  if (att30_ == &::google::protobuf::internal::kEmptyString) {
    att30_ = new ::std::string;
  }
  return att30_;
}
inline ::std::string* Performance_complexPerformance_10::release_att30() {
  clear_has_att30();
  if (att30_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = att30_;
    att30_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Performance_complexPerformance_10::set_allocated_att30(::std::string* att30) {
  if (att30_ != &::google::protobuf::internal::kEmptyString) {
    delete att30_;
  }
  if (att30) {
    set_has_att30();
    att30_ = att30;
  } else {
    clear_has_att30();
    att30_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required float att31 = 31;
inline bool Performance_complexPerformance_10::has_att31() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void Performance_complexPerformance_10::set_has_att31() {
  _has_bits_[0] |= 0x40000000u;
}
inline void Performance_complexPerformance_10::clear_has_att31() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void Performance_complexPerformance_10::clear_att31() {
  att31_ = 0;
  clear_has_att31();
}
inline float Performance_complexPerformance_10::att31() const {
  return att31_;
}
inline void Performance_complexPerformance_10::set_att31(float value) {
  set_has_att31();
  att31_ = value;
}

// required float att32 = 32;
inline bool Performance_complexPerformance_10::has_att32() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void Performance_complexPerformance_10::set_has_att32() {
  _has_bits_[0] |= 0x80000000u;
}
inline void Performance_complexPerformance_10::clear_has_att32() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void Performance_complexPerformance_10::clear_att32() {
  att32_ = 0;
  clear_has_att32();
}
inline float Performance_complexPerformance_10::att32() const {
  return att32_;
}
inline void Performance_complexPerformance_10::set_att32(float value) {
  set_has_att32();
  att32_ = value;
}

// required float att33 = 33;
inline bool Performance_complexPerformance_10::has_att33() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void Performance_complexPerformance_10::set_has_att33() {
  _has_bits_[1] |= 0x00000001u;
}
inline void Performance_complexPerformance_10::clear_has_att33() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void Performance_complexPerformance_10::clear_att33() {
  att33_ = 0;
  clear_has_att33();
}
inline float Performance_complexPerformance_10::att33() const {
  return att33_;
}
inline void Performance_complexPerformance_10::set_att33(float value) {
  set_has_att33();
  att33_ = value;
}

// required float att34 = 34;
inline bool Performance_complexPerformance_10::has_att34() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void Performance_complexPerformance_10::set_has_att34() {
  _has_bits_[1] |= 0x00000002u;
}
inline void Performance_complexPerformance_10::clear_has_att34() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void Performance_complexPerformance_10::clear_att34() {
  att34_ = 0;
  clear_has_att34();
}
inline float Performance_complexPerformance_10::att34() const {
  return att34_;
}
inline void Performance_complexPerformance_10::set_att34(float value) {
  set_has_att34();
  att34_ = value;
}

// required float att35 = 35;
inline bool Performance_complexPerformance_10::has_att35() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void Performance_complexPerformance_10::set_has_att35() {
  _has_bits_[1] |= 0x00000004u;
}
inline void Performance_complexPerformance_10::clear_has_att35() {
  _has_bits_[1] &= ~0x00000004u;
}
inline void Performance_complexPerformance_10::clear_att35() {
  att35_ = 0;
  clear_has_att35();
}
inline float Performance_complexPerformance_10::att35() const {
  return att35_;
}
inline void Performance_complexPerformance_10::set_att35(float value) {
  set_has_att35();
  att35_ = value;
}

// required float att36 = 36;
inline bool Performance_complexPerformance_10::has_att36() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void Performance_complexPerformance_10::set_has_att36() {
  _has_bits_[1] |= 0x00000008u;
}
inline void Performance_complexPerformance_10::clear_has_att36() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void Performance_complexPerformance_10::clear_att36() {
  att36_ = 0;
  clear_has_att36();
}
inline float Performance_complexPerformance_10::att36() const {
  return att36_;
}
inline void Performance_complexPerformance_10::set_att36(float value) {
  set_has_att36();
  att36_ = value;
}

// required float att37 = 37;
inline bool Performance_complexPerformance_10::has_att37() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void Performance_complexPerformance_10::set_has_att37() {
  _has_bits_[1] |= 0x00000010u;
}
inline void Performance_complexPerformance_10::clear_has_att37() {
  _has_bits_[1] &= ~0x00000010u;
}
inline void Performance_complexPerformance_10::clear_att37() {
  att37_ = 0;
  clear_has_att37();
}
inline float Performance_complexPerformance_10::att37() const {
  return att37_;
}
inline void Performance_complexPerformance_10::set_att37(float value) {
  set_has_att37();
  att37_ = value;
}

// required float att38 = 38;
inline bool Performance_complexPerformance_10::has_att38() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
inline void Performance_complexPerformance_10::set_has_att38() {
  _has_bits_[1] |= 0x00000020u;
}
inline void Performance_complexPerformance_10::clear_has_att38() {
  _has_bits_[1] &= ~0x00000020u;
}
inline void Performance_complexPerformance_10::clear_att38() {
  att38_ = 0;
  clear_has_att38();
}
inline float Performance_complexPerformance_10::att38() const {
  return att38_;
}
inline void Performance_complexPerformance_10::set_att38(float value) {
  set_has_att38();
  att38_ = value;
}

// required float att39 = 39;
inline bool Performance_complexPerformance_10::has_att39() const {
  return (_has_bits_[1] & 0x00000040u) != 0;
}
inline void Performance_complexPerformance_10::set_has_att39() {
  _has_bits_[1] |= 0x00000040u;
}
inline void Performance_complexPerformance_10::clear_has_att39() {
  _has_bits_[1] &= ~0x00000040u;
}
inline void Performance_complexPerformance_10::clear_att39() {
  att39_ = 0;
  clear_has_att39();
}
inline float Performance_complexPerformance_10::att39() const {
  return att39_;
}
inline void Performance_complexPerformance_10::set_att39(float value) {
  set_has_att39();
  att39_ = value;
}

// required float att40 = 40;
inline bool Performance_complexPerformance_10::has_att40() const {
  return (_has_bits_[1] & 0x00000080u) != 0;
}
inline void Performance_complexPerformance_10::set_has_att40() {
  _has_bits_[1] |= 0x00000080u;
}
inline void Performance_complexPerformance_10::clear_has_att40() {
  _has_bits_[1] &= ~0x00000080u;
}
inline void Performance_complexPerformance_10::clear_att40() {
  att40_ = 0;
  clear_has_att40();
}
inline float Performance_complexPerformance_10::att40() const {
  return att40_;
}
inline void Performance_complexPerformance_10::set_att40(float value) {
  set_has_att40();
  att40_ = value;
}

// required double att41 = 41;
inline bool Performance_complexPerformance_10::has_att41() const {
  return (_has_bits_[1] & 0x00000100u) != 0;
}
inline void Performance_complexPerformance_10::set_has_att41() {
  _has_bits_[1] |= 0x00000100u;
}
inline void Performance_complexPerformance_10::clear_has_att41() {
  _has_bits_[1] &= ~0x00000100u;
}
inline void Performance_complexPerformance_10::clear_att41() {
  att41_ = 0;
  clear_has_att41();
}
inline double Performance_complexPerformance_10::att41() const {
  return att41_;
}
inline void Performance_complexPerformance_10::set_att41(double value) {
  set_has_att41();
  att41_ = value;
}

// required double att42 = 42;
inline bool Performance_complexPerformance_10::has_att42() const {
  return (_has_bits_[1] & 0x00000200u) != 0;
}
inline void Performance_complexPerformance_10::set_has_att42() {
  _has_bits_[1] |= 0x00000200u;
}
inline void Performance_complexPerformance_10::clear_has_att42() {
  _has_bits_[1] &= ~0x00000200u;
}
inline void Performance_complexPerformance_10::clear_att42() {
  att42_ = 0;
  clear_has_att42();
}
inline double Performance_complexPerformance_10::att42() const {
  return att42_;
}
inline void Performance_complexPerformance_10::set_att42(double value) {
  set_has_att42();
  att42_ = value;
}

// required double att43 = 43;
inline bool Performance_complexPerformance_10::has_att43() const {
  return (_has_bits_[1] & 0x00000400u) != 0;
}
inline void Performance_complexPerformance_10::set_has_att43() {
  _has_bits_[1] |= 0x00000400u;
}
inline void Performance_complexPerformance_10::clear_has_att43() {
  _has_bits_[1] &= ~0x00000400u;
}
inline void Performance_complexPerformance_10::clear_att43() {
  att43_ = 0;
  clear_has_att43();
}
inline double Performance_complexPerformance_10::att43() const {
  return att43_;
}
inline void Performance_complexPerformance_10::set_att43(double value) {
  set_has_att43();
  att43_ = value;
}

// required double att44 = 44;
inline bool Performance_complexPerformance_10::has_att44() const {
  return (_has_bits_[1] & 0x00000800u) != 0;
}
inline void Performance_complexPerformance_10::set_has_att44() {
  _has_bits_[1] |= 0x00000800u;
}
inline void Performance_complexPerformance_10::clear_has_att44() {
  _has_bits_[1] &= ~0x00000800u;
}
inline void Performance_complexPerformance_10::clear_att44() {
  att44_ = 0;
  clear_has_att44();
}
inline double Performance_complexPerformance_10::att44() const {
  return att44_;
}
inline void Performance_complexPerformance_10::set_att44(double value) {
  set_has_att44();
  att44_ = value;
}

// required double att45 = 45;
inline bool Performance_complexPerformance_10::has_att45() const {
  return (_has_bits_[1] & 0x00001000u) != 0;
}
inline void Performance_complexPerformance_10::set_has_att45() {
  _has_bits_[1] |= 0x00001000u;
}
inline void Performance_complexPerformance_10::clear_has_att45() {
  _has_bits_[1] &= ~0x00001000u;
}
inline void Performance_complexPerformance_10::clear_att45() {
  att45_ = 0;
  clear_has_att45();
}
inline double Performance_complexPerformance_10::att45() const {
  return att45_;
}
inline void Performance_complexPerformance_10::set_att45(double value) {
  set_has_att45();
  att45_ = value;
}

// required double att46 = 46;
inline bool Performance_complexPerformance_10::has_att46() const {
  return (_has_bits_[1] & 0x00002000u) != 0;
}
inline void Performance_complexPerformance_10::set_has_att46() {
  _has_bits_[1] |= 0x00002000u;
}
inline void Performance_complexPerformance_10::clear_has_att46() {
  _has_bits_[1] &= ~0x00002000u;
}
inline void Performance_complexPerformance_10::clear_att46() {
  att46_ = 0;
  clear_has_att46();
}
inline double Performance_complexPerformance_10::att46() const {
  return att46_;
}
inline void Performance_complexPerformance_10::set_att46(double value) {
  set_has_att46();
  att46_ = value;
}

// required double att47 = 47;
inline bool Performance_complexPerformance_10::has_att47() const {
  return (_has_bits_[1] & 0x00004000u) != 0;
}
inline void Performance_complexPerformance_10::set_has_att47() {
  _has_bits_[1] |= 0x00004000u;
}
inline void Performance_complexPerformance_10::clear_has_att47() {
  _has_bits_[1] &= ~0x00004000u;
}
inline void Performance_complexPerformance_10::clear_att47() {
  att47_ = 0;
  clear_has_att47();
}
inline double Performance_complexPerformance_10::att47() const {
  return att47_;
}
inline void Performance_complexPerformance_10::set_att47(double value) {
  set_has_att47();
  att47_ = value;
}

// required double att48 = 48;
inline bool Performance_complexPerformance_10::has_att48() const {
  return (_has_bits_[1] & 0x00008000u) != 0;
}
inline void Performance_complexPerformance_10::set_has_att48() {
  _has_bits_[1] |= 0x00008000u;
}
inline void Performance_complexPerformance_10::clear_has_att48() {
  _has_bits_[1] &= ~0x00008000u;
}
inline void Performance_complexPerformance_10::clear_att48() {
  att48_ = 0;
  clear_has_att48();
}
inline double Performance_complexPerformance_10::att48() const {
  return att48_;
}
inline void Performance_complexPerformance_10::set_att48(double value) {
  set_has_att48();
  att48_ = value;
}

// required double att49 = 49;
inline bool Performance_complexPerformance_10::has_att49() const {
  return (_has_bits_[1] & 0x00010000u) != 0;
}
inline void Performance_complexPerformance_10::set_has_att49() {
  _has_bits_[1] |= 0x00010000u;
}
inline void Performance_complexPerformance_10::clear_has_att49() {
  _has_bits_[1] &= ~0x00010000u;
}
inline void Performance_complexPerformance_10::clear_att49() {
  att49_ = 0;
  clear_has_att49();
}
inline double Performance_complexPerformance_10::att49() const {
  return att49_;
}
inline void Performance_complexPerformance_10::set_att49(double value) {
  set_has_att49();
  att49_ = value;
}

// required double att50 = 50;
inline bool Performance_complexPerformance_10::has_att50() const {
  return (_has_bits_[1] & 0x00020000u) != 0;
}
inline void Performance_complexPerformance_10::set_has_att50() {
  _has_bits_[1] |= 0x00020000u;
}
inline void Performance_complexPerformance_10::clear_has_att50() {
  _has_bits_[1] &= ~0x00020000u;
}
inline void Performance_complexPerformance_10::clear_att50() {
  att50_ = 0;
  clear_has_att50();
}
inline double Performance_complexPerformance_10::att50() const {
  return att50_;
}
inline void Performance_complexPerformance_10::set_att50(double value) {
  set_has_att50();
  att50_ = value;
}

// required bool att51 = 51;
inline bool Performance_complexPerformance_10::has_att51() const {
  return (_has_bits_[1] & 0x00040000u) != 0;
}
inline void Performance_complexPerformance_10::set_has_att51() {
  _has_bits_[1] |= 0x00040000u;
}
inline void Performance_complexPerformance_10::clear_has_att51() {
  _has_bits_[1] &= ~0x00040000u;
}
inline void Performance_complexPerformance_10::clear_att51() {
  att51_ = false;
  clear_has_att51();
}
inline bool Performance_complexPerformance_10::att51() const {
  return att51_;
}
inline void Performance_complexPerformance_10::set_att51(bool value) {
  set_has_att51();
  att51_ = value;
}

// required bool att52 = 52;
inline bool Performance_complexPerformance_10::has_att52() const {
  return (_has_bits_[1] & 0x00080000u) != 0;
}
inline void Performance_complexPerformance_10::set_has_att52() {
  _has_bits_[1] |= 0x00080000u;
}
inline void Performance_complexPerformance_10::clear_has_att52() {
  _has_bits_[1] &= ~0x00080000u;
}
inline void Performance_complexPerformance_10::clear_att52() {
  att52_ = false;
  clear_has_att52();
}
inline bool Performance_complexPerformance_10::att52() const {
  return att52_;
}
inline void Performance_complexPerformance_10::set_att52(bool value) {
  set_has_att52();
  att52_ = value;
}

// required bool att53 = 53;
inline bool Performance_complexPerformance_10::has_att53() const {
  return (_has_bits_[1] & 0x00100000u) != 0;
}
inline void Performance_complexPerformance_10::set_has_att53() {
  _has_bits_[1] |= 0x00100000u;
}
inline void Performance_complexPerformance_10::clear_has_att53() {
  _has_bits_[1] &= ~0x00100000u;
}
inline void Performance_complexPerformance_10::clear_att53() {
  att53_ = false;
  clear_has_att53();
}
inline bool Performance_complexPerformance_10::att53() const {
  return att53_;
}
inline void Performance_complexPerformance_10::set_att53(bool value) {
  set_has_att53();
  att53_ = value;
}

// required bool att54 = 54;
inline bool Performance_complexPerformance_10::has_att54() const {
  return (_has_bits_[1] & 0x00200000u) != 0;
}
inline void Performance_complexPerformance_10::set_has_att54() {
  _has_bits_[1] |= 0x00200000u;
}
inline void Performance_complexPerformance_10::clear_has_att54() {
  _has_bits_[1] &= ~0x00200000u;
}
inline void Performance_complexPerformance_10::clear_att54() {
  att54_ = false;
  clear_has_att54();
}
inline bool Performance_complexPerformance_10::att54() const {
  return att54_;
}
inline void Performance_complexPerformance_10::set_att54(bool value) {
  set_has_att54();
  att54_ = value;
}

// required bool att55 = 55;
inline bool Performance_complexPerformance_10::has_att55() const {
  return (_has_bits_[1] & 0x00400000u) != 0;
}
inline void Performance_complexPerformance_10::set_has_att55() {
  _has_bits_[1] |= 0x00400000u;
}
inline void Performance_complexPerformance_10::clear_has_att55() {
  _has_bits_[1] &= ~0x00400000u;
}
inline void Performance_complexPerformance_10::clear_att55() {
  att55_ = false;
  clear_has_att55();
}
inline bool Performance_complexPerformance_10::att55() const {
  return att55_;
}
inline void Performance_complexPerformance_10::set_att55(bool value) {
  set_has_att55();
  att55_ = value;
}

// required bool att56 = 56;
inline bool Performance_complexPerformance_10::has_att56() const {
  return (_has_bits_[1] & 0x00800000u) != 0;
}
inline void Performance_complexPerformance_10::set_has_att56() {
  _has_bits_[1] |= 0x00800000u;
}
inline void Performance_complexPerformance_10::clear_has_att56() {
  _has_bits_[1] &= ~0x00800000u;
}
inline void Performance_complexPerformance_10::clear_att56() {
  att56_ = false;
  clear_has_att56();
}
inline bool Performance_complexPerformance_10::att56() const {
  return att56_;
}
inline void Performance_complexPerformance_10::set_att56(bool value) {
  set_has_att56();
  att56_ = value;
}

// required bool att57 = 57;
inline bool Performance_complexPerformance_10::has_att57() const {
  return (_has_bits_[1] & 0x01000000u) != 0;
}
inline void Performance_complexPerformance_10::set_has_att57() {
  _has_bits_[1] |= 0x01000000u;
}
inline void Performance_complexPerformance_10::clear_has_att57() {
  _has_bits_[1] &= ~0x01000000u;
}
inline void Performance_complexPerformance_10::clear_att57() {
  att57_ = false;
  clear_has_att57();
}
inline bool Performance_complexPerformance_10::att57() const {
  return att57_;
}
inline void Performance_complexPerformance_10::set_att57(bool value) {
  set_has_att57();
  att57_ = value;
}

// required bool att58 = 58;
inline bool Performance_complexPerformance_10::has_att58() const {
  return (_has_bits_[1] & 0x02000000u) != 0;
}
inline void Performance_complexPerformance_10::set_has_att58() {
  _has_bits_[1] |= 0x02000000u;
}
inline void Performance_complexPerformance_10::clear_has_att58() {
  _has_bits_[1] &= ~0x02000000u;
}
inline void Performance_complexPerformance_10::clear_att58() {
  att58_ = false;
  clear_has_att58();
}
inline bool Performance_complexPerformance_10::att58() const {
  return att58_;
}
inline void Performance_complexPerformance_10::set_att58(bool value) {
  set_has_att58();
  att58_ = value;
}

// required bool att59 = 59;
inline bool Performance_complexPerformance_10::has_att59() const {
  return (_has_bits_[1] & 0x04000000u) != 0;
}
inline void Performance_complexPerformance_10::set_has_att59() {
  _has_bits_[1] |= 0x04000000u;
}
inline void Performance_complexPerformance_10::clear_has_att59() {
  _has_bits_[1] &= ~0x04000000u;
}
inline void Performance_complexPerformance_10::clear_att59() {
  att59_ = false;
  clear_has_att59();
}
inline bool Performance_complexPerformance_10::att59() const {
  return att59_;
}
inline void Performance_complexPerformance_10::set_att59(bool value) {
  set_has_att59();
  att59_ = value;
}

// required bool att60 = 60;
inline bool Performance_complexPerformance_10::has_att60() const {
  return (_has_bits_[1] & 0x08000000u) != 0;
}
inline void Performance_complexPerformance_10::set_has_att60() {
  _has_bits_[1] |= 0x08000000u;
}
inline void Performance_complexPerformance_10::clear_has_att60() {
  _has_bits_[1] &= ~0x08000000u;
}
inline void Performance_complexPerformance_10::clear_att60() {
  att60_ = false;
  clear_has_att60();
}
inline bool Performance_complexPerformance_10::att60() const {
  return att60_;
}
inline void Performance_complexPerformance_10::set_att60(bool value) {
  set_has_att60();
  att60_ = value;
}

// -------------------------------------------------------------------

// Performance_innersimplePerformance_2

// required int32 att1 = 1;
inline bool Performance_innersimplePerformance_2::has_att1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Performance_innersimplePerformance_2::set_has_att1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Performance_innersimplePerformance_2::clear_has_att1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Performance_innersimplePerformance_2::clear_att1() {
  att1_ = 0;
  clear_has_att1();
}
inline ::google::protobuf::int32 Performance_innersimplePerformance_2::att1() const {
  return att1_;
}
inline void Performance_innersimplePerformance_2::set_att1(::google::protobuf::int32 value) {
  set_has_att1();
  att1_ = value;
}

// required int32 att2 = 2;
inline bool Performance_innersimplePerformance_2::has_att2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Performance_innersimplePerformance_2::set_has_att2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Performance_innersimplePerformance_2::clear_has_att2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Performance_innersimplePerformance_2::clear_att2() {
  att2_ = 0;
  clear_has_att2();
}
inline ::google::protobuf::int32 Performance_innersimplePerformance_2::att2() const {
  return att2_;
}
inline void Performance_innersimplePerformance_2::set_att2(::google::protobuf::int32 value) {
  set_has_att2();
  att2_ = value;
}

// -------------------------------------------------------------------

// Performance_outersimplePerformance_2

// required .performance.Performance.innersimplePerformance_2 att1 = 1;
inline bool Performance_outersimplePerformance_2::has_att1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Performance_outersimplePerformance_2::set_has_att1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Performance_outersimplePerformance_2::clear_has_att1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Performance_outersimplePerformance_2::clear_att1() {
  if (att1_ != NULL) att1_->::performance::Performance_innersimplePerformance_2::Clear();
  clear_has_att1();
}
inline const ::performance::Performance_innersimplePerformance_2& Performance_outersimplePerformance_2::att1() const {
  return att1_ != NULL ? *att1_ : *default_instance_->att1_;
}
inline ::performance::Performance_innersimplePerformance_2* Performance_outersimplePerformance_2::mutable_att1() {
  set_has_att1();
  if (att1_ == NULL) att1_ = new ::performance::Performance_innersimplePerformance_2;
  return att1_;
}
inline ::performance::Performance_innersimplePerformance_2* Performance_outersimplePerformance_2::release_att1() {
  clear_has_att1();
  ::performance::Performance_innersimplePerformance_2* temp = att1_;
  att1_ = NULL;
  return temp;
}
inline void Performance_outersimplePerformance_2::set_allocated_att1(::performance::Performance_innersimplePerformance_2* att1) {
  delete att1_;
  att1_ = att1;
  if (att1) {
    set_has_att1();
  } else {
    clear_has_att1();
  }
}

// required .performance.Performance.innersimplePerformance_2 att2 = 2;
inline bool Performance_outersimplePerformance_2::has_att2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Performance_outersimplePerformance_2::set_has_att2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Performance_outersimplePerformance_2::clear_has_att2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Performance_outersimplePerformance_2::clear_att2() {
  if (att2_ != NULL) att2_->::performance::Performance_innersimplePerformance_2::Clear();
  clear_has_att2();
}
inline const ::performance::Performance_innersimplePerformance_2& Performance_outersimplePerformance_2::att2() const {
  return att2_ != NULL ? *att2_ : *default_instance_->att2_;
}
inline ::performance::Performance_innersimplePerformance_2* Performance_outersimplePerformance_2::mutable_att2() {
  set_has_att2();
  if (att2_ == NULL) att2_ = new ::performance::Performance_innersimplePerformance_2;
  return att2_;
}
inline ::performance::Performance_innersimplePerformance_2* Performance_outersimplePerformance_2::release_att2() {
  clear_has_att2();
  ::performance::Performance_innersimplePerformance_2* temp = att2_;
  att2_ = NULL;
  return temp;
}
inline void Performance_outersimplePerformance_2::set_allocated_att2(::performance::Performance_innersimplePerformance_2* att2) {
  delete att2_;
  att2_ = att2;
  if (att2) {
    set_has_att2();
  } else {
    clear_has_att2();
  }
}

// -------------------------------------------------------------------

// Performance_innersimplePerformance_4

// required int32 att1 = 1;
inline bool Performance_innersimplePerformance_4::has_att1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Performance_innersimplePerformance_4::set_has_att1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Performance_innersimplePerformance_4::clear_has_att1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Performance_innersimplePerformance_4::clear_att1() {
  att1_ = 0;
  clear_has_att1();
}
inline ::google::protobuf::int32 Performance_innersimplePerformance_4::att1() const {
  return att1_;
}
inline void Performance_innersimplePerformance_4::set_att1(::google::protobuf::int32 value) {
  set_has_att1();
  att1_ = value;
}

// required int32 att2 = 2;
inline bool Performance_innersimplePerformance_4::has_att2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Performance_innersimplePerformance_4::set_has_att2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Performance_innersimplePerformance_4::clear_has_att2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Performance_innersimplePerformance_4::clear_att2() {
  att2_ = 0;
  clear_has_att2();
}
inline ::google::protobuf::int32 Performance_innersimplePerformance_4::att2() const {
  return att2_;
}
inline void Performance_innersimplePerformance_4::set_att2(::google::protobuf::int32 value) {
  set_has_att2();
  att2_ = value;
}

// required int32 att3 = 3;
inline bool Performance_innersimplePerformance_4::has_att3() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Performance_innersimplePerformance_4::set_has_att3() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Performance_innersimplePerformance_4::clear_has_att3() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Performance_innersimplePerformance_4::clear_att3() {
  att3_ = 0;
  clear_has_att3();
}
inline ::google::protobuf::int32 Performance_innersimplePerformance_4::att3() const {
  return att3_;
}
inline void Performance_innersimplePerformance_4::set_att3(::google::protobuf::int32 value) {
  set_has_att3();
  att3_ = value;
}

// required int32 att4 = 4;
inline bool Performance_innersimplePerformance_4::has_att4() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Performance_innersimplePerformance_4::set_has_att4() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Performance_innersimplePerformance_4::clear_has_att4() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Performance_innersimplePerformance_4::clear_att4() {
  att4_ = 0;
  clear_has_att4();
}
inline ::google::protobuf::int32 Performance_innersimplePerformance_4::att4() const {
  return att4_;
}
inline void Performance_innersimplePerformance_4::set_att4(::google::protobuf::int32 value) {
  set_has_att4();
  att4_ = value;
}

// -------------------------------------------------------------------

// Performance_outersimplePerformance_4

// required .performance.Performance.innersimplePerformance_4 att1 = 1;
inline bool Performance_outersimplePerformance_4::has_att1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Performance_outersimplePerformance_4::set_has_att1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Performance_outersimplePerformance_4::clear_has_att1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Performance_outersimplePerformance_4::clear_att1() {
  if (att1_ != NULL) att1_->::performance::Performance_innersimplePerformance_4::Clear();
  clear_has_att1();
}
inline const ::performance::Performance_innersimplePerformance_4& Performance_outersimplePerformance_4::att1() const {
  return att1_ != NULL ? *att1_ : *default_instance_->att1_;
}
inline ::performance::Performance_innersimplePerformance_4* Performance_outersimplePerformance_4::mutable_att1() {
  set_has_att1();
  if (att1_ == NULL) att1_ = new ::performance::Performance_innersimplePerformance_4;
  return att1_;
}
inline ::performance::Performance_innersimplePerformance_4* Performance_outersimplePerformance_4::release_att1() {
  clear_has_att1();
  ::performance::Performance_innersimplePerformance_4* temp = att1_;
  att1_ = NULL;
  return temp;
}
inline void Performance_outersimplePerformance_4::set_allocated_att1(::performance::Performance_innersimplePerformance_4* att1) {
  delete att1_;
  att1_ = att1;
  if (att1) {
    set_has_att1();
  } else {
    clear_has_att1();
  }
}

// required .performance.Performance.innersimplePerformance_4 att2 = 2;
inline bool Performance_outersimplePerformance_4::has_att2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Performance_outersimplePerformance_4::set_has_att2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Performance_outersimplePerformance_4::clear_has_att2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Performance_outersimplePerformance_4::clear_att2() {
  if (att2_ != NULL) att2_->::performance::Performance_innersimplePerformance_4::Clear();
  clear_has_att2();
}
inline const ::performance::Performance_innersimplePerformance_4& Performance_outersimplePerformance_4::att2() const {
  return att2_ != NULL ? *att2_ : *default_instance_->att2_;
}
inline ::performance::Performance_innersimplePerformance_4* Performance_outersimplePerformance_4::mutable_att2() {
  set_has_att2();
  if (att2_ == NULL) att2_ = new ::performance::Performance_innersimplePerformance_4;
  return att2_;
}
inline ::performance::Performance_innersimplePerformance_4* Performance_outersimplePerformance_4::release_att2() {
  clear_has_att2();
  ::performance::Performance_innersimplePerformance_4* temp = att2_;
  att2_ = NULL;
  return temp;
}
inline void Performance_outersimplePerformance_4::set_allocated_att2(::performance::Performance_innersimplePerformance_4* att2) {
  delete att2_;
  att2_ = att2;
  if (att2) {
    set_has_att2();
  } else {
    clear_has_att2();
  }
}

// required .performance.Performance.innersimplePerformance_4 att3 = 3;
inline bool Performance_outersimplePerformance_4::has_att3() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Performance_outersimplePerformance_4::set_has_att3() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Performance_outersimplePerformance_4::clear_has_att3() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Performance_outersimplePerformance_4::clear_att3() {
  if (att3_ != NULL) att3_->::performance::Performance_innersimplePerformance_4::Clear();
  clear_has_att3();
}
inline const ::performance::Performance_innersimplePerformance_4& Performance_outersimplePerformance_4::att3() const {
  return att3_ != NULL ? *att3_ : *default_instance_->att3_;
}
inline ::performance::Performance_innersimplePerformance_4* Performance_outersimplePerformance_4::mutable_att3() {
  set_has_att3();
  if (att3_ == NULL) att3_ = new ::performance::Performance_innersimplePerformance_4;
  return att3_;
}
inline ::performance::Performance_innersimplePerformance_4* Performance_outersimplePerformance_4::release_att3() {
  clear_has_att3();
  ::performance::Performance_innersimplePerformance_4* temp = att3_;
  att3_ = NULL;
  return temp;
}
inline void Performance_outersimplePerformance_4::set_allocated_att3(::performance::Performance_innersimplePerformance_4* att3) {
  delete att3_;
  att3_ = att3;
  if (att3) {
    set_has_att3();
  } else {
    clear_has_att3();
  }
}

// required .performance.Performance.innersimplePerformance_4 att4 = 4;
inline bool Performance_outersimplePerformance_4::has_att4() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Performance_outersimplePerformance_4::set_has_att4() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Performance_outersimplePerformance_4::clear_has_att4() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Performance_outersimplePerformance_4::clear_att4() {
  if (att4_ != NULL) att4_->::performance::Performance_innersimplePerformance_4::Clear();
  clear_has_att4();
}
inline const ::performance::Performance_innersimplePerformance_4& Performance_outersimplePerformance_4::att4() const {
  return att4_ != NULL ? *att4_ : *default_instance_->att4_;
}
inline ::performance::Performance_innersimplePerformance_4* Performance_outersimplePerformance_4::mutable_att4() {
  set_has_att4();
  if (att4_ == NULL) att4_ = new ::performance::Performance_innersimplePerformance_4;
  return att4_;
}
inline ::performance::Performance_innersimplePerformance_4* Performance_outersimplePerformance_4::release_att4() {
  clear_has_att4();
  ::performance::Performance_innersimplePerformance_4* temp = att4_;
  att4_ = NULL;
  return temp;
}
inline void Performance_outersimplePerformance_4::set_allocated_att4(::performance::Performance_innersimplePerformance_4* att4) {
  delete att4_;
  att4_ = att4;
  if (att4) {
    set_has_att4();
  } else {
    clear_has_att4();
  }
}

// -------------------------------------------------------------------

// Performance_innersimplePerformance_6

// required int32 att1 = 1;
inline bool Performance_innersimplePerformance_6::has_att1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Performance_innersimplePerformance_6::set_has_att1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Performance_innersimplePerformance_6::clear_has_att1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Performance_innersimplePerformance_6::clear_att1() {
  att1_ = 0;
  clear_has_att1();
}
inline ::google::protobuf::int32 Performance_innersimplePerformance_6::att1() const {
  return att1_;
}
inline void Performance_innersimplePerformance_6::set_att1(::google::protobuf::int32 value) {
  set_has_att1();
  att1_ = value;
}

// required int32 att2 = 2;
inline bool Performance_innersimplePerformance_6::has_att2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Performance_innersimplePerformance_6::set_has_att2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Performance_innersimplePerformance_6::clear_has_att2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Performance_innersimplePerformance_6::clear_att2() {
  att2_ = 0;
  clear_has_att2();
}
inline ::google::protobuf::int32 Performance_innersimplePerformance_6::att2() const {
  return att2_;
}
inline void Performance_innersimplePerformance_6::set_att2(::google::protobuf::int32 value) {
  set_has_att2();
  att2_ = value;
}

// required int32 att3 = 3;
inline bool Performance_innersimplePerformance_6::has_att3() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Performance_innersimplePerformance_6::set_has_att3() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Performance_innersimplePerformance_6::clear_has_att3() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Performance_innersimplePerformance_6::clear_att3() {
  att3_ = 0;
  clear_has_att3();
}
inline ::google::protobuf::int32 Performance_innersimplePerformance_6::att3() const {
  return att3_;
}
inline void Performance_innersimplePerformance_6::set_att3(::google::protobuf::int32 value) {
  set_has_att3();
  att3_ = value;
}

// required int32 att4 = 4;
inline bool Performance_innersimplePerformance_6::has_att4() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Performance_innersimplePerformance_6::set_has_att4() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Performance_innersimplePerformance_6::clear_has_att4() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Performance_innersimplePerformance_6::clear_att4() {
  att4_ = 0;
  clear_has_att4();
}
inline ::google::protobuf::int32 Performance_innersimplePerformance_6::att4() const {
  return att4_;
}
inline void Performance_innersimplePerformance_6::set_att4(::google::protobuf::int32 value) {
  set_has_att4();
  att4_ = value;
}

// required int32 att5 = 5;
inline bool Performance_innersimplePerformance_6::has_att5() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Performance_innersimplePerformance_6::set_has_att5() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Performance_innersimplePerformance_6::clear_has_att5() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Performance_innersimplePerformance_6::clear_att5() {
  att5_ = 0;
  clear_has_att5();
}
inline ::google::protobuf::int32 Performance_innersimplePerformance_6::att5() const {
  return att5_;
}
inline void Performance_innersimplePerformance_6::set_att5(::google::protobuf::int32 value) {
  set_has_att5();
  att5_ = value;
}

// required int32 att6 = 6;
inline bool Performance_innersimplePerformance_6::has_att6() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Performance_innersimplePerformance_6::set_has_att6() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Performance_innersimplePerformance_6::clear_has_att6() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Performance_innersimplePerformance_6::clear_att6() {
  att6_ = 0;
  clear_has_att6();
}
inline ::google::protobuf::int32 Performance_innersimplePerformance_6::att6() const {
  return att6_;
}
inline void Performance_innersimplePerformance_6::set_att6(::google::protobuf::int32 value) {
  set_has_att6();
  att6_ = value;
}

// -------------------------------------------------------------------

// Performance_outersimplePerformance_6

// required .performance.Performance.innersimplePerformance_6 att1 = 1;
inline bool Performance_outersimplePerformance_6::has_att1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Performance_outersimplePerformance_6::set_has_att1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Performance_outersimplePerformance_6::clear_has_att1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Performance_outersimplePerformance_6::clear_att1() {
  if (att1_ != NULL) att1_->::performance::Performance_innersimplePerformance_6::Clear();
  clear_has_att1();
}
inline const ::performance::Performance_innersimplePerformance_6& Performance_outersimplePerformance_6::att1() const {
  return att1_ != NULL ? *att1_ : *default_instance_->att1_;
}
inline ::performance::Performance_innersimplePerformance_6* Performance_outersimplePerformance_6::mutable_att1() {
  set_has_att1();
  if (att1_ == NULL) att1_ = new ::performance::Performance_innersimplePerformance_6;
  return att1_;
}
inline ::performance::Performance_innersimplePerformance_6* Performance_outersimplePerformance_6::release_att1() {
  clear_has_att1();
  ::performance::Performance_innersimplePerformance_6* temp = att1_;
  att1_ = NULL;
  return temp;
}
inline void Performance_outersimplePerformance_6::set_allocated_att1(::performance::Performance_innersimplePerformance_6* att1) {
  delete att1_;
  att1_ = att1;
  if (att1) {
    set_has_att1();
  } else {
    clear_has_att1();
  }
}

// required .performance.Performance.innersimplePerformance_6 att2 = 2;
inline bool Performance_outersimplePerformance_6::has_att2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Performance_outersimplePerformance_6::set_has_att2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Performance_outersimplePerformance_6::clear_has_att2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Performance_outersimplePerformance_6::clear_att2() {
  if (att2_ != NULL) att2_->::performance::Performance_innersimplePerformance_6::Clear();
  clear_has_att2();
}
inline const ::performance::Performance_innersimplePerformance_6& Performance_outersimplePerformance_6::att2() const {
  return att2_ != NULL ? *att2_ : *default_instance_->att2_;
}
inline ::performance::Performance_innersimplePerformance_6* Performance_outersimplePerformance_6::mutable_att2() {
  set_has_att2();
  if (att2_ == NULL) att2_ = new ::performance::Performance_innersimplePerformance_6;
  return att2_;
}
inline ::performance::Performance_innersimplePerformance_6* Performance_outersimplePerformance_6::release_att2() {
  clear_has_att2();
  ::performance::Performance_innersimplePerformance_6* temp = att2_;
  att2_ = NULL;
  return temp;
}
inline void Performance_outersimplePerformance_6::set_allocated_att2(::performance::Performance_innersimplePerformance_6* att2) {
  delete att2_;
  att2_ = att2;
  if (att2) {
    set_has_att2();
  } else {
    clear_has_att2();
  }
}

// required .performance.Performance.innersimplePerformance_6 att3 = 3;
inline bool Performance_outersimplePerformance_6::has_att3() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Performance_outersimplePerformance_6::set_has_att3() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Performance_outersimplePerformance_6::clear_has_att3() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Performance_outersimplePerformance_6::clear_att3() {
  if (att3_ != NULL) att3_->::performance::Performance_innersimplePerformance_6::Clear();
  clear_has_att3();
}
inline const ::performance::Performance_innersimplePerformance_6& Performance_outersimplePerformance_6::att3() const {
  return att3_ != NULL ? *att3_ : *default_instance_->att3_;
}
inline ::performance::Performance_innersimplePerformance_6* Performance_outersimplePerformance_6::mutable_att3() {
  set_has_att3();
  if (att3_ == NULL) att3_ = new ::performance::Performance_innersimplePerformance_6;
  return att3_;
}
inline ::performance::Performance_innersimplePerformance_6* Performance_outersimplePerformance_6::release_att3() {
  clear_has_att3();
  ::performance::Performance_innersimplePerformance_6* temp = att3_;
  att3_ = NULL;
  return temp;
}
inline void Performance_outersimplePerformance_6::set_allocated_att3(::performance::Performance_innersimplePerformance_6* att3) {
  delete att3_;
  att3_ = att3;
  if (att3) {
    set_has_att3();
  } else {
    clear_has_att3();
  }
}

// required .performance.Performance.innersimplePerformance_6 att4 = 4;
inline bool Performance_outersimplePerformance_6::has_att4() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Performance_outersimplePerformance_6::set_has_att4() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Performance_outersimplePerformance_6::clear_has_att4() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Performance_outersimplePerformance_6::clear_att4() {
  if (att4_ != NULL) att4_->::performance::Performance_innersimplePerformance_6::Clear();
  clear_has_att4();
}
inline const ::performance::Performance_innersimplePerformance_6& Performance_outersimplePerformance_6::att4() const {
  return att4_ != NULL ? *att4_ : *default_instance_->att4_;
}
inline ::performance::Performance_innersimplePerformance_6* Performance_outersimplePerformance_6::mutable_att4() {
  set_has_att4();
  if (att4_ == NULL) att4_ = new ::performance::Performance_innersimplePerformance_6;
  return att4_;
}
inline ::performance::Performance_innersimplePerformance_6* Performance_outersimplePerformance_6::release_att4() {
  clear_has_att4();
  ::performance::Performance_innersimplePerformance_6* temp = att4_;
  att4_ = NULL;
  return temp;
}
inline void Performance_outersimplePerformance_6::set_allocated_att4(::performance::Performance_innersimplePerformance_6* att4) {
  delete att4_;
  att4_ = att4;
  if (att4) {
    set_has_att4();
  } else {
    clear_has_att4();
  }
}

// required .performance.Performance.innersimplePerformance_6 att5 = 5;
inline bool Performance_outersimplePerformance_6::has_att5() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Performance_outersimplePerformance_6::set_has_att5() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Performance_outersimplePerformance_6::clear_has_att5() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Performance_outersimplePerformance_6::clear_att5() {
  if (att5_ != NULL) att5_->::performance::Performance_innersimplePerformance_6::Clear();
  clear_has_att5();
}
inline const ::performance::Performance_innersimplePerformance_6& Performance_outersimplePerformance_6::att5() const {
  return att5_ != NULL ? *att5_ : *default_instance_->att5_;
}
inline ::performance::Performance_innersimplePerformance_6* Performance_outersimplePerformance_6::mutable_att5() {
  set_has_att5();
  if (att5_ == NULL) att5_ = new ::performance::Performance_innersimplePerformance_6;
  return att5_;
}
inline ::performance::Performance_innersimplePerformance_6* Performance_outersimplePerformance_6::release_att5() {
  clear_has_att5();
  ::performance::Performance_innersimplePerformance_6* temp = att5_;
  att5_ = NULL;
  return temp;
}
inline void Performance_outersimplePerformance_6::set_allocated_att5(::performance::Performance_innersimplePerformance_6* att5) {
  delete att5_;
  att5_ = att5;
  if (att5) {
    set_has_att5();
  } else {
    clear_has_att5();
  }
}

// required .performance.Performance.innersimplePerformance_6 att6 = 6;
inline bool Performance_outersimplePerformance_6::has_att6() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Performance_outersimplePerformance_6::set_has_att6() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Performance_outersimplePerformance_6::clear_has_att6() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Performance_outersimplePerformance_6::clear_att6() {
  if (att6_ != NULL) att6_->::performance::Performance_innersimplePerformance_6::Clear();
  clear_has_att6();
}
inline const ::performance::Performance_innersimplePerformance_6& Performance_outersimplePerformance_6::att6() const {
  return att6_ != NULL ? *att6_ : *default_instance_->att6_;
}
inline ::performance::Performance_innersimplePerformance_6* Performance_outersimplePerformance_6::mutable_att6() {
  set_has_att6();
  if (att6_ == NULL) att6_ = new ::performance::Performance_innersimplePerformance_6;
  return att6_;
}
inline ::performance::Performance_innersimplePerformance_6* Performance_outersimplePerformance_6::release_att6() {
  clear_has_att6();
  ::performance::Performance_innersimplePerformance_6* temp = att6_;
  att6_ = NULL;
  return temp;
}
inline void Performance_outersimplePerformance_6::set_allocated_att6(::performance::Performance_innersimplePerformance_6* att6) {
  delete att6_;
  att6_ = att6;
  if (att6) {
    set_has_att6();
  } else {
    clear_has_att6();
  }
}

// -------------------------------------------------------------------

// Performance_innersimplePerformance_8

// required int32 att1 = 1;
inline bool Performance_innersimplePerformance_8::has_att1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Performance_innersimplePerformance_8::set_has_att1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Performance_innersimplePerformance_8::clear_has_att1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Performance_innersimplePerformance_8::clear_att1() {
  att1_ = 0;
  clear_has_att1();
}
inline ::google::protobuf::int32 Performance_innersimplePerformance_8::att1() const {
  return att1_;
}
inline void Performance_innersimplePerformance_8::set_att1(::google::protobuf::int32 value) {
  set_has_att1();
  att1_ = value;
}

// required int32 att2 = 2;
inline bool Performance_innersimplePerformance_8::has_att2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Performance_innersimplePerformance_8::set_has_att2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Performance_innersimplePerformance_8::clear_has_att2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Performance_innersimplePerformance_8::clear_att2() {
  att2_ = 0;
  clear_has_att2();
}
inline ::google::protobuf::int32 Performance_innersimplePerformance_8::att2() const {
  return att2_;
}
inline void Performance_innersimplePerformance_8::set_att2(::google::protobuf::int32 value) {
  set_has_att2();
  att2_ = value;
}

// required int32 att3 = 3;
inline bool Performance_innersimplePerformance_8::has_att3() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Performance_innersimplePerformance_8::set_has_att3() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Performance_innersimplePerformance_8::clear_has_att3() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Performance_innersimplePerformance_8::clear_att3() {
  att3_ = 0;
  clear_has_att3();
}
inline ::google::protobuf::int32 Performance_innersimplePerformance_8::att3() const {
  return att3_;
}
inline void Performance_innersimplePerformance_8::set_att3(::google::protobuf::int32 value) {
  set_has_att3();
  att3_ = value;
}

// required int32 att4 = 4;
inline bool Performance_innersimplePerformance_8::has_att4() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Performance_innersimplePerformance_8::set_has_att4() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Performance_innersimplePerformance_8::clear_has_att4() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Performance_innersimplePerformance_8::clear_att4() {
  att4_ = 0;
  clear_has_att4();
}
inline ::google::protobuf::int32 Performance_innersimplePerformance_8::att4() const {
  return att4_;
}
inline void Performance_innersimplePerformance_8::set_att4(::google::protobuf::int32 value) {
  set_has_att4();
  att4_ = value;
}

// required int32 att5 = 5;
inline bool Performance_innersimplePerformance_8::has_att5() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Performance_innersimplePerformance_8::set_has_att5() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Performance_innersimplePerformance_8::clear_has_att5() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Performance_innersimplePerformance_8::clear_att5() {
  att5_ = 0;
  clear_has_att5();
}
inline ::google::protobuf::int32 Performance_innersimplePerformance_8::att5() const {
  return att5_;
}
inline void Performance_innersimplePerformance_8::set_att5(::google::protobuf::int32 value) {
  set_has_att5();
  att5_ = value;
}

// required int32 att6 = 6;
inline bool Performance_innersimplePerformance_8::has_att6() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Performance_innersimplePerformance_8::set_has_att6() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Performance_innersimplePerformance_8::clear_has_att6() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Performance_innersimplePerformance_8::clear_att6() {
  att6_ = 0;
  clear_has_att6();
}
inline ::google::protobuf::int32 Performance_innersimplePerformance_8::att6() const {
  return att6_;
}
inline void Performance_innersimplePerformance_8::set_att6(::google::protobuf::int32 value) {
  set_has_att6();
  att6_ = value;
}

// required int32 att7 = 7;
inline bool Performance_innersimplePerformance_8::has_att7() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Performance_innersimplePerformance_8::set_has_att7() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Performance_innersimplePerformance_8::clear_has_att7() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Performance_innersimplePerformance_8::clear_att7() {
  att7_ = 0;
  clear_has_att7();
}
inline ::google::protobuf::int32 Performance_innersimplePerformance_8::att7() const {
  return att7_;
}
inline void Performance_innersimplePerformance_8::set_att7(::google::protobuf::int32 value) {
  set_has_att7();
  att7_ = value;
}

// required int32 att8 = 8;
inline bool Performance_innersimplePerformance_8::has_att8() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Performance_innersimplePerformance_8::set_has_att8() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Performance_innersimplePerformance_8::clear_has_att8() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Performance_innersimplePerformance_8::clear_att8() {
  att8_ = 0;
  clear_has_att8();
}
inline ::google::protobuf::int32 Performance_innersimplePerformance_8::att8() const {
  return att8_;
}
inline void Performance_innersimplePerformance_8::set_att8(::google::protobuf::int32 value) {
  set_has_att8();
  att8_ = value;
}

// -------------------------------------------------------------------

// Performance_outersimplePerformance_8

// required .performance.Performance.innersimplePerformance_8 att1 = 1;
inline bool Performance_outersimplePerformance_8::has_att1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Performance_outersimplePerformance_8::set_has_att1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Performance_outersimplePerformance_8::clear_has_att1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Performance_outersimplePerformance_8::clear_att1() {
  if (att1_ != NULL) att1_->::performance::Performance_innersimplePerformance_8::Clear();
  clear_has_att1();
}
inline const ::performance::Performance_innersimplePerformance_8& Performance_outersimplePerformance_8::att1() const {
  return att1_ != NULL ? *att1_ : *default_instance_->att1_;
}
inline ::performance::Performance_innersimplePerformance_8* Performance_outersimplePerformance_8::mutable_att1() {
  set_has_att1();
  if (att1_ == NULL) att1_ = new ::performance::Performance_innersimplePerformance_8;
  return att1_;
}
inline ::performance::Performance_innersimplePerformance_8* Performance_outersimplePerformance_8::release_att1() {
  clear_has_att1();
  ::performance::Performance_innersimplePerformance_8* temp = att1_;
  att1_ = NULL;
  return temp;
}
inline void Performance_outersimplePerformance_8::set_allocated_att1(::performance::Performance_innersimplePerformance_8* att1) {
  delete att1_;
  att1_ = att1;
  if (att1) {
    set_has_att1();
  } else {
    clear_has_att1();
  }
}

// required .performance.Performance.innersimplePerformance_8 att2 = 2;
inline bool Performance_outersimplePerformance_8::has_att2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Performance_outersimplePerformance_8::set_has_att2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Performance_outersimplePerformance_8::clear_has_att2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Performance_outersimplePerformance_8::clear_att2() {
  if (att2_ != NULL) att2_->::performance::Performance_innersimplePerformance_8::Clear();
  clear_has_att2();
}
inline const ::performance::Performance_innersimplePerformance_8& Performance_outersimplePerformance_8::att2() const {
  return att2_ != NULL ? *att2_ : *default_instance_->att2_;
}
inline ::performance::Performance_innersimplePerformance_8* Performance_outersimplePerformance_8::mutable_att2() {
  set_has_att2();
  if (att2_ == NULL) att2_ = new ::performance::Performance_innersimplePerformance_8;
  return att2_;
}
inline ::performance::Performance_innersimplePerformance_8* Performance_outersimplePerformance_8::release_att2() {
  clear_has_att2();
  ::performance::Performance_innersimplePerformance_8* temp = att2_;
  att2_ = NULL;
  return temp;
}
inline void Performance_outersimplePerformance_8::set_allocated_att2(::performance::Performance_innersimplePerformance_8* att2) {
  delete att2_;
  att2_ = att2;
  if (att2) {
    set_has_att2();
  } else {
    clear_has_att2();
  }
}

// required .performance.Performance.innersimplePerformance_8 att3 = 3;
inline bool Performance_outersimplePerformance_8::has_att3() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Performance_outersimplePerformance_8::set_has_att3() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Performance_outersimplePerformance_8::clear_has_att3() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Performance_outersimplePerformance_8::clear_att3() {
  if (att3_ != NULL) att3_->::performance::Performance_innersimplePerformance_8::Clear();
  clear_has_att3();
}
inline const ::performance::Performance_innersimplePerformance_8& Performance_outersimplePerformance_8::att3() const {
  return att3_ != NULL ? *att3_ : *default_instance_->att3_;
}
inline ::performance::Performance_innersimplePerformance_8* Performance_outersimplePerformance_8::mutable_att3() {
  set_has_att3();
  if (att3_ == NULL) att3_ = new ::performance::Performance_innersimplePerformance_8;
  return att3_;
}
inline ::performance::Performance_innersimplePerformance_8* Performance_outersimplePerformance_8::release_att3() {
  clear_has_att3();
  ::performance::Performance_innersimplePerformance_8* temp = att3_;
  att3_ = NULL;
  return temp;
}
inline void Performance_outersimplePerformance_8::set_allocated_att3(::performance::Performance_innersimplePerformance_8* att3) {
  delete att3_;
  att3_ = att3;
  if (att3) {
    set_has_att3();
  } else {
    clear_has_att3();
  }
}

// required .performance.Performance.innersimplePerformance_8 att4 = 4;
inline bool Performance_outersimplePerformance_8::has_att4() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Performance_outersimplePerformance_8::set_has_att4() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Performance_outersimplePerformance_8::clear_has_att4() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Performance_outersimplePerformance_8::clear_att4() {
  if (att4_ != NULL) att4_->::performance::Performance_innersimplePerformance_8::Clear();
  clear_has_att4();
}
inline const ::performance::Performance_innersimplePerformance_8& Performance_outersimplePerformance_8::att4() const {
  return att4_ != NULL ? *att4_ : *default_instance_->att4_;
}
inline ::performance::Performance_innersimplePerformance_8* Performance_outersimplePerformance_8::mutable_att4() {
  set_has_att4();
  if (att4_ == NULL) att4_ = new ::performance::Performance_innersimplePerformance_8;
  return att4_;
}
inline ::performance::Performance_innersimplePerformance_8* Performance_outersimplePerformance_8::release_att4() {
  clear_has_att4();
  ::performance::Performance_innersimplePerformance_8* temp = att4_;
  att4_ = NULL;
  return temp;
}
inline void Performance_outersimplePerformance_8::set_allocated_att4(::performance::Performance_innersimplePerformance_8* att4) {
  delete att4_;
  att4_ = att4;
  if (att4) {
    set_has_att4();
  } else {
    clear_has_att4();
  }
}

// required .performance.Performance.innersimplePerformance_8 att5 = 5;
inline bool Performance_outersimplePerformance_8::has_att5() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Performance_outersimplePerformance_8::set_has_att5() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Performance_outersimplePerformance_8::clear_has_att5() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Performance_outersimplePerformance_8::clear_att5() {
  if (att5_ != NULL) att5_->::performance::Performance_innersimplePerformance_8::Clear();
  clear_has_att5();
}
inline const ::performance::Performance_innersimplePerformance_8& Performance_outersimplePerformance_8::att5() const {
  return att5_ != NULL ? *att5_ : *default_instance_->att5_;
}
inline ::performance::Performance_innersimplePerformance_8* Performance_outersimplePerformance_8::mutable_att5() {
  set_has_att5();
  if (att5_ == NULL) att5_ = new ::performance::Performance_innersimplePerformance_8;
  return att5_;
}
inline ::performance::Performance_innersimplePerformance_8* Performance_outersimplePerformance_8::release_att5() {
  clear_has_att5();
  ::performance::Performance_innersimplePerformance_8* temp = att5_;
  att5_ = NULL;
  return temp;
}
inline void Performance_outersimplePerformance_8::set_allocated_att5(::performance::Performance_innersimplePerformance_8* att5) {
  delete att5_;
  att5_ = att5;
  if (att5) {
    set_has_att5();
  } else {
    clear_has_att5();
  }
}

// required .performance.Performance.innersimplePerformance_8 att6 = 6;
inline bool Performance_outersimplePerformance_8::has_att6() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Performance_outersimplePerformance_8::set_has_att6() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Performance_outersimplePerformance_8::clear_has_att6() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Performance_outersimplePerformance_8::clear_att6() {
  if (att6_ != NULL) att6_->::performance::Performance_innersimplePerformance_8::Clear();
  clear_has_att6();
}
inline const ::performance::Performance_innersimplePerformance_8& Performance_outersimplePerformance_8::att6() const {
  return att6_ != NULL ? *att6_ : *default_instance_->att6_;
}
inline ::performance::Performance_innersimplePerformance_8* Performance_outersimplePerformance_8::mutable_att6() {
  set_has_att6();
  if (att6_ == NULL) att6_ = new ::performance::Performance_innersimplePerformance_8;
  return att6_;
}
inline ::performance::Performance_innersimplePerformance_8* Performance_outersimplePerformance_8::release_att6() {
  clear_has_att6();
  ::performance::Performance_innersimplePerformance_8* temp = att6_;
  att6_ = NULL;
  return temp;
}
inline void Performance_outersimplePerformance_8::set_allocated_att6(::performance::Performance_innersimplePerformance_8* att6) {
  delete att6_;
  att6_ = att6;
  if (att6) {
    set_has_att6();
  } else {
    clear_has_att6();
  }
}

// required .performance.Performance.innersimplePerformance_8 att7 = 7;
inline bool Performance_outersimplePerformance_8::has_att7() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Performance_outersimplePerformance_8::set_has_att7() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Performance_outersimplePerformance_8::clear_has_att7() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Performance_outersimplePerformance_8::clear_att7() {
  if (att7_ != NULL) att7_->::performance::Performance_innersimplePerformance_8::Clear();
  clear_has_att7();
}
inline const ::performance::Performance_innersimplePerformance_8& Performance_outersimplePerformance_8::att7() const {
  return att7_ != NULL ? *att7_ : *default_instance_->att7_;
}
inline ::performance::Performance_innersimplePerformance_8* Performance_outersimplePerformance_8::mutable_att7() {
  set_has_att7();
  if (att7_ == NULL) att7_ = new ::performance::Performance_innersimplePerformance_8;
  return att7_;
}
inline ::performance::Performance_innersimplePerformance_8* Performance_outersimplePerformance_8::release_att7() {
  clear_has_att7();
  ::performance::Performance_innersimplePerformance_8* temp = att7_;
  att7_ = NULL;
  return temp;
}
inline void Performance_outersimplePerformance_8::set_allocated_att7(::performance::Performance_innersimplePerformance_8* att7) {
  delete att7_;
  att7_ = att7;
  if (att7) {
    set_has_att7();
  } else {
    clear_has_att7();
  }
}

// required .performance.Performance.innersimplePerformance_8 att8 = 8;
inline bool Performance_outersimplePerformance_8::has_att8() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Performance_outersimplePerformance_8::set_has_att8() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Performance_outersimplePerformance_8::clear_has_att8() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Performance_outersimplePerformance_8::clear_att8() {
  if (att8_ != NULL) att8_->::performance::Performance_innersimplePerformance_8::Clear();
  clear_has_att8();
}
inline const ::performance::Performance_innersimplePerformance_8& Performance_outersimplePerformance_8::att8() const {
  return att8_ != NULL ? *att8_ : *default_instance_->att8_;
}
inline ::performance::Performance_innersimplePerformance_8* Performance_outersimplePerformance_8::mutable_att8() {
  set_has_att8();
  if (att8_ == NULL) att8_ = new ::performance::Performance_innersimplePerformance_8;
  return att8_;
}
inline ::performance::Performance_innersimplePerformance_8* Performance_outersimplePerformance_8::release_att8() {
  clear_has_att8();
  ::performance::Performance_innersimplePerformance_8* temp = att8_;
  att8_ = NULL;
  return temp;
}
inline void Performance_outersimplePerformance_8::set_allocated_att8(::performance::Performance_innersimplePerformance_8* att8) {
  delete att8_;
  att8_ = att8;
  if (att8) {
    set_has_att8();
  } else {
    clear_has_att8();
  }
}

// -------------------------------------------------------------------

// Performance_innersimplePerformance_10

// required int32 att1 = 1;
inline bool Performance_innersimplePerformance_10::has_att1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Performance_innersimplePerformance_10::set_has_att1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Performance_innersimplePerformance_10::clear_has_att1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Performance_innersimplePerformance_10::clear_att1() {
  att1_ = 0;
  clear_has_att1();
}
inline ::google::protobuf::int32 Performance_innersimplePerformance_10::att1() const {
  return att1_;
}
inline void Performance_innersimplePerformance_10::set_att1(::google::protobuf::int32 value) {
  set_has_att1();
  att1_ = value;
}

// required int32 att2 = 2;
inline bool Performance_innersimplePerformance_10::has_att2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Performance_innersimplePerformance_10::set_has_att2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Performance_innersimplePerformance_10::clear_has_att2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Performance_innersimplePerformance_10::clear_att2() {
  att2_ = 0;
  clear_has_att2();
}
inline ::google::protobuf::int32 Performance_innersimplePerformance_10::att2() const {
  return att2_;
}
inline void Performance_innersimplePerformance_10::set_att2(::google::protobuf::int32 value) {
  set_has_att2();
  att2_ = value;
}

// required int32 att3 = 3;
inline bool Performance_innersimplePerformance_10::has_att3() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Performance_innersimplePerformance_10::set_has_att3() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Performance_innersimplePerformance_10::clear_has_att3() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Performance_innersimplePerformance_10::clear_att3() {
  att3_ = 0;
  clear_has_att3();
}
inline ::google::protobuf::int32 Performance_innersimplePerformance_10::att3() const {
  return att3_;
}
inline void Performance_innersimplePerformance_10::set_att3(::google::protobuf::int32 value) {
  set_has_att3();
  att3_ = value;
}

// required int32 att4 = 4;
inline bool Performance_innersimplePerformance_10::has_att4() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Performance_innersimplePerformance_10::set_has_att4() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Performance_innersimplePerformance_10::clear_has_att4() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Performance_innersimplePerformance_10::clear_att4() {
  att4_ = 0;
  clear_has_att4();
}
inline ::google::protobuf::int32 Performance_innersimplePerformance_10::att4() const {
  return att4_;
}
inline void Performance_innersimplePerformance_10::set_att4(::google::protobuf::int32 value) {
  set_has_att4();
  att4_ = value;
}

// required int32 att5 = 5;
inline bool Performance_innersimplePerformance_10::has_att5() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Performance_innersimplePerformance_10::set_has_att5() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Performance_innersimplePerformance_10::clear_has_att5() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Performance_innersimplePerformance_10::clear_att5() {
  att5_ = 0;
  clear_has_att5();
}
inline ::google::protobuf::int32 Performance_innersimplePerformance_10::att5() const {
  return att5_;
}
inline void Performance_innersimplePerformance_10::set_att5(::google::protobuf::int32 value) {
  set_has_att5();
  att5_ = value;
}

// required int32 att6 = 6;
inline bool Performance_innersimplePerformance_10::has_att6() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Performance_innersimplePerformance_10::set_has_att6() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Performance_innersimplePerformance_10::clear_has_att6() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Performance_innersimplePerformance_10::clear_att6() {
  att6_ = 0;
  clear_has_att6();
}
inline ::google::protobuf::int32 Performance_innersimplePerformance_10::att6() const {
  return att6_;
}
inline void Performance_innersimplePerformance_10::set_att6(::google::protobuf::int32 value) {
  set_has_att6();
  att6_ = value;
}

// required int32 att7 = 7;
inline bool Performance_innersimplePerformance_10::has_att7() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Performance_innersimplePerformance_10::set_has_att7() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Performance_innersimplePerformance_10::clear_has_att7() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Performance_innersimplePerformance_10::clear_att7() {
  att7_ = 0;
  clear_has_att7();
}
inline ::google::protobuf::int32 Performance_innersimplePerformance_10::att7() const {
  return att7_;
}
inline void Performance_innersimplePerformance_10::set_att7(::google::protobuf::int32 value) {
  set_has_att7();
  att7_ = value;
}

// required int32 att8 = 8;
inline bool Performance_innersimplePerformance_10::has_att8() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Performance_innersimplePerformance_10::set_has_att8() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Performance_innersimplePerformance_10::clear_has_att8() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Performance_innersimplePerformance_10::clear_att8() {
  att8_ = 0;
  clear_has_att8();
}
inline ::google::protobuf::int32 Performance_innersimplePerformance_10::att8() const {
  return att8_;
}
inline void Performance_innersimplePerformance_10::set_att8(::google::protobuf::int32 value) {
  set_has_att8();
  att8_ = value;
}

// required int32 att9 = 9;
inline bool Performance_innersimplePerformance_10::has_att9() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Performance_innersimplePerformance_10::set_has_att9() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Performance_innersimplePerformance_10::clear_has_att9() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Performance_innersimplePerformance_10::clear_att9() {
  att9_ = 0;
  clear_has_att9();
}
inline ::google::protobuf::int32 Performance_innersimplePerformance_10::att9() const {
  return att9_;
}
inline void Performance_innersimplePerformance_10::set_att9(::google::protobuf::int32 value) {
  set_has_att9();
  att9_ = value;
}

// required int32 att10 = 10;
inline bool Performance_innersimplePerformance_10::has_att10() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Performance_innersimplePerformance_10::set_has_att10() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Performance_innersimplePerformance_10::clear_has_att10() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Performance_innersimplePerformance_10::clear_att10() {
  att10_ = 0;
  clear_has_att10();
}
inline ::google::protobuf::int32 Performance_innersimplePerformance_10::att10() const {
  return att10_;
}
inline void Performance_innersimplePerformance_10::set_att10(::google::protobuf::int32 value) {
  set_has_att10();
  att10_ = value;
}

// -------------------------------------------------------------------

// Performance_outersimplePerformance_10

// required .performance.Performance.innersimplePerformance_10 att1 = 1;
inline bool Performance_outersimplePerformance_10::has_att1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Performance_outersimplePerformance_10::set_has_att1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Performance_outersimplePerformance_10::clear_has_att1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Performance_outersimplePerformance_10::clear_att1() {
  if (att1_ != NULL) att1_->::performance::Performance_innersimplePerformance_10::Clear();
  clear_has_att1();
}
inline const ::performance::Performance_innersimplePerformance_10& Performance_outersimplePerformance_10::att1() const {
  return att1_ != NULL ? *att1_ : *default_instance_->att1_;
}
inline ::performance::Performance_innersimplePerformance_10* Performance_outersimplePerformance_10::mutable_att1() {
  set_has_att1();
  if (att1_ == NULL) att1_ = new ::performance::Performance_innersimplePerformance_10;
  return att1_;
}
inline ::performance::Performance_innersimplePerformance_10* Performance_outersimplePerformance_10::release_att1() {
  clear_has_att1();
  ::performance::Performance_innersimplePerformance_10* temp = att1_;
  att1_ = NULL;
  return temp;
}
inline void Performance_outersimplePerformance_10::set_allocated_att1(::performance::Performance_innersimplePerformance_10* att1) {
  delete att1_;
  att1_ = att1;
  if (att1) {
    set_has_att1();
  } else {
    clear_has_att1();
  }
}

// required .performance.Performance.innersimplePerformance_10 att2 = 2;
inline bool Performance_outersimplePerformance_10::has_att2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Performance_outersimplePerformance_10::set_has_att2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Performance_outersimplePerformance_10::clear_has_att2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Performance_outersimplePerformance_10::clear_att2() {
  if (att2_ != NULL) att2_->::performance::Performance_innersimplePerformance_10::Clear();
  clear_has_att2();
}
inline const ::performance::Performance_innersimplePerformance_10& Performance_outersimplePerformance_10::att2() const {
  return att2_ != NULL ? *att2_ : *default_instance_->att2_;
}
inline ::performance::Performance_innersimplePerformance_10* Performance_outersimplePerformance_10::mutable_att2() {
  set_has_att2();
  if (att2_ == NULL) att2_ = new ::performance::Performance_innersimplePerformance_10;
  return att2_;
}
inline ::performance::Performance_innersimplePerformance_10* Performance_outersimplePerformance_10::release_att2() {
  clear_has_att2();
  ::performance::Performance_innersimplePerformance_10* temp = att2_;
  att2_ = NULL;
  return temp;
}
inline void Performance_outersimplePerformance_10::set_allocated_att2(::performance::Performance_innersimplePerformance_10* att2) {
  delete att2_;
  att2_ = att2;
  if (att2) {
    set_has_att2();
  } else {
    clear_has_att2();
  }
}

// required .performance.Performance.innersimplePerformance_10 att3 = 3;
inline bool Performance_outersimplePerformance_10::has_att3() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Performance_outersimplePerformance_10::set_has_att3() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Performance_outersimplePerformance_10::clear_has_att3() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Performance_outersimplePerformance_10::clear_att3() {
  if (att3_ != NULL) att3_->::performance::Performance_innersimplePerformance_10::Clear();
  clear_has_att3();
}
inline const ::performance::Performance_innersimplePerformance_10& Performance_outersimplePerformance_10::att3() const {
  return att3_ != NULL ? *att3_ : *default_instance_->att3_;
}
inline ::performance::Performance_innersimplePerformance_10* Performance_outersimplePerformance_10::mutable_att3() {
  set_has_att3();
  if (att3_ == NULL) att3_ = new ::performance::Performance_innersimplePerformance_10;
  return att3_;
}
inline ::performance::Performance_innersimplePerformance_10* Performance_outersimplePerformance_10::release_att3() {
  clear_has_att3();
  ::performance::Performance_innersimplePerformance_10* temp = att3_;
  att3_ = NULL;
  return temp;
}
inline void Performance_outersimplePerformance_10::set_allocated_att3(::performance::Performance_innersimplePerformance_10* att3) {
  delete att3_;
  att3_ = att3;
  if (att3) {
    set_has_att3();
  } else {
    clear_has_att3();
  }
}

// required .performance.Performance.innersimplePerformance_10 att4 = 4;
inline bool Performance_outersimplePerformance_10::has_att4() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Performance_outersimplePerformance_10::set_has_att4() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Performance_outersimplePerformance_10::clear_has_att4() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Performance_outersimplePerformance_10::clear_att4() {
  if (att4_ != NULL) att4_->::performance::Performance_innersimplePerformance_10::Clear();
  clear_has_att4();
}
inline const ::performance::Performance_innersimplePerformance_10& Performance_outersimplePerformance_10::att4() const {
  return att4_ != NULL ? *att4_ : *default_instance_->att4_;
}
inline ::performance::Performance_innersimplePerformance_10* Performance_outersimplePerformance_10::mutable_att4() {
  set_has_att4();
  if (att4_ == NULL) att4_ = new ::performance::Performance_innersimplePerformance_10;
  return att4_;
}
inline ::performance::Performance_innersimplePerformance_10* Performance_outersimplePerformance_10::release_att4() {
  clear_has_att4();
  ::performance::Performance_innersimplePerformance_10* temp = att4_;
  att4_ = NULL;
  return temp;
}
inline void Performance_outersimplePerformance_10::set_allocated_att4(::performance::Performance_innersimplePerformance_10* att4) {
  delete att4_;
  att4_ = att4;
  if (att4) {
    set_has_att4();
  } else {
    clear_has_att4();
  }
}

// required .performance.Performance.innersimplePerformance_10 att5 = 5;
inline bool Performance_outersimplePerformance_10::has_att5() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Performance_outersimplePerformance_10::set_has_att5() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Performance_outersimplePerformance_10::clear_has_att5() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Performance_outersimplePerformance_10::clear_att5() {
  if (att5_ != NULL) att5_->::performance::Performance_innersimplePerformance_10::Clear();
  clear_has_att5();
}
inline const ::performance::Performance_innersimplePerformance_10& Performance_outersimplePerformance_10::att5() const {
  return att5_ != NULL ? *att5_ : *default_instance_->att5_;
}
inline ::performance::Performance_innersimplePerformance_10* Performance_outersimplePerformance_10::mutable_att5() {
  set_has_att5();
  if (att5_ == NULL) att5_ = new ::performance::Performance_innersimplePerformance_10;
  return att5_;
}
inline ::performance::Performance_innersimplePerformance_10* Performance_outersimplePerformance_10::release_att5() {
  clear_has_att5();
  ::performance::Performance_innersimplePerformance_10* temp = att5_;
  att5_ = NULL;
  return temp;
}
inline void Performance_outersimplePerformance_10::set_allocated_att5(::performance::Performance_innersimplePerformance_10* att5) {
  delete att5_;
  att5_ = att5;
  if (att5) {
    set_has_att5();
  } else {
    clear_has_att5();
  }
}

// required .performance.Performance.innersimplePerformance_10 att6 = 6;
inline bool Performance_outersimplePerformance_10::has_att6() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Performance_outersimplePerformance_10::set_has_att6() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Performance_outersimplePerformance_10::clear_has_att6() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Performance_outersimplePerformance_10::clear_att6() {
  if (att6_ != NULL) att6_->::performance::Performance_innersimplePerformance_10::Clear();
  clear_has_att6();
}
inline const ::performance::Performance_innersimplePerformance_10& Performance_outersimplePerformance_10::att6() const {
  return att6_ != NULL ? *att6_ : *default_instance_->att6_;
}
inline ::performance::Performance_innersimplePerformance_10* Performance_outersimplePerformance_10::mutable_att6() {
  set_has_att6();
  if (att6_ == NULL) att6_ = new ::performance::Performance_innersimplePerformance_10;
  return att6_;
}
inline ::performance::Performance_innersimplePerformance_10* Performance_outersimplePerformance_10::release_att6() {
  clear_has_att6();
  ::performance::Performance_innersimplePerformance_10* temp = att6_;
  att6_ = NULL;
  return temp;
}
inline void Performance_outersimplePerformance_10::set_allocated_att6(::performance::Performance_innersimplePerformance_10* att6) {
  delete att6_;
  att6_ = att6;
  if (att6) {
    set_has_att6();
  } else {
    clear_has_att6();
  }
}

// required .performance.Performance.innersimplePerformance_10 att7 = 7;
inline bool Performance_outersimplePerformance_10::has_att7() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Performance_outersimplePerformance_10::set_has_att7() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Performance_outersimplePerformance_10::clear_has_att7() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Performance_outersimplePerformance_10::clear_att7() {
  if (att7_ != NULL) att7_->::performance::Performance_innersimplePerformance_10::Clear();
  clear_has_att7();
}
inline const ::performance::Performance_innersimplePerformance_10& Performance_outersimplePerformance_10::att7() const {
  return att7_ != NULL ? *att7_ : *default_instance_->att7_;
}
inline ::performance::Performance_innersimplePerformance_10* Performance_outersimplePerformance_10::mutable_att7() {
  set_has_att7();
  if (att7_ == NULL) att7_ = new ::performance::Performance_innersimplePerformance_10;
  return att7_;
}
inline ::performance::Performance_innersimplePerformance_10* Performance_outersimplePerformance_10::release_att7() {
  clear_has_att7();
  ::performance::Performance_innersimplePerformance_10* temp = att7_;
  att7_ = NULL;
  return temp;
}
inline void Performance_outersimplePerformance_10::set_allocated_att7(::performance::Performance_innersimplePerformance_10* att7) {
  delete att7_;
  att7_ = att7;
  if (att7) {
    set_has_att7();
  } else {
    clear_has_att7();
  }
}

// required .performance.Performance.innersimplePerformance_10 att8 = 8;
inline bool Performance_outersimplePerformance_10::has_att8() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Performance_outersimplePerformance_10::set_has_att8() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Performance_outersimplePerformance_10::clear_has_att8() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Performance_outersimplePerformance_10::clear_att8() {
  if (att8_ != NULL) att8_->::performance::Performance_innersimplePerformance_10::Clear();
  clear_has_att8();
}
inline const ::performance::Performance_innersimplePerformance_10& Performance_outersimplePerformance_10::att8() const {
  return att8_ != NULL ? *att8_ : *default_instance_->att8_;
}
inline ::performance::Performance_innersimplePerformance_10* Performance_outersimplePerformance_10::mutable_att8() {
  set_has_att8();
  if (att8_ == NULL) att8_ = new ::performance::Performance_innersimplePerformance_10;
  return att8_;
}
inline ::performance::Performance_innersimplePerformance_10* Performance_outersimplePerformance_10::release_att8() {
  clear_has_att8();
  ::performance::Performance_innersimplePerformance_10* temp = att8_;
  att8_ = NULL;
  return temp;
}
inline void Performance_outersimplePerformance_10::set_allocated_att8(::performance::Performance_innersimplePerformance_10* att8) {
  delete att8_;
  att8_ = att8;
  if (att8) {
    set_has_att8();
  } else {
    clear_has_att8();
  }
}

// required .performance.Performance.innersimplePerformance_10 att9 = 9;
inline bool Performance_outersimplePerformance_10::has_att9() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Performance_outersimplePerformance_10::set_has_att9() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Performance_outersimplePerformance_10::clear_has_att9() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Performance_outersimplePerformance_10::clear_att9() {
  if (att9_ != NULL) att9_->::performance::Performance_innersimplePerformance_10::Clear();
  clear_has_att9();
}
inline const ::performance::Performance_innersimplePerformance_10& Performance_outersimplePerformance_10::att9() const {
  return att9_ != NULL ? *att9_ : *default_instance_->att9_;
}
inline ::performance::Performance_innersimplePerformance_10* Performance_outersimplePerformance_10::mutable_att9() {
  set_has_att9();
  if (att9_ == NULL) att9_ = new ::performance::Performance_innersimplePerformance_10;
  return att9_;
}
inline ::performance::Performance_innersimplePerformance_10* Performance_outersimplePerformance_10::release_att9() {
  clear_has_att9();
  ::performance::Performance_innersimplePerformance_10* temp = att9_;
  att9_ = NULL;
  return temp;
}
inline void Performance_outersimplePerformance_10::set_allocated_att9(::performance::Performance_innersimplePerformance_10* att9) {
  delete att9_;
  att9_ = att9;
  if (att9) {
    set_has_att9();
  } else {
    clear_has_att9();
  }
}

// required .performance.Performance.innersimplePerformance_10 att10 = 10;
inline bool Performance_outersimplePerformance_10::has_att10() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Performance_outersimplePerformance_10::set_has_att10() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Performance_outersimplePerformance_10::clear_has_att10() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Performance_outersimplePerformance_10::clear_att10() {
  if (att10_ != NULL) att10_->::performance::Performance_innersimplePerformance_10::Clear();
  clear_has_att10();
}
inline const ::performance::Performance_innersimplePerformance_10& Performance_outersimplePerformance_10::att10() const {
  return att10_ != NULL ? *att10_ : *default_instance_->att10_;
}
inline ::performance::Performance_innersimplePerformance_10* Performance_outersimplePerformance_10::mutable_att10() {
  set_has_att10();
  if (att10_ == NULL) att10_ = new ::performance::Performance_innersimplePerformance_10;
  return att10_;
}
inline ::performance::Performance_innersimplePerformance_10* Performance_outersimplePerformance_10::release_att10() {
  clear_has_att10();
  ::performance::Performance_innersimplePerformance_10* temp = att10_;
  att10_ = NULL;
  return temp;
}
inline void Performance_outersimplePerformance_10::set_allocated_att10(::performance::Performance_innersimplePerformance_10* att10) {
  delete att10_;
  att10_ = att10;
  if (att10) {
    set_has_att10();
  } else {
    clear_has_att10();
  }
}

// -------------------------------------------------------------------

// Performance_innercomplexPerformance_1

// required int32 att1 = 1;
inline bool Performance_innercomplexPerformance_1::has_att1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Performance_innercomplexPerformance_1::set_has_att1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Performance_innercomplexPerformance_1::clear_has_att1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Performance_innercomplexPerformance_1::clear_att1() {
  att1_ = 0;
  clear_has_att1();
}
inline ::google::protobuf::int32 Performance_innercomplexPerformance_1::att1() const {
  return att1_;
}
inline void Performance_innercomplexPerformance_1::set_att1(::google::protobuf::int32 value) {
  set_has_att1();
  att1_ = value;
}

// required int64 att2 = 2;
inline bool Performance_innercomplexPerformance_1::has_att2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Performance_innercomplexPerformance_1::set_has_att2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Performance_innercomplexPerformance_1::clear_has_att2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Performance_innercomplexPerformance_1::clear_att2() {
  att2_ = GOOGLE_LONGLONG(0);
  clear_has_att2();
}
inline ::google::protobuf::int64 Performance_innercomplexPerformance_1::att2() const {
  return att2_;
}
inline void Performance_innercomplexPerformance_1::set_att2(::google::protobuf::int64 value) {
  set_has_att2();
  att2_ = value;
}

// required string att3 = 3;
inline bool Performance_innercomplexPerformance_1::has_att3() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Performance_innercomplexPerformance_1::set_has_att3() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Performance_innercomplexPerformance_1::clear_has_att3() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Performance_innercomplexPerformance_1::clear_att3() {
  if (att3_ != &::google::protobuf::internal::kEmptyString) {
    att3_->clear();
  }
  clear_has_att3();
}
inline const ::std::string& Performance_innercomplexPerformance_1::att3() const {
  return *att3_;
}
inline void Performance_innercomplexPerformance_1::set_att3(const ::std::string& value) {
  set_has_att3();
  if (att3_ == &::google::protobuf::internal::kEmptyString) {
    att3_ = new ::std::string;
  }
  att3_->assign(value);
}
inline void Performance_innercomplexPerformance_1::set_att3(const char* value) {
  set_has_att3();
  if (att3_ == &::google::protobuf::internal::kEmptyString) {
    att3_ = new ::std::string;
  }
  att3_->assign(value);
}
inline void Performance_innercomplexPerformance_1::set_att3(const char* value, size_t size) {
  set_has_att3();
  if (att3_ == &::google::protobuf::internal::kEmptyString) {
    att3_ = new ::std::string;
  }
  att3_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Performance_innercomplexPerformance_1::mutable_att3() {
  set_has_att3();
  if (att3_ == &::google::protobuf::internal::kEmptyString) {
    att3_ = new ::std::string;
  }
  return att3_;
}
inline ::std::string* Performance_innercomplexPerformance_1::release_att3() {
  clear_has_att3();
  if (att3_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = att3_;
    att3_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Performance_innercomplexPerformance_1::set_allocated_att3(::std::string* att3) {
  if (att3_ != &::google::protobuf::internal::kEmptyString) {
    delete att3_;
  }
  if (att3) {
    set_has_att3();
    att3_ = att3;
  } else {
    clear_has_att3();
    att3_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required float att4 = 4;
inline bool Performance_innercomplexPerformance_1::has_att4() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Performance_innercomplexPerformance_1::set_has_att4() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Performance_innercomplexPerformance_1::clear_has_att4() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Performance_innercomplexPerformance_1::clear_att4() {
  att4_ = 0;
  clear_has_att4();
}
inline float Performance_innercomplexPerformance_1::att4() const {
  return att4_;
}
inline void Performance_innercomplexPerformance_1::set_att4(float value) {
  set_has_att4();
  att4_ = value;
}

// required double att5 = 5;
inline bool Performance_innercomplexPerformance_1::has_att5() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Performance_innercomplexPerformance_1::set_has_att5() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Performance_innercomplexPerformance_1::clear_has_att5() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Performance_innercomplexPerformance_1::clear_att5() {
  att5_ = 0;
  clear_has_att5();
}
inline double Performance_innercomplexPerformance_1::att5() const {
  return att5_;
}
inline void Performance_innercomplexPerformance_1::set_att5(double value) {
  set_has_att5();
  att5_ = value;
}

// required bool att6 = 6;
inline bool Performance_innercomplexPerformance_1::has_att6() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Performance_innercomplexPerformance_1::set_has_att6() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Performance_innercomplexPerformance_1::clear_has_att6() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Performance_innercomplexPerformance_1::clear_att6() {
  att6_ = false;
  clear_has_att6();
}
inline bool Performance_innercomplexPerformance_1::att6() const {
  return att6_;
}
inline void Performance_innercomplexPerformance_1::set_att6(bool value) {
  set_has_att6();
  att6_ = value;
}

// -------------------------------------------------------------------

// Performance_outercomplexPerformance_1

// required int32 att1 = 1;
inline bool Performance_outercomplexPerformance_1::has_att1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Performance_outercomplexPerformance_1::set_has_att1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Performance_outercomplexPerformance_1::clear_has_att1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Performance_outercomplexPerformance_1::clear_att1() {
  att1_ = 0;
  clear_has_att1();
}
inline ::google::protobuf::int32 Performance_outercomplexPerformance_1::att1() const {
  return att1_;
}
inline void Performance_outercomplexPerformance_1::set_att1(::google::protobuf::int32 value) {
  set_has_att1();
  att1_ = value;
}

// required int64 att2 = 2;
inline bool Performance_outercomplexPerformance_1::has_att2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Performance_outercomplexPerformance_1::set_has_att2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Performance_outercomplexPerformance_1::clear_has_att2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Performance_outercomplexPerformance_1::clear_att2() {
  att2_ = GOOGLE_LONGLONG(0);
  clear_has_att2();
}
inline ::google::protobuf::int64 Performance_outercomplexPerformance_1::att2() const {
  return att2_;
}
inline void Performance_outercomplexPerformance_1::set_att2(::google::protobuf::int64 value) {
  set_has_att2();
  att2_ = value;
}

// required string att3 = 3;
inline bool Performance_outercomplexPerformance_1::has_att3() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Performance_outercomplexPerformance_1::set_has_att3() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Performance_outercomplexPerformance_1::clear_has_att3() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Performance_outercomplexPerformance_1::clear_att3() {
  if (att3_ != &::google::protobuf::internal::kEmptyString) {
    att3_->clear();
  }
  clear_has_att3();
}
inline const ::std::string& Performance_outercomplexPerformance_1::att3() const {
  return *att3_;
}
inline void Performance_outercomplexPerformance_1::set_att3(const ::std::string& value) {
  set_has_att3();
  if (att3_ == &::google::protobuf::internal::kEmptyString) {
    att3_ = new ::std::string;
  }
  att3_->assign(value);
}
inline void Performance_outercomplexPerformance_1::set_att3(const char* value) {
  set_has_att3();
  if (att3_ == &::google::protobuf::internal::kEmptyString) {
    att3_ = new ::std::string;
  }
  att3_->assign(value);
}
inline void Performance_outercomplexPerformance_1::set_att3(const char* value, size_t size) {
  set_has_att3();
  if (att3_ == &::google::protobuf::internal::kEmptyString) {
    att3_ = new ::std::string;
  }
  att3_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Performance_outercomplexPerformance_1::mutable_att3() {
  set_has_att3();
  if (att3_ == &::google::protobuf::internal::kEmptyString) {
    att3_ = new ::std::string;
  }
  return att3_;
}
inline ::std::string* Performance_outercomplexPerformance_1::release_att3() {
  clear_has_att3();
  if (att3_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = att3_;
    att3_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Performance_outercomplexPerformance_1::set_allocated_att3(::std::string* att3) {
  if (att3_ != &::google::protobuf::internal::kEmptyString) {
    delete att3_;
  }
  if (att3) {
    set_has_att3();
    att3_ = att3;
  } else {
    clear_has_att3();
    att3_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required .performance.Performance.innercomplexPerformance_1 att4 = 4;
inline bool Performance_outercomplexPerformance_1::has_att4() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Performance_outercomplexPerformance_1::set_has_att4() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Performance_outercomplexPerformance_1::clear_has_att4() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Performance_outercomplexPerformance_1::clear_att4() {
  if (att4_ != NULL) att4_->::performance::Performance_innercomplexPerformance_1::Clear();
  clear_has_att4();
}
inline const ::performance::Performance_innercomplexPerformance_1& Performance_outercomplexPerformance_1::att4() const {
  return att4_ != NULL ? *att4_ : *default_instance_->att4_;
}
inline ::performance::Performance_innercomplexPerformance_1* Performance_outercomplexPerformance_1::mutable_att4() {
  set_has_att4();
  if (att4_ == NULL) att4_ = new ::performance::Performance_innercomplexPerformance_1;
  return att4_;
}
inline ::performance::Performance_innercomplexPerformance_1* Performance_outercomplexPerformance_1::release_att4() {
  clear_has_att4();
  ::performance::Performance_innercomplexPerformance_1* temp = att4_;
  att4_ = NULL;
  return temp;
}
inline void Performance_outercomplexPerformance_1::set_allocated_att4(::performance::Performance_innercomplexPerformance_1* att4) {
  delete att4_;
  att4_ = att4;
  if (att4) {
    set_has_att4();
  } else {
    clear_has_att4();
  }
}

// required float att5 = 5;
inline bool Performance_outercomplexPerformance_1::has_att5() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Performance_outercomplexPerformance_1::set_has_att5() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Performance_outercomplexPerformance_1::clear_has_att5() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Performance_outercomplexPerformance_1::clear_att5() {
  att5_ = 0;
  clear_has_att5();
}
inline float Performance_outercomplexPerformance_1::att5() const {
  return att5_;
}
inline void Performance_outercomplexPerformance_1::set_att5(float value) {
  set_has_att5();
  att5_ = value;
}

// required double att6 = 6;
inline bool Performance_outercomplexPerformance_1::has_att6() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Performance_outercomplexPerformance_1::set_has_att6() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Performance_outercomplexPerformance_1::clear_has_att6() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Performance_outercomplexPerformance_1::clear_att6() {
  att6_ = 0;
  clear_has_att6();
}
inline double Performance_outercomplexPerformance_1::att6() const {
  return att6_;
}
inline void Performance_outercomplexPerformance_1::set_att6(double value) {
  set_has_att6();
  att6_ = value;
}

// required bool att7 = 7;
inline bool Performance_outercomplexPerformance_1::has_att7() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Performance_outercomplexPerformance_1::set_has_att7() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Performance_outercomplexPerformance_1::clear_has_att7() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Performance_outercomplexPerformance_1::clear_att7() {
  att7_ = false;
  clear_has_att7();
}
inline bool Performance_outercomplexPerformance_1::att7() const {
  return att7_;
}
inline void Performance_outercomplexPerformance_1::set_att7(bool value) {
  set_has_att7();
  att7_ = value;
}

// -------------------------------------------------------------------

// Performance_innercomplexPerformance_2

// required int32 att1 = 1;
inline bool Performance_innercomplexPerformance_2::has_att1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Performance_innercomplexPerformance_2::set_has_att1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Performance_innercomplexPerformance_2::clear_has_att1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Performance_innercomplexPerformance_2::clear_att1() {
  att1_ = 0;
  clear_has_att1();
}
inline ::google::protobuf::int32 Performance_innercomplexPerformance_2::att1() const {
  return att1_;
}
inline void Performance_innercomplexPerformance_2::set_att1(::google::protobuf::int32 value) {
  set_has_att1();
  att1_ = value;
}

// required int32 att2 = 2;
inline bool Performance_innercomplexPerformance_2::has_att2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Performance_innercomplexPerformance_2::set_has_att2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Performance_innercomplexPerformance_2::clear_has_att2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Performance_innercomplexPerformance_2::clear_att2() {
  att2_ = 0;
  clear_has_att2();
}
inline ::google::protobuf::int32 Performance_innercomplexPerformance_2::att2() const {
  return att2_;
}
inline void Performance_innercomplexPerformance_2::set_att2(::google::protobuf::int32 value) {
  set_has_att2();
  att2_ = value;
}

// required int64 att3 = 3;
inline bool Performance_innercomplexPerformance_2::has_att3() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Performance_innercomplexPerformance_2::set_has_att3() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Performance_innercomplexPerformance_2::clear_has_att3() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Performance_innercomplexPerformance_2::clear_att3() {
  att3_ = GOOGLE_LONGLONG(0);
  clear_has_att3();
}
inline ::google::protobuf::int64 Performance_innercomplexPerformance_2::att3() const {
  return att3_;
}
inline void Performance_innercomplexPerformance_2::set_att3(::google::protobuf::int64 value) {
  set_has_att3();
  att3_ = value;
}

// required int64 att4 = 4;
inline bool Performance_innercomplexPerformance_2::has_att4() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Performance_innercomplexPerformance_2::set_has_att4() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Performance_innercomplexPerformance_2::clear_has_att4() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Performance_innercomplexPerformance_2::clear_att4() {
  att4_ = GOOGLE_LONGLONG(0);
  clear_has_att4();
}
inline ::google::protobuf::int64 Performance_innercomplexPerformance_2::att4() const {
  return att4_;
}
inline void Performance_innercomplexPerformance_2::set_att4(::google::protobuf::int64 value) {
  set_has_att4();
  att4_ = value;
}

// required string att5 = 5;
inline bool Performance_innercomplexPerformance_2::has_att5() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Performance_innercomplexPerformance_2::set_has_att5() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Performance_innercomplexPerformance_2::clear_has_att5() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Performance_innercomplexPerformance_2::clear_att5() {
  if (att5_ != &::google::protobuf::internal::kEmptyString) {
    att5_->clear();
  }
  clear_has_att5();
}
inline const ::std::string& Performance_innercomplexPerformance_2::att5() const {
  return *att5_;
}
inline void Performance_innercomplexPerformance_2::set_att5(const ::std::string& value) {
  set_has_att5();
  if (att5_ == &::google::protobuf::internal::kEmptyString) {
    att5_ = new ::std::string;
  }
  att5_->assign(value);
}
inline void Performance_innercomplexPerformance_2::set_att5(const char* value) {
  set_has_att5();
  if (att5_ == &::google::protobuf::internal::kEmptyString) {
    att5_ = new ::std::string;
  }
  att5_->assign(value);
}
inline void Performance_innercomplexPerformance_2::set_att5(const char* value, size_t size) {
  set_has_att5();
  if (att5_ == &::google::protobuf::internal::kEmptyString) {
    att5_ = new ::std::string;
  }
  att5_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Performance_innercomplexPerformance_2::mutable_att5() {
  set_has_att5();
  if (att5_ == &::google::protobuf::internal::kEmptyString) {
    att5_ = new ::std::string;
  }
  return att5_;
}
inline ::std::string* Performance_innercomplexPerformance_2::release_att5() {
  clear_has_att5();
  if (att5_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = att5_;
    att5_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Performance_innercomplexPerformance_2::set_allocated_att5(::std::string* att5) {
  if (att5_ != &::google::protobuf::internal::kEmptyString) {
    delete att5_;
  }
  if (att5) {
    set_has_att5();
    att5_ = att5;
  } else {
    clear_has_att5();
    att5_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string att6 = 6;
inline bool Performance_innercomplexPerformance_2::has_att6() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Performance_innercomplexPerformance_2::set_has_att6() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Performance_innercomplexPerformance_2::clear_has_att6() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Performance_innercomplexPerformance_2::clear_att6() {
  if (att6_ != &::google::protobuf::internal::kEmptyString) {
    att6_->clear();
  }
  clear_has_att6();
}
inline const ::std::string& Performance_innercomplexPerformance_2::att6() const {
  return *att6_;
}
inline void Performance_innercomplexPerformance_2::set_att6(const ::std::string& value) {
  set_has_att6();
  if (att6_ == &::google::protobuf::internal::kEmptyString) {
    att6_ = new ::std::string;
  }
  att6_->assign(value);
}
inline void Performance_innercomplexPerformance_2::set_att6(const char* value) {
  set_has_att6();
  if (att6_ == &::google::protobuf::internal::kEmptyString) {
    att6_ = new ::std::string;
  }
  att6_->assign(value);
}
inline void Performance_innercomplexPerformance_2::set_att6(const char* value, size_t size) {
  set_has_att6();
  if (att6_ == &::google::protobuf::internal::kEmptyString) {
    att6_ = new ::std::string;
  }
  att6_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Performance_innercomplexPerformance_2::mutable_att6() {
  set_has_att6();
  if (att6_ == &::google::protobuf::internal::kEmptyString) {
    att6_ = new ::std::string;
  }
  return att6_;
}
inline ::std::string* Performance_innercomplexPerformance_2::release_att6() {
  clear_has_att6();
  if (att6_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = att6_;
    att6_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Performance_innercomplexPerformance_2::set_allocated_att6(::std::string* att6) {
  if (att6_ != &::google::protobuf::internal::kEmptyString) {
    delete att6_;
  }
  if (att6) {
    set_has_att6();
    att6_ = att6;
  } else {
    clear_has_att6();
    att6_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required float att7 = 7;
inline bool Performance_innercomplexPerformance_2::has_att7() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Performance_innercomplexPerformance_2::set_has_att7() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Performance_innercomplexPerformance_2::clear_has_att7() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Performance_innercomplexPerformance_2::clear_att7() {
  att7_ = 0;
  clear_has_att7();
}
inline float Performance_innercomplexPerformance_2::att7() const {
  return att7_;
}
inline void Performance_innercomplexPerformance_2::set_att7(float value) {
  set_has_att7();
  att7_ = value;
}

// required float att8 = 8;
inline bool Performance_innercomplexPerformance_2::has_att8() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Performance_innercomplexPerformance_2::set_has_att8() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Performance_innercomplexPerformance_2::clear_has_att8() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Performance_innercomplexPerformance_2::clear_att8() {
  att8_ = 0;
  clear_has_att8();
}
inline float Performance_innercomplexPerformance_2::att8() const {
  return att8_;
}
inline void Performance_innercomplexPerformance_2::set_att8(float value) {
  set_has_att8();
  att8_ = value;
}

// required double att9 = 9;
inline bool Performance_innercomplexPerformance_2::has_att9() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Performance_innercomplexPerformance_2::set_has_att9() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Performance_innercomplexPerformance_2::clear_has_att9() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Performance_innercomplexPerformance_2::clear_att9() {
  att9_ = 0;
  clear_has_att9();
}
inline double Performance_innercomplexPerformance_2::att9() const {
  return att9_;
}
inline void Performance_innercomplexPerformance_2::set_att9(double value) {
  set_has_att9();
  att9_ = value;
}

// required double att10 = 10;
inline bool Performance_innercomplexPerformance_2::has_att10() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Performance_innercomplexPerformance_2::set_has_att10() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Performance_innercomplexPerformance_2::clear_has_att10() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Performance_innercomplexPerformance_2::clear_att10() {
  att10_ = 0;
  clear_has_att10();
}
inline double Performance_innercomplexPerformance_2::att10() const {
  return att10_;
}
inline void Performance_innercomplexPerformance_2::set_att10(double value) {
  set_has_att10();
  att10_ = value;
}

// required bool att11 = 11;
inline bool Performance_innercomplexPerformance_2::has_att11() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Performance_innercomplexPerformance_2::set_has_att11() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Performance_innercomplexPerformance_2::clear_has_att11() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Performance_innercomplexPerformance_2::clear_att11() {
  att11_ = false;
  clear_has_att11();
}
inline bool Performance_innercomplexPerformance_2::att11() const {
  return att11_;
}
inline void Performance_innercomplexPerformance_2::set_att11(bool value) {
  set_has_att11();
  att11_ = value;
}

// required bool att12 = 12;
inline bool Performance_innercomplexPerformance_2::has_att12() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Performance_innercomplexPerformance_2::set_has_att12() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Performance_innercomplexPerformance_2::clear_has_att12() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Performance_innercomplexPerformance_2::clear_att12() {
  att12_ = false;
  clear_has_att12();
}
inline bool Performance_innercomplexPerformance_2::att12() const {
  return att12_;
}
inline void Performance_innercomplexPerformance_2::set_att12(bool value) {
  set_has_att12();
  att12_ = value;
}

// -------------------------------------------------------------------

// Performance_outercomplexPerformance_2

// required int32 att1 = 1;
inline bool Performance_outercomplexPerformance_2::has_att1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Performance_outercomplexPerformance_2::set_has_att1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Performance_outercomplexPerformance_2::clear_has_att1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Performance_outercomplexPerformance_2::clear_att1() {
  att1_ = 0;
  clear_has_att1();
}
inline ::google::protobuf::int32 Performance_outercomplexPerformance_2::att1() const {
  return att1_;
}
inline void Performance_outercomplexPerformance_2::set_att1(::google::protobuf::int32 value) {
  set_has_att1();
  att1_ = value;
}

// required int64 att2 = 2;
inline bool Performance_outercomplexPerformance_2::has_att2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Performance_outercomplexPerformance_2::set_has_att2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Performance_outercomplexPerformance_2::clear_has_att2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Performance_outercomplexPerformance_2::clear_att2() {
  att2_ = GOOGLE_LONGLONG(0);
  clear_has_att2();
}
inline ::google::protobuf::int64 Performance_outercomplexPerformance_2::att2() const {
  return att2_;
}
inline void Performance_outercomplexPerformance_2::set_att2(::google::protobuf::int64 value) {
  set_has_att2();
  att2_ = value;
}

// required string att3 = 3;
inline bool Performance_outercomplexPerformance_2::has_att3() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Performance_outercomplexPerformance_2::set_has_att3() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Performance_outercomplexPerformance_2::clear_has_att3() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Performance_outercomplexPerformance_2::clear_att3() {
  if (att3_ != &::google::protobuf::internal::kEmptyString) {
    att3_->clear();
  }
  clear_has_att3();
}
inline const ::std::string& Performance_outercomplexPerformance_2::att3() const {
  return *att3_;
}
inline void Performance_outercomplexPerformance_2::set_att3(const ::std::string& value) {
  set_has_att3();
  if (att3_ == &::google::protobuf::internal::kEmptyString) {
    att3_ = new ::std::string;
  }
  att3_->assign(value);
}
inline void Performance_outercomplexPerformance_2::set_att3(const char* value) {
  set_has_att3();
  if (att3_ == &::google::protobuf::internal::kEmptyString) {
    att3_ = new ::std::string;
  }
  att3_->assign(value);
}
inline void Performance_outercomplexPerformance_2::set_att3(const char* value, size_t size) {
  set_has_att3();
  if (att3_ == &::google::protobuf::internal::kEmptyString) {
    att3_ = new ::std::string;
  }
  att3_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Performance_outercomplexPerformance_2::mutable_att3() {
  set_has_att3();
  if (att3_ == &::google::protobuf::internal::kEmptyString) {
    att3_ = new ::std::string;
  }
  return att3_;
}
inline ::std::string* Performance_outercomplexPerformance_2::release_att3() {
  clear_has_att3();
  if (att3_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = att3_;
    att3_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Performance_outercomplexPerformance_2::set_allocated_att3(::std::string* att3) {
  if (att3_ != &::google::protobuf::internal::kEmptyString) {
    delete att3_;
  }
  if (att3) {
    set_has_att3();
    att3_ = att3;
  } else {
    clear_has_att3();
    att3_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required .performance.Performance.innercomplexPerformance_2 att4 = 4;
inline bool Performance_outercomplexPerformance_2::has_att4() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Performance_outercomplexPerformance_2::set_has_att4() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Performance_outercomplexPerformance_2::clear_has_att4() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Performance_outercomplexPerformance_2::clear_att4() {
  if (att4_ != NULL) att4_->::performance::Performance_innercomplexPerformance_2::Clear();
  clear_has_att4();
}
inline const ::performance::Performance_innercomplexPerformance_2& Performance_outercomplexPerformance_2::att4() const {
  return att4_ != NULL ? *att4_ : *default_instance_->att4_;
}
inline ::performance::Performance_innercomplexPerformance_2* Performance_outercomplexPerformance_2::mutable_att4() {
  set_has_att4();
  if (att4_ == NULL) att4_ = new ::performance::Performance_innercomplexPerformance_2;
  return att4_;
}
inline ::performance::Performance_innercomplexPerformance_2* Performance_outercomplexPerformance_2::release_att4() {
  clear_has_att4();
  ::performance::Performance_innercomplexPerformance_2* temp = att4_;
  att4_ = NULL;
  return temp;
}
inline void Performance_outercomplexPerformance_2::set_allocated_att4(::performance::Performance_innercomplexPerformance_2* att4) {
  delete att4_;
  att4_ = att4;
  if (att4) {
    set_has_att4();
  } else {
    clear_has_att4();
  }
}

// required float att5 = 5;
inline bool Performance_outercomplexPerformance_2::has_att5() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Performance_outercomplexPerformance_2::set_has_att5() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Performance_outercomplexPerformance_2::clear_has_att5() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Performance_outercomplexPerformance_2::clear_att5() {
  att5_ = 0;
  clear_has_att5();
}
inline float Performance_outercomplexPerformance_2::att5() const {
  return att5_;
}
inline void Performance_outercomplexPerformance_2::set_att5(float value) {
  set_has_att5();
  att5_ = value;
}

// required double att6 = 6;
inline bool Performance_outercomplexPerformance_2::has_att6() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Performance_outercomplexPerformance_2::set_has_att6() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Performance_outercomplexPerformance_2::clear_has_att6() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Performance_outercomplexPerformance_2::clear_att6() {
  att6_ = 0;
  clear_has_att6();
}
inline double Performance_outercomplexPerformance_2::att6() const {
  return att6_;
}
inline void Performance_outercomplexPerformance_2::set_att6(double value) {
  set_has_att6();
  att6_ = value;
}

// required bool att7 = 7;
inline bool Performance_outercomplexPerformance_2::has_att7() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Performance_outercomplexPerformance_2::set_has_att7() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Performance_outercomplexPerformance_2::clear_has_att7() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Performance_outercomplexPerformance_2::clear_att7() {
  att7_ = false;
  clear_has_att7();
}
inline bool Performance_outercomplexPerformance_2::att7() const {
  return att7_;
}
inline void Performance_outercomplexPerformance_2::set_att7(bool value) {
  set_has_att7();
  att7_ = value;
}

// required int64 att8 = 8;
inline bool Performance_outercomplexPerformance_2::has_att8() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Performance_outercomplexPerformance_2::set_has_att8() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Performance_outercomplexPerformance_2::clear_has_att8() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Performance_outercomplexPerformance_2::clear_att8() {
  att8_ = GOOGLE_LONGLONG(0);
  clear_has_att8();
}
inline ::google::protobuf::int64 Performance_outercomplexPerformance_2::att8() const {
  return att8_;
}
inline void Performance_outercomplexPerformance_2::set_att8(::google::protobuf::int64 value) {
  set_has_att8();
  att8_ = value;
}

// required string att9 = 9;
inline bool Performance_outercomplexPerformance_2::has_att9() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Performance_outercomplexPerformance_2::set_has_att9() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Performance_outercomplexPerformance_2::clear_has_att9() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Performance_outercomplexPerformance_2::clear_att9() {
  if (att9_ != &::google::protobuf::internal::kEmptyString) {
    att9_->clear();
  }
  clear_has_att9();
}
inline const ::std::string& Performance_outercomplexPerformance_2::att9() const {
  return *att9_;
}
inline void Performance_outercomplexPerformance_2::set_att9(const ::std::string& value) {
  set_has_att9();
  if (att9_ == &::google::protobuf::internal::kEmptyString) {
    att9_ = new ::std::string;
  }
  att9_->assign(value);
}
inline void Performance_outercomplexPerformance_2::set_att9(const char* value) {
  set_has_att9();
  if (att9_ == &::google::protobuf::internal::kEmptyString) {
    att9_ = new ::std::string;
  }
  att9_->assign(value);
}
inline void Performance_outercomplexPerformance_2::set_att9(const char* value, size_t size) {
  set_has_att9();
  if (att9_ == &::google::protobuf::internal::kEmptyString) {
    att9_ = new ::std::string;
  }
  att9_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Performance_outercomplexPerformance_2::mutable_att9() {
  set_has_att9();
  if (att9_ == &::google::protobuf::internal::kEmptyString) {
    att9_ = new ::std::string;
  }
  return att9_;
}
inline ::std::string* Performance_outercomplexPerformance_2::release_att9() {
  clear_has_att9();
  if (att9_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = att9_;
    att9_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Performance_outercomplexPerformance_2::set_allocated_att9(::std::string* att9) {
  if (att9_ != &::google::protobuf::internal::kEmptyString) {
    delete att9_;
  }
  if (att9) {
    set_has_att9();
    att9_ = att9;
  } else {
    clear_has_att9();
    att9_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required .performance.Performance.innercomplexPerformance_2 att10 = 10;
inline bool Performance_outercomplexPerformance_2::has_att10() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Performance_outercomplexPerformance_2::set_has_att10() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Performance_outercomplexPerformance_2::clear_has_att10() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Performance_outercomplexPerformance_2::clear_att10() {
  if (att10_ != NULL) att10_->::performance::Performance_innercomplexPerformance_2::Clear();
  clear_has_att10();
}
inline const ::performance::Performance_innercomplexPerformance_2& Performance_outercomplexPerformance_2::att10() const {
  return att10_ != NULL ? *att10_ : *default_instance_->att10_;
}
inline ::performance::Performance_innercomplexPerformance_2* Performance_outercomplexPerformance_2::mutable_att10() {
  set_has_att10();
  if (att10_ == NULL) att10_ = new ::performance::Performance_innercomplexPerformance_2;
  return att10_;
}
inline ::performance::Performance_innercomplexPerformance_2* Performance_outercomplexPerformance_2::release_att10() {
  clear_has_att10();
  ::performance::Performance_innercomplexPerformance_2* temp = att10_;
  att10_ = NULL;
  return temp;
}
inline void Performance_outercomplexPerformance_2::set_allocated_att10(::performance::Performance_innercomplexPerformance_2* att10) {
  delete att10_;
  att10_ = att10;
  if (att10) {
    set_has_att10();
  } else {
    clear_has_att10();
  }
}

// required float att11 = 11;
inline bool Performance_outercomplexPerformance_2::has_att11() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Performance_outercomplexPerformance_2::set_has_att11() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Performance_outercomplexPerformance_2::clear_has_att11() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Performance_outercomplexPerformance_2::clear_att11() {
  att11_ = 0;
  clear_has_att11();
}
inline float Performance_outercomplexPerformance_2::att11() const {
  return att11_;
}
inline void Performance_outercomplexPerformance_2::set_att11(float value) {
  set_has_att11();
  att11_ = value;
}

// required double att12 = 12;
inline bool Performance_outercomplexPerformance_2::has_att12() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Performance_outercomplexPerformance_2::set_has_att12() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Performance_outercomplexPerformance_2::clear_has_att12() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Performance_outercomplexPerformance_2::clear_att12() {
  att12_ = 0;
  clear_has_att12();
}
inline double Performance_outercomplexPerformance_2::att12() const {
  return att12_;
}
inline void Performance_outercomplexPerformance_2::set_att12(double value) {
  set_has_att12();
  att12_ = value;
}

// required bool att13 = 13;
inline bool Performance_outercomplexPerformance_2::has_att13() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Performance_outercomplexPerformance_2::set_has_att13() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Performance_outercomplexPerformance_2::clear_has_att13() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Performance_outercomplexPerformance_2::clear_att13() {
  att13_ = false;
  clear_has_att13();
}
inline bool Performance_outercomplexPerformance_2::att13() const {
  return att13_;
}
inline void Performance_outercomplexPerformance_2::set_att13(bool value) {
  set_has_att13();
  att13_ = value;
}

// -------------------------------------------------------------------

// Performance_innercomplexPerformance_3

// required int32 att1 = 1;
inline bool Performance_innercomplexPerformance_3::has_att1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Performance_innercomplexPerformance_3::set_has_att1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Performance_innercomplexPerformance_3::clear_has_att1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Performance_innercomplexPerformance_3::clear_att1() {
  att1_ = 0;
  clear_has_att1();
}
inline ::google::protobuf::int32 Performance_innercomplexPerformance_3::att1() const {
  return att1_;
}
inline void Performance_innercomplexPerformance_3::set_att1(::google::protobuf::int32 value) {
  set_has_att1();
  att1_ = value;
}

// required int32 att2 = 2;
inline bool Performance_innercomplexPerformance_3::has_att2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Performance_innercomplexPerformance_3::set_has_att2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Performance_innercomplexPerformance_3::clear_has_att2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Performance_innercomplexPerformance_3::clear_att2() {
  att2_ = 0;
  clear_has_att2();
}
inline ::google::protobuf::int32 Performance_innercomplexPerformance_3::att2() const {
  return att2_;
}
inline void Performance_innercomplexPerformance_3::set_att2(::google::protobuf::int32 value) {
  set_has_att2();
  att2_ = value;
}

// required int32 att3 = 3;
inline bool Performance_innercomplexPerformance_3::has_att3() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Performance_innercomplexPerformance_3::set_has_att3() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Performance_innercomplexPerformance_3::clear_has_att3() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Performance_innercomplexPerformance_3::clear_att3() {
  att3_ = 0;
  clear_has_att3();
}
inline ::google::protobuf::int32 Performance_innercomplexPerformance_3::att3() const {
  return att3_;
}
inline void Performance_innercomplexPerformance_3::set_att3(::google::protobuf::int32 value) {
  set_has_att3();
  att3_ = value;
}

// required int64 att4 = 4;
inline bool Performance_innercomplexPerformance_3::has_att4() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Performance_innercomplexPerformance_3::set_has_att4() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Performance_innercomplexPerformance_3::clear_has_att4() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Performance_innercomplexPerformance_3::clear_att4() {
  att4_ = GOOGLE_LONGLONG(0);
  clear_has_att4();
}
inline ::google::protobuf::int64 Performance_innercomplexPerformance_3::att4() const {
  return att4_;
}
inline void Performance_innercomplexPerformance_3::set_att4(::google::protobuf::int64 value) {
  set_has_att4();
  att4_ = value;
}

// required int64 att5 = 5;
inline bool Performance_innercomplexPerformance_3::has_att5() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Performance_innercomplexPerformance_3::set_has_att5() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Performance_innercomplexPerformance_3::clear_has_att5() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Performance_innercomplexPerformance_3::clear_att5() {
  att5_ = GOOGLE_LONGLONG(0);
  clear_has_att5();
}
inline ::google::protobuf::int64 Performance_innercomplexPerformance_3::att5() const {
  return att5_;
}
inline void Performance_innercomplexPerformance_3::set_att5(::google::protobuf::int64 value) {
  set_has_att5();
  att5_ = value;
}

// required int64 att6 = 6;
inline bool Performance_innercomplexPerformance_3::has_att6() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Performance_innercomplexPerformance_3::set_has_att6() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Performance_innercomplexPerformance_3::clear_has_att6() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Performance_innercomplexPerformance_3::clear_att6() {
  att6_ = GOOGLE_LONGLONG(0);
  clear_has_att6();
}
inline ::google::protobuf::int64 Performance_innercomplexPerformance_3::att6() const {
  return att6_;
}
inline void Performance_innercomplexPerformance_3::set_att6(::google::protobuf::int64 value) {
  set_has_att6();
  att6_ = value;
}

// required string att7 = 7;
inline bool Performance_innercomplexPerformance_3::has_att7() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Performance_innercomplexPerformance_3::set_has_att7() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Performance_innercomplexPerformance_3::clear_has_att7() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Performance_innercomplexPerformance_3::clear_att7() {
  if (att7_ != &::google::protobuf::internal::kEmptyString) {
    att7_->clear();
  }
  clear_has_att7();
}
inline const ::std::string& Performance_innercomplexPerformance_3::att7() const {
  return *att7_;
}
inline void Performance_innercomplexPerformance_3::set_att7(const ::std::string& value) {
  set_has_att7();
  if (att7_ == &::google::protobuf::internal::kEmptyString) {
    att7_ = new ::std::string;
  }
  att7_->assign(value);
}
inline void Performance_innercomplexPerformance_3::set_att7(const char* value) {
  set_has_att7();
  if (att7_ == &::google::protobuf::internal::kEmptyString) {
    att7_ = new ::std::string;
  }
  att7_->assign(value);
}
inline void Performance_innercomplexPerformance_3::set_att7(const char* value, size_t size) {
  set_has_att7();
  if (att7_ == &::google::protobuf::internal::kEmptyString) {
    att7_ = new ::std::string;
  }
  att7_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Performance_innercomplexPerformance_3::mutable_att7() {
  set_has_att7();
  if (att7_ == &::google::protobuf::internal::kEmptyString) {
    att7_ = new ::std::string;
  }
  return att7_;
}
inline ::std::string* Performance_innercomplexPerformance_3::release_att7() {
  clear_has_att7();
  if (att7_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = att7_;
    att7_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Performance_innercomplexPerformance_3::set_allocated_att7(::std::string* att7) {
  if (att7_ != &::google::protobuf::internal::kEmptyString) {
    delete att7_;
  }
  if (att7) {
    set_has_att7();
    att7_ = att7;
  } else {
    clear_has_att7();
    att7_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string att8 = 8;
inline bool Performance_innercomplexPerformance_3::has_att8() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Performance_innercomplexPerformance_3::set_has_att8() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Performance_innercomplexPerformance_3::clear_has_att8() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Performance_innercomplexPerformance_3::clear_att8() {
  if (att8_ != &::google::protobuf::internal::kEmptyString) {
    att8_->clear();
  }
  clear_has_att8();
}
inline const ::std::string& Performance_innercomplexPerformance_3::att8() const {
  return *att8_;
}
inline void Performance_innercomplexPerformance_3::set_att8(const ::std::string& value) {
  set_has_att8();
  if (att8_ == &::google::protobuf::internal::kEmptyString) {
    att8_ = new ::std::string;
  }
  att8_->assign(value);
}
inline void Performance_innercomplexPerformance_3::set_att8(const char* value) {
  set_has_att8();
  if (att8_ == &::google::protobuf::internal::kEmptyString) {
    att8_ = new ::std::string;
  }
  att8_->assign(value);
}
inline void Performance_innercomplexPerformance_3::set_att8(const char* value, size_t size) {
  set_has_att8();
  if (att8_ == &::google::protobuf::internal::kEmptyString) {
    att8_ = new ::std::string;
  }
  att8_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Performance_innercomplexPerformance_3::mutable_att8() {
  set_has_att8();
  if (att8_ == &::google::protobuf::internal::kEmptyString) {
    att8_ = new ::std::string;
  }
  return att8_;
}
inline ::std::string* Performance_innercomplexPerformance_3::release_att8() {
  clear_has_att8();
  if (att8_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = att8_;
    att8_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Performance_innercomplexPerformance_3::set_allocated_att8(::std::string* att8) {
  if (att8_ != &::google::protobuf::internal::kEmptyString) {
    delete att8_;
  }
  if (att8) {
    set_has_att8();
    att8_ = att8;
  } else {
    clear_has_att8();
    att8_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string att9 = 9;
inline bool Performance_innercomplexPerformance_3::has_att9() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Performance_innercomplexPerformance_3::set_has_att9() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Performance_innercomplexPerformance_3::clear_has_att9() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Performance_innercomplexPerformance_3::clear_att9() {
  if (att9_ != &::google::protobuf::internal::kEmptyString) {
    att9_->clear();
  }
  clear_has_att9();
}
inline const ::std::string& Performance_innercomplexPerformance_3::att9() const {
  return *att9_;
}
inline void Performance_innercomplexPerformance_3::set_att9(const ::std::string& value) {
  set_has_att9();
  if (att9_ == &::google::protobuf::internal::kEmptyString) {
    att9_ = new ::std::string;
  }
  att9_->assign(value);
}
inline void Performance_innercomplexPerformance_3::set_att9(const char* value) {
  set_has_att9();
  if (att9_ == &::google::protobuf::internal::kEmptyString) {
    att9_ = new ::std::string;
  }
  att9_->assign(value);
}
inline void Performance_innercomplexPerformance_3::set_att9(const char* value, size_t size) {
  set_has_att9();
  if (att9_ == &::google::protobuf::internal::kEmptyString) {
    att9_ = new ::std::string;
  }
  att9_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Performance_innercomplexPerformance_3::mutable_att9() {
  set_has_att9();
  if (att9_ == &::google::protobuf::internal::kEmptyString) {
    att9_ = new ::std::string;
  }
  return att9_;
}
inline ::std::string* Performance_innercomplexPerformance_3::release_att9() {
  clear_has_att9();
  if (att9_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = att9_;
    att9_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Performance_innercomplexPerformance_3::set_allocated_att9(::std::string* att9) {
  if (att9_ != &::google::protobuf::internal::kEmptyString) {
    delete att9_;
  }
  if (att9) {
    set_has_att9();
    att9_ = att9;
  } else {
    clear_has_att9();
    att9_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required float att10 = 10;
inline bool Performance_innercomplexPerformance_3::has_att10() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Performance_innercomplexPerformance_3::set_has_att10() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Performance_innercomplexPerformance_3::clear_has_att10() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Performance_innercomplexPerformance_3::clear_att10() {
  att10_ = 0;
  clear_has_att10();
}
inline float Performance_innercomplexPerformance_3::att10() const {
  return att10_;
}
inline void Performance_innercomplexPerformance_3::set_att10(float value) {
  set_has_att10();
  att10_ = value;
}

// required float att11 = 11;
inline bool Performance_innercomplexPerformance_3::has_att11() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Performance_innercomplexPerformance_3::set_has_att11() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Performance_innercomplexPerformance_3::clear_has_att11() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Performance_innercomplexPerformance_3::clear_att11() {
  att11_ = 0;
  clear_has_att11();
}
inline float Performance_innercomplexPerformance_3::att11() const {
  return att11_;
}
inline void Performance_innercomplexPerformance_3::set_att11(float value) {
  set_has_att11();
  att11_ = value;
}

// required float att12 = 12;
inline bool Performance_innercomplexPerformance_3::has_att12() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Performance_innercomplexPerformance_3::set_has_att12() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Performance_innercomplexPerformance_3::clear_has_att12() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Performance_innercomplexPerformance_3::clear_att12() {
  att12_ = 0;
  clear_has_att12();
}
inline float Performance_innercomplexPerformance_3::att12() const {
  return att12_;
}
inline void Performance_innercomplexPerformance_3::set_att12(float value) {
  set_has_att12();
  att12_ = value;
}

// required double att13 = 13;
inline bool Performance_innercomplexPerformance_3::has_att13() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Performance_innercomplexPerformance_3::set_has_att13() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Performance_innercomplexPerformance_3::clear_has_att13() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Performance_innercomplexPerformance_3::clear_att13() {
  att13_ = 0;
  clear_has_att13();
}
inline double Performance_innercomplexPerformance_3::att13() const {
  return att13_;
}
inline void Performance_innercomplexPerformance_3::set_att13(double value) {
  set_has_att13();
  att13_ = value;
}

// required double att14 = 14;
inline bool Performance_innercomplexPerformance_3::has_att14() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void Performance_innercomplexPerformance_3::set_has_att14() {
  _has_bits_[0] |= 0x00002000u;
}
inline void Performance_innercomplexPerformance_3::clear_has_att14() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void Performance_innercomplexPerformance_3::clear_att14() {
  att14_ = 0;
  clear_has_att14();
}
inline double Performance_innercomplexPerformance_3::att14() const {
  return att14_;
}
inline void Performance_innercomplexPerformance_3::set_att14(double value) {
  set_has_att14();
  att14_ = value;
}

// required double att15 = 15;
inline bool Performance_innercomplexPerformance_3::has_att15() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void Performance_innercomplexPerformance_3::set_has_att15() {
  _has_bits_[0] |= 0x00004000u;
}
inline void Performance_innercomplexPerformance_3::clear_has_att15() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void Performance_innercomplexPerformance_3::clear_att15() {
  att15_ = 0;
  clear_has_att15();
}
inline double Performance_innercomplexPerformance_3::att15() const {
  return att15_;
}
inline void Performance_innercomplexPerformance_3::set_att15(double value) {
  set_has_att15();
  att15_ = value;
}

// required bool att16 = 16;
inline bool Performance_innercomplexPerformance_3::has_att16() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void Performance_innercomplexPerformance_3::set_has_att16() {
  _has_bits_[0] |= 0x00008000u;
}
inline void Performance_innercomplexPerformance_3::clear_has_att16() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void Performance_innercomplexPerformance_3::clear_att16() {
  att16_ = false;
  clear_has_att16();
}
inline bool Performance_innercomplexPerformance_3::att16() const {
  return att16_;
}
inline void Performance_innercomplexPerformance_3::set_att16(bool value) {
  set_has_att16();
  att16_ = value;
}

// required bool att17 = 17;
inline bool Performance_innercomplexPerformance_3::has_att17() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void Performance_innercomplexPerformance_3::set_has_att17() {
  _has_bits_[0] |= 0x00010000u;
}
inline void Performance_innercomplexPerformance_3::clear_has_att17() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void Performance_innercomplexPerformance_3::clear_att17() {
  att17_ = false;
  clear_has_att17();
}
inline bool Performance_innercomplexPerformance_3::att17() const {
  return att17_;
}
inline void Performance_innercomplexPerformance_3::set_att17(bool value) {
  set_has_att17();
  att17_ = value;
}

// required bool att18 = 18;
inline bool Performance_innercomplexPerformance_3::has_att18() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void Performance_innercomplexPerformance_3::set_has_att18() {
  _has_bits_[0] |= 0x00020000u;
}
inline void Performance_innercomplexPerformance_3::clear_has_att18() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void Performance_innercomplexPerformance_3::clear_att18() {
  att18_ = false;
  clear_has_att18();
}
inline bool Performance_innercomplexPerformance_3::att18() const {
  return att18_;
}
inline void Performance_innercomplexPerformance_3::set_att18(bool value) {
  set_has_att18();
  att18_ = value;
}

// -------------------------------------------------------------------

// Performance_outercomplexPerformance_3

// required int32 att1 = 1;
inline bool Performance_outercomplexPerformance_3::has_att1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Performance_outercomplexPerformance_3::set_has_att1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Performance_outercomplexPerformance_3::clear_has_att1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Performance_outercomplexPerformance_3::clear_att1() {
  att1_ = 0;
  clear_has_att1();
}
inline ::google::protobuf::int32 Performance_outercomplexPerformance_3::att1() const {
  return att1_;
}
inline void Performance_outercomplexPerformance_3::set_att1(::google::protobuf::int32 value) {
  set_has_att1();
  att1_ = value;
}

// required int64 att2 = 2;
inline bool Performance_outercomplexPerformance_3::has_att2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Performance_outercomplexPerformance_3::set_has_att2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Performance_outercomplexPerformance_3::clear_has_att2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Performance_outercomplexPerformance_3::clear_att2() {
  att2_ = GOOGLE_LONGLONG(0);
  clear_has_att2();
}
inline ::google::protobuf::int64 Performance_outercomplexPerformance_3::att2() const {
  return att2_;
}
inline void Performance_outercomplexPerformance_3::set_att2(::google::protobuf::int64 value) {
  set_has_att2();
  att2_ = value;
}

// required string att3 = 3;
inline bool Performance_outercomplexPerformance_3::has_att3() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Performance_outercomplexPerformance_3::set_has_att3() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Performance_outercomplexPerformance_3::clear_has_att3() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Performance_outercomplexPerformance_3::clear_att3() {
  if (att3_ != &::google::protobuf::internal::kEmptyString) {
    att3_->clear();
  }
  clear_has_att3();
}
inline const ::std::string& Performance_outercomplexPerformance_3::att3() const {
  return *att3_;
}
inline void Performance_outercomplexPerformance_3::set_att3(const ::std::string& value) {
  set_has_att3();
  if (att3_ == &::google::protobuf::internal::kEmptyString) {
    att3_ = new ::std::string;
  }
  att3_->assign(value);
}
inline void Performance_outercomplexPerformance_3::set_att3(const char* value) {
  set_has_att3();
  if (att3_ == &::google::protobuf::internal::kEmptyString) {
    att3_ = new ::std::string;
  }
  att3_->assign(value);
}
inline void Performance_outercomplexPerformance_3::set_att3(const char* value, size_t size) {
  set_has_att3();
  if (att3_ == &::google::protobuf::internal::kEmptyString) {
    att3_ = new ::std::string;
  }
  att3_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Performance_outercomplexPerformance_3::mutable_att3() {
  set_has_att3();
  if (att3_ == &::google::protobuf::internal::kEmptyString) {
    att3_ = new ::std::string;
  }
  return att3_;
}
inline ::std::string* Performance_outercomplexPerformance_3::release_att3() {
  clear_has_att3();
  if (att3_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = att3_;
    att3_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Performance_outercomplexPerformance_3::set_allocated_att3(::std::string* att3) {
  if (att3_ != &::google::protobuf::internal::kEmptyString) {
    delete att3_;
  }
  if (att3) {
    set_has_att3();
    att3_ = att3;
  } else {
    clear_has_att3();
    att3_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required .performance.Performance.innercomplexPerformance_3 att4 = 4;
inline bool Performance_outercomplexPerformance_3::has_att4() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Performance_outercomplexPerformance_3::set_has_att4() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Performance_outercomplexPerformance_3::clear_has_att4() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Performance_outercomplexPerformance_3::clear_att4() {
  if (att4_ != NULL) att4_->::performance::Performance_innercomplexPerformance_3::Clear();
  clear_has_att4();
}
inline const ::performance::Performance_innercomplexPerformance_3& Performance_outercomplexPerformance_3::att4() const {
  return att4_ != NULL ? *att4_ : *default_instance_->att4_;
}
inline ::performance::Performance_innercomplexPerformance_3* Performance_outercomplexPerformance_3::mutable_att4() {
  set_has_att4();
  if (att4_ == NULL) att4_ = new ::performance::Performance_innercomplexPerformance_3;
  return att4_;
}
inline ::performance::Performance_innercomplexPerformance_3* Performance_outercomplexPerformance_3::release_att4() {
  clear_has_att4();
  ::performance::Performance_innercomplexPerformance_3* temp = att4_;
  att4_ = NULL;
  return temp;
}
inline void Performance_outercomplexPerformance_3::set_allocated_att4(::performance::Performance_innercomplexPerformance_3* att4) {
  delete att4_;
  att4_ = att4;
  if (att4) {
    set_has_att4();
  } else {
    clear_has_att4();
  }
}

// required float att5 = 5;
inline bool Performance_outercomplexPerformance_3::has_att5() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Performance_outercomplexPerformance_3::set_has_att5() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Performance_outercomplexPerformance_3::clear_has_att5() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Performance_outercomplexPerformance_3::clear_att5() {
  att5_ = 0;
  clear_has_att5();
}
inline float Performance_outercomplexPerformance_3::att5() const {
  return att5_;
}
inline void Performance_outercomplexPerformance_3::set_att5(float value) {
  set_has_att5();
  att5_ = value;
}

// required double att6 = 6;
inline bool Performance_outercomplexPerformance_3::has_att6() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Performance_outercomplexPerformance_3::set_has_att6() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Performance_outercomplexPerformance_3::clear_has_att6() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Performance_outercomplexPerformance_3::clear_att6() {
  att6_ = 0;
  clear_has_att6();
}
inline double Performance_outercomplexPerformance_3::att6() const {
  return att6_;
}
inline void Performance_outercomplexPerformance_3::set_att6(double value) {
  set_has_att6();
  att6_ = value;
}

// required bool att7 = 7;
inline bool Performance_outercomplexPerformance_3::has_att7() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Performance_outercomplexPerformance_3::set_has_att7() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Performance_outercomplexPerformance_3::clear_has_att7() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Performance_outercomplexPerformance_3::clear_att7() {
  att7_ = false;
  clear_has_att7();
}
inline bool Performance_outercomplexPerformance_3::att7() const {
  return att7_;
}
inline void Performance_outercomplexPerformance_3::set_att7(bool value) {
  set_has_att7();
  att7_ = value;
}

// required int64 att8 = 8;
inline bool Performance_outercomplexPerformance_3::has_att8() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Performance_outercomplexPerformance_3::set_has_att8() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Performance_outercomplexPerformance_3::clear_has_att8() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Performance_outercomplexPerformance_3::clear_att8() {
  att8_ = GOOGLE_LONGLONG(0);
  clear_has_att8();
}
inline ::google::protobuf::int64 Performance_outercomplexPerformance_3::att8() const {
  return att8_;
}
inline void Performance_outercomplexPerformance_3::set_att8(::google::protobuf::int64 value) {
  set_has_att8();
  att8_ = value;
}

// required string att9 = 9;
inline bool Performance_outercomplexPerformance_3::has_att9() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Performance_outercomplexPerformance_3::set_has_att9() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Performance_outercomplexPerformance_3::clear_has_att9() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Performance_outercomplexPerformance_3::clear_att9() {
  if (att9_ != &::google::protobuf::internal::kEmptyString) {
    att9_->clear();
  }
  clear_has_att9();
}
inline const ::std::string& Performance_outercomplexPerformance_3::att9() const {
  return *att9_;
}
inline void Performance_outercomplexPerformance_3::set_att9(const ::std::string& value) {
  set_has_att9();
  if (att9_ == &::google::protobuf::internal::kEmptyString) {
    att9_ = new ::std::string;
  }
  att9_->assign(value);
}
inline void Performance_outercomplexPerformance_3::set_att9(const char* value) {
  set_has_att9();
  if (att9_ == &::google::protobuf::internal::kEmptyString) {
    att9_ = new ::std::string;
  }
  att9_->assign(value);
}
inline void Performance_outercomplexPerformance_3::set_att9(const char* value, size_t size) {
  set_has_att9();
  if (att9_ == &::google::protobuf::internal::kEmptyString) {
    att9_ = new ::std::string;
  }
  att9_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Performance_outercomplexPerformance_3::mutable_att9() {
  set_has_att9();
  if (att9_ == &::google::protobuf::internal::kEmptyString) {
    att9_ = new ::std::string;
  }
  return att9_;
}
inline ::std::string* Performance_outercomplexPerformance_3::release_att9() {
  clear_has_att9();
  if (att9_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = att9_;
    att9_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Performance_outercomplexPerformance_3::set_allocated_att9(::std::string* att9) {
  if (att9_ != &::google::protobuf::internal::kEmptyString) {
    delete att9_;
  }
  if (att9) {
    set_has_att9();
    att9_ = att9;
  } else {
    clear_has_att9();
    att9_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required .performance.Performance.innercomplexPerformance_3 att10 = 10;
inline bool Performance_outercomplexPerformance_3::has_att10() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Performance_outercomplexPerformance_3::set_has_att10() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Performance_outercomplexPerformance_3::clear_has_att10() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Performance_outercomplexPerformance_3::clear_att10() {
  if (att10_ != NULL) att10_->::performance::Performance_innercomplexPerformance_3::Clear();
  clear_has_att10();
}
inline const ::performance::Performance_innercomplexPerformance_3& Performance_outercomplexPerformance_3::att10() const {
  return att10_ != NULL ? *att10_ : *default_instance_->att10_;
}
inline ::performance::Performance_innercomplexPerformance_3* Performance_outercomplexPerformance_3::mutable_att10() {
  set_has_att10();
  if (att10_ == NULL) att10_ = new ::performance::Performance_innercomplexPerformance_3;
  return att10_;
}
inline ::performance::Performance_innercomplexPerformance_3* Performance_outercomplexPerformance_3::release_att10() {
  clear_has_att10();
  ::performance::Performance_innercomplexPerformance_3* temp = att10_;
  att10_ = NULL;
  return temp;
}
inline void Performance_outercomplexPerformance_3::set_allocated_att10(::performance::Performance_innercomplexPerformance_3* att10) {
  delete att10_;
  att10_ = att10;
  if (att10) {
    set_has_att10();
  } else {
    clear_has_att10();
  }
}

// required float att11 = 11;
inline bool Performance_outercomplexPerformance_3::has_att11() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Performance_outercomplexPerformance_3::set_has_att11() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Performance_outercomplexPerformance_3::clear_has_att11() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Performance_outercomplexPerformance_3::clear_att11() {
  att11_ = 0;
  clear_has_att11();
}
inline float Performance_outercomplexPerformance_3::att11() const {
  return att11_;
}
inline void Performance_outercomplexPerformance_3::set_att11(float value) {
  set_has_att11();
  att11_ = value;
}

// required double att12 = 12;
inline bool Performance_outercomplexPerformance_3::has_att12() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Performance_outercomplexPerformance_3::set_has_att12() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Performance_outercomplexPerformance_3::clear_has_att12() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Performance_outercomplexPerformance_3::clear_att12() {
  att12_ = 0;
  clear_has_att12();
}
inline double Performance_outercomplexPerformance_3::att12() const {
  return att12_;
}
inline void Performance_outercomplexPerformance_3::set_att12(double value) {
  set_has_att12();
  att12_ = value;
}

// required bool att13 = 13;
inline bool Performance_outercomplexPerformance_3::has_att13() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Performance_outercomplexPerformance_3::set_has_att13() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Performance_outercomplexPerformance_3::clear_has_att13() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Performance_outercomplexPerformance_3::clear_att13() {
  att13_ = false;
  clear_has_att13();
}
inline bool Performance_outercomplexPerformance_3::att13() const {
  return att13_;
}
inline void Performance_outercomplexPerformance_3::set_att13(bool value) {
  set_has_att13();
  att13_ = value;
}

// required string att14 = 14;
inline bool Performance_outercomplexPerformance_3::has_att14() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void Performance_outercomplexPerformance_3::set_has_att14() {
  _has_bits_[0] |= 0x00002000u;
}
inline void Performance_outercomplexPerformance_3::clear_has_att14() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void Performance_outercomplexPerformance_3::clear_att14() {
  if (att14_ != &::google::protobuf::internal::kEmptyString) {
    att14_->clear();
  }
  clear_has_att14();
}
inline const ::std::string& Performance_outercomplexPerformance_3::att14() const {
  return *att14_;
}
inline void Performance_outercomplexPerformance_3::set_att14(const ::std::string& value) {
  set_has_att14();
  if (att14_ == &::google::protobuf::internal::kEmptyString) {
    att14_ = new ::std::string;
  }
  att14_->assign(value);
}
inline void Performance_outercomplexPerformance_3::set_att14(const char* value) {
  set_has_att14();
  if (att14_ == &::google::protobuf::internal::kEmptyString) {
    att14_ = new ::std::string;
  }
  att14_->assign(value);
}
inline void Performance_outercomplexPerformance_3::set_att14(const char* value, size_t size) {
  set_has_att14();
  if (att14_ == &::google::protobuf::internal::kEmptyString) {
    att14_ = new ::std::string;
  }
  att14_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Performance_outercomplexPerformance_3::mutable_att14() {
  set_has_att14();
  if (att14_ == &::google::protobuf::internal::kEmptyString) {
    att14_ = new ::std::string;
  }
  return att14_;
}
inline ::std::string* Performance_outercomplexPerformance_3::release_att14() {
  clear_has_att14();
  if (att14_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = att14_;
    att14_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Performance_outercomplexPerformance_3::set_allocated_att14(::std::string* att14) {
  if (att14_ != &::google::protobuf::internal::kEmptyString) {
    delete att14_;
  }
  if (att14) {
    set_has_att14();
    att14_ = att14;
  } else {
    clear_has_att14();
    att14_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required .performance.Performance.innercomplexPerformance_3 att15 = 15;
inline bool Performance_outercomplexPerformance_3::has_att15() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void Performance_outercomplexPerformance_3::set_has_att15() {
  _has_bits_[0] |= 0x00004000u;
}
inline void Performance_outercomplexPerformance_3::clear_has_att15() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void Performance_outercomplexPerformance_3::clear_att15() {
  if (att15_ != NULL) att15_->::performance::Performance_innercomplexPerformance_3::Clear();
  clear_has_att15();
}
inline const ::performance::Performance_innercomplexPerformance_3& Performance_outercomplexPerformance_3::att15() const {
  return att15_ != NULL ? *att15_ : *default_instance_->att15_;
}
inline ::performance::Performance_innercomplexPerformance_3* Performance_outercomplexPerformance_3::mutable_att15() {
  set_has_att15();
  if (att15_ == NULL) att15_ = new ::performance::Performance_innercomplexPerformance_3;
  return att15_;
}
inline ::performance::Performance_innercomplexPerformance_3* Performance_outercomplexPerformance_3::release_att15() {
  clear_has_att15();
  ::performance::Performance_innercomplexPerformance_3* temp = att15_;
  att15_ = NULL;
  return temp;
}
inline void Performance_outercomplexPerformance_3::set_allocated_att15(::performance::Performance_innercomplexPerformance_3* att15) {
  delete att15_;
  att15_ = att15;
  if (att15) {
    set_has_att15();
  } else {
    clear_has_att15();
  }
}

// required float att16 = 16;
inline bool Performance_outercomplexPerformance_3::has_att16() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void Performance_outercomplexPerformance_3::set_has_att16() {
  _has_bits_[0] |= 0x00008000u;
}
inline void Performance_outercomplexPerformance_3::clear_has_att16() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void Performance_outercomplexPerformance_3::clear_att16() {
  att16_ = 0;
  clear_has_att16();
}
inline float Performance_outercomplexPerformance_3::att16() const {
  return att16_;
}
inline void Performance_outercomplexPerformance_3::set_att16(float value) {
  set_has_att16();
  att16_ = value;
}

// required double att17 = 17;
inline bool Performance_outercomplexPerformance_3::has_att17() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void Performance_outercomplexPerformance_3::set_has_att17() {
  _has_bits_[0] |= 0x00010000u;
}
inline void Performance_outercomplexPerformance_3::clear_has_att17() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void Performance_outercomplexPerformance_3::clear_att17() {
  att17_ = 0;
  clear_has_att17();
}
inline double Performance_outercomplexPerformance_3::att17() const {
  return att17_;
}
inline void Performance_outercomplexPerformance_3::set_att17(double value) {
  set_has_att17();
  att17_ = value;
}

// required bool att18 = 18;
inline bool Performance_outercomplexPerformance_3::has_att18() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void Performance_outercomplexPerformance_3::set_has_att18() {
  _has_bits_[0] |= 0x00020000u;
}
inline void Performance_outercomplexPerformance_3::clear_has_att18() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void Performance_outercomplexPerformance_3::clear_att18() {
  att18_ = false;
  clear_has_att18();
}
inline bool Performance_outercomplexPerformance_3::att18() const {
  return att18_;
}
inline void Performance_outercomplexPerformance_3::set_att18(bool value) {
  set_has_att18();
  att18_ = value;
}

// -------------------------------------------------------------------

// Performance_innercomplexPerformance_4

// required int32 att1 = 1;
inline bool Performance_innercomplexPerformance_4::has_att1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Performance_innercomplexPerformance_4::set_has_att1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Performance_innercomplexPerformance_4::clear_has_att1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Performance_innercomplexPerformance_4::clear_att1() {
  att1_ = 0;
  clear_has_att1();
}
inline ::google::protobuf::int32 Performance_innercomplexPerformance_4::att1() const {
  return att1_;
}
inline void Performance_innercomplexPerformance_4::set_att1(::google::protobuf::int32 value) {
  set_has_att1();
  att1_ = value;
}

// required int32 att2 = 2;
inline bool Performance_innercomplexPerformance_4::has_att2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Performance_innercomplexPerformance_4::set_has_att2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Performance_innercomplexPerformance_4::clear_has_att2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Performance_innercomplexPerformance_4::clear_att2() {
  att2_ = 0;
  clear_has_att2();
}
inline ::google::protobuf::int32 Performance_innercomplexPerformance_4::att2() const {
  return att2_;
}
inline void Performance_innercomplexPerformance_4::set_att2(::google::protobuf::int32 value) {
  set_has_att2();
  att2_ = value;
}

// required int32 att3 = 3;
inline bool Performance_innercomplexPerformance_4::has_att3() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Performance_innercomplexPerformance_4::set_has_att3() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Performance_innercomplexPerformance_4::clear_has_att3() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Performance_innercomplexPerformance_4::clear_att3() {
  att3_ = 0;
  clear_has_att3();
}
inline ::google::protobuf::int32 Performance_innercomplexPerformance_4::att3() const {
  return att3_;
}
inline void Performance_innercomplexPerformance_4::set_att3(::google::protobuf::int32 value) {
  set_has_att3();
  att3_ = value;
}

// required int32 att4 = 4;
inline bool Performance_innercomplexPerformance_4::has_att4() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Performance_innercomplexPerformance_4::set_has_att4() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Performance_innercomplexPerformance_4::clear_has_att4() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Performance_innercomplexPerformance_4::clear_att4() {
  att4_ = 0;
  clear_has_att4();
}
inline ::google::protobuf::int32 Performance_innercomplexPerformance_4::att4() const {
  return att4_;
}
inline void Performance_innercomplexPerformance_4::set_att4(::google::protobuf::int32 value) {
  set_has_att4();
  att4_ = value;
}

// required int64 att5 = 5;
inline bool Performance_innercomplexPerformance_4::has_att5() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Performance_innercomplexPerformance_4::set_has_att5() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Performance_innercomplexPerformance_4::clear_has_att5() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Performance_innercomplexPerformance_4::clear_att5() {
  att5_ = GOOGLE_LONGLONG(0);
  clear_has_att5();
}
inline ::google::protobuf::int64 Performance_innercomplexPerformance_4::att5() const {
  return att5_;
}
inline void Performance_innercomplexPerformance_4::set_att5(::google::protobuf::int64 value) {
  set_has_att5();
  att5_ = value;
}

// required int64 att6 = 6;
inline bool Performance_innercomplexPerformance_4::has_att6() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Performance_innercomplexPerformance_4::set_has_att6() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Performance_innercomplexPerformance_4::clear_has_att6() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Performance_innercomplexPerformance_4::clear_att6() {
  att6_ = GOOGLE_LONGLONG(0);
  clear_has_att6();
}
inline ::google::protobuf::int64 Performance_innercomplexPerformance_4::att6() const {
  return att6_;
}
inline void Performance_innercomplexPerformance_4::set_att6(::google::protobuf::int64 value) {
  set_has_att6();
  att6_ = value;
}

// required int64 att7 = 7;
inline bool Performance_innercomplexPerformance_4::has_att7() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Performance_innercomplexPerformance_4::set_has_att7() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Performance_innercomplexPerformance_4::clear_has_att7() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Performance_innercomplexPerformance_4::clear_att7() {
  att7_ = GOOGLE_LONGLONG(0);
  clear_has_att7();
}
inline ::google::protobuf::int64 Performance_innercomplexPerformance_4::att7() const {
  return att7_;
}
inline void Performance_innercomplexPerformance_4::set_att7(::google::protobuf::int64 value) {
  set_has_att7();
  att7_ = value;
}

// required int64 att8 = 8;
inline bool Performance_innercomplexPerformance_4::has_att8() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Performance_innercomplexPerformance_4::set_has_att8() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Performance_innercomplexPerformance_4::clear_has_att8() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Performance_innercomplexPerformance_4::clear_att8() {
  att8_ = GOOGLE_LONGLONG(0);
  clear_has_att8();
}
inline ::google::protobuf::int64 Performance_innercomplexPerformance_4::att8() const {
  return att8_;
}
inline void Performance_innercomplexPerformance_4::set_att8(::google::protobuf::int64 value) {
  set_has_att8();
  att8_ = value;
}

// required string att9 = 9;
inline bool Performance_innercomplexPerformance_4::has_att9() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Performance_innercomplexPerformance_4::set_has_att9() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Performance_innercomplexPerformance_4::clear_has_att9() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Performance_innercomplexPerformance_4::clear_att9() {
  if (att9_ != &::google::protobuf::internal::kEmptyString) {
    att9_->clear();
  }
  clear_has_att9();
}
inline const ::std::string& Performance_innercomplexPerformance_4::att9() const {
  return *att9_;
}
inline void Performance_innercomplexPerformance_4::set_att9(const ::std::string& value) {
  set_has_att9();
  if (att9_ == &::google::protobuf::internal::kEmptyString) {
    att9_ = new ::std::string;
  }
  att9_->assign(value);
}
inline void Performance_innercomplexPerformance_4::set_att9(const char* value) {
  set_has_att9();
  if (att9_ == &::google::protobuf::internal::kEmptyString) {
    att9_ = new ::std::string;
  }
  att9_->assign(value);
}
inline void Performance_innercomplexPerformance_4::set_att9(const char* value, size_t size) {
  set_has_att9();
  if (att9_ == &::google::protobuf::internal::kEmptyString) {
    att9_ = new ::std::string;
  }
  att9_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Performance_innercomplexPerformance_4::mutable_att9() {
  set_has_att9();
  if (att9_ == &::google::protobuf::internal::kEmptyString) {
    att9_ = new ::std::string;
  }
  return att9_;
}
inline ::std::string* Performance_innercomplexPerformance_4::release_att9() {
  clear_has_att9();
  if (att9_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = att9_;
    att9_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Performance_innercomplexPerformance_4::set_allocated_att9(::std::string* att9) {
  if (att9_ != &::google::protobuf::internal::kEmptyString) {
    delete att9_;
  }
  if (att9) {
    set_has_att9();
    att9_ = att9;
  } else {
    clear_has_att9();
    att9_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string att10 = 10;
inline bool Performance_innercomplexPerformance_4::has_att10() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Performance_innercomplexPerformance_4::set_has_att10() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Performance_innercomplexPerformance_4::clear_has_att10() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Performance_innercomplexPerformance_4::clear_att10() {
  if (att10_ != &::google::protobuf::internal::kEmptyString) {
    att10_->clear();
  }
  clear_has_att10();
}
inline const ::std::string& Performance_innercomplexPerformance_4::att10() const {
  return *att10_;
}
inline void Performance_innercomplexPerformance_4::set_att10(const ::std::string& value) {
  set_has_att10();
  if (att10_ == &::google::protobuf::internal::kEmptyString) {
    att10_ = new ::std::string;
  }
  att10_->assign(value);
}
inline void Performance_innercomplexPerformance_4::set_att10(const char* value) {
  set_has_att10();
  if (att10_ == &::google::protobuf::internal::kEmptyString) {
    att10_ = new ::std::string;
  }
  att10_->assign(value);
}
inline void Performance_innercomplexPerformance_4::set_att10(const char* value, size_t size) {
  set_has_att10();
  if (att10_ == &::google::protobuf::internal::kEmptyString) {
    att10_ = new ::std::string;
  }
  att10_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Performance_innercomplexPerformance_4::mutable_att10() {
  set_has_att10();
  if (att10_ == &::google::protobuf::internal::kEmptyString) {
    att10_ = new ::std::string;
  }
  return att10_;
}
inline ::std::string* Performance_innercomplexPerformance_4::release_att10() {
  clear_has_att10();
  if (att10_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = att10_;
    att10_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Performance_innercomplexPerformance_4::set_allocated_att10(::std::string* att10) {
  if (att10_ != &::google::protobuf::internal::kEmptyString) {
    delete att10_;
  }
  if (att10) {
    set_has_att10();
    att10_ = att10;
  } else {
    clear_has_att10();
    att10_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string att11 = 11;
inline bool Performance_innercomplexPerformance_4::has_att11() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Performance_innercomplexPerformance_4::set_has_att11() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Performance_innercomplexPerformance_4::clear_has_att11() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Performance_innercomplexPerformance_4::clear_att11() {
  if (att11_ != &::google::protobuf::internal::kEmptyString) {
    att11_->clear();
  }
  clear_has_att11();
}
inline const ::std::string& Performance_innercomplexPerformance_4::att11() const {
  return *att11_;
}
inline void Performance_innercomplexPerformance_4::set_att11(const ::std::string& value) {
  set_has_att11();
  if (att11_ == &::google::protobuf::internal::kEmptyString) {
    att11_ = new ::std::string;
  }
  att11_->assign(value);
}
inline void Performance_innercomplexPerformance_4::set_att11(const char* value) {
  set_has_att11();
  if (att11_ == &::google::protobuf::internal::kEmptyString) {
    att11_ = new ::std::string;
  }
  att11_->assign(value);
}
inline void Performance_innercomplexPerformance_4::set_att11(const char* value, size_t size) {
  set_has_att11();
  if (att11_ == &::google::protobuf::internal::kEmptyString) {
    att11_ = new ::std::string;
  }
  att11_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Performance_innercomplexPerformance_4::mutable_att11() {
  set_has_att11();
  if (att11_ == &::google::protobuf::internal::kEmptyString) {
    att11_ = new ::std::string;
  }
  return att11_;
}
inline ::std::string* Performance_innercomplexPerformance_4::release_att11() {
  clear_has_att11();
  if (att11_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = att11_;
    att11_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Performance_innercomplexPerformance_4::set_allocated_att11(::std::string* att11) {
  if (att11_ != &::google::protobuf::internal::kEmptyString) {
    delete att11_;
  }
  if (att11) {
    set_has_att11();
    att11_ = att11;
  } else {
    clear_has_att11();
    att11_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string att12 = 12;
inline bool Performance_innercomplexPerformance_4::has_att12() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Performance_innercomplexPerformance_4::set_has_att12() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Performance_innercomplexPerformance_4::clear_has_att12() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Performance_innercomplexPerformance_4::clear_att12() {
  if (att12_ != &::google::protobuf::internal::kEmptyString) {
    att12_->clear();
  }
  clear_has_att12();
}
inline const ::std::string& Performance_innercomplexPerformance_4::att12() const {
  return *att12_;
}
inline void Performance_innercomplexPerformance_4::set_att12(const ::std::string& value) {
  set_has_att12();
  if (att12_ == &::google::protobuf::internal::kEmptyString) {
    att12_ = new ::std::string;
  }
  att12_->assign(value);
}
inline void Performance_innercomplexPerformance_4::set_att12(const char* value) {
  set_has_att12();
  if (att12_ == &::google::protobuf::internal::kEmptyString) {
    att12_ = new ::std::string;
  }
  att12_->assign(value);
}
inline void Performance_innercomplexPerformance_4::set_att12(const char* value, size_t size) {
  set_has_att12();
  if (att12_ == &::google::protobuf::internal::kEmptyString) {
    att12_ = new ::std::string;
  }
  att12_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Performance_innercomplexPerformance_4::mutable_att12() {
  set_has_att12();
  if (att12_ == &::google::protobuf::internal::kEmptyString) {
    att12_ = new ::std::string;
  }
  return att12_;
}
inline ::std::string* Performance_innercomplexPerformance_4::release_att12() {
  clear_has_att12();
  if (att12_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = att12_;
    att12_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Performance_innercomplexPerformance_4::set_allocated_att12(::std::string* att12) {
  if (att12_ != &::google::protobuf::internal::kEmptyString) {
    delete att12_;
  }
  if (att12) {
    set_has_att12();
    att12_ = att12;
  } else {
    clear_has_att12();
    att12_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required float att13 = 13;
inline bool Performance_innercomplexPerformance_4::has_att13() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Performance_innercomplexPerformance_4::set_has_att13() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Performance_innercomplexPerformance_4::clear_has_att13() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Performance_innercomplexPerformance_4::clear_att13() {
  att13_ = 0;
  clear_has_att13();
}
inline float Performance_innercomplexPerformance_4::att13() const {
  return att13_;
}
inline void Performance_innercomplexPerformance_4::set_att13(float value) {
  set_has_att13();
  att13_ = value;
}

// required float att14 = 14;
inline bool Performance_innercomplexPerformance_4::has_att14() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void Performance_innercomplexPerformance_4::set_has_att14() {
  _has_bits_[0] |= 0x00002000u;
}
inline void Performance_innercomplexPerformance_4::clear_has_att14() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void Performance_innercomplexPerformance_4::clear_att14() {
  att14_ = 0;
  clear_has_att14();
}
inline float Performance_innercomplexPerformance_4::att14() const {
  return att14_;
}
inline void Performance_innercomplexPerformance_4::set_att14(float value) {
  set_has_att14();
  att14_ = value;
}

// required float att15 = 15;
inline bool Performance_innercomplexPerformance_4::has_att15() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void Performance_innercomplexPerformance_4::set_has_att15() {
  _has_bits_[0] |= 0x00004000u;
}
inline void Performance_innercomplexPerformance_4::clear_has_att15() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void Performance_innercomplexPerformance_4::clear_att15() {
  att15_ = 0;
  clear_has_att15();
}
inline float Performance_innercomplexPerformance_4::att15() const {
  return att15_;
}
inline void Performance_innercomplexPerformance_4::set_att15(float value) {
  set_has_att15();
  att15_ = value;
}

// required float att16 = 16;
inline bool Performance_innercomplexPerformance_4::has_att16() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void Performance_innercomplexPerformance_4::set_has_att16() {
  _has_bits_[0] |= 0x00008000u;
}
inline void Performance_innercomplexPerformance_4::clear_has_att16() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void Performance_innercomplexPerformance_4::clear_att16() {
  att16_ = 0;
  clear_has_att16();
}
inline float Performance_innercomplexPerformance_4::att16() const {
  return att16_;
}
inline void Performance_innercomplexPerformance_4::set_att16(float value) {
  set_has_att16();
  att16_ = value;
}

// required double att17 = 17;
inline bool Performance_innercomplexPerformance_4::has_att17() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void Performance_innercomplexPerformance_4::set_has_att17() {
  _has_bits_[0] |= 0x00010000u;
}
inline void Performance_innercomplexPerformance_4::clear_has_att17() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void Performance_innercomplexPerformance_4::clear_att17() {
  att17_ = 0;
  clear_has_att17();
}
inline double Performance_innercomplexPerformance_4::att17() const {
  return att17_;
}
inline void Performance_innercomplexPerformance_4::set_att17(double value) {
  set_has_att17();
  att17_ = value;
}

// required double att18 = 18;
inline bool Performance_innercomplexPerformance_4::has_att18() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void Performance_innercomplexPerformance_4::set_has_att18() {
  _has_bits_[0] |= 0x00020000u;
}
inline void Performance_innercomplexPerformance_4::clear_has_att18() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void Performance_innercomplexPerformance_4::clear_att18() {
  att18_ = 0;
  clear_has_att18();
}
inline double Performance_innercomplexPerformance_4::att18() const {
  return att18_;
}
inline void Performance_innercomplexPerformance_4::set_att18(double value) {
  set_has_att18();
  att18_ = value;
}

// required double att19 = 19;
inline bool Performance_innercomplexPerformance_4::has_att19() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void Performance_innercomplexPerformance_4::set_has_att19() {
  _has_bits_[0] |= 0x00040000u;
}
inline void Performance_innercomplexPerformance_4::clear_has_att19() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void Performance_innercomplexPerformance_4::clear_att19() {
  att19_ = 0;
  clear_has_att19();
}
inline double Performance_innercomplexPerformance_4::att19() const {
  return att19_;
}
inline void Performance_innercomplexPerformance_4::set_att19(double value) {
  set_has_att19();
  att19_ = value;
}

// required double att20 = 20;
inline bool Performance_innercomplexPerformance_4::has_att20() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void Performance_innercomplexPerformance_4::set_has_att20() {
  _has_bits_[0] |= 0x00080000u;
}
inline void Performance_innercomplexPerformance_4::clear_has_att20() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void Performance_innercomplexPerformance_4::clear_att20() {
  att20_ = 0;
  clear_has_att20();
}
inline double Performance_innercomplexPerformance_4::att20() const {
  return att20_;
}
inline void Performance_innercomplexPerformance_4::set_att20(double value) {
  set_has_att20();
  att20_ = value;
}

// required bool att21 = 21;
inline bool Performance_innercomplexPerformance_4::has_att21() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void Performance_innercomplexPerformance_4::set_has_att21() {
  _has_bits_[0] |= 0x00100000u;
}
inline void Performance_innercomplexPerformance_4::clear_has_att21() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void Performance_innercomplexPerformance_4::clear_att21() {
  att21_ = false;
  clear_has_att21();
}
inline bool Performance_innercomplexPerformance_4::att21() const {
  return att21_;
}
inline void Performance_innercomplexPerformance_4::set_att21(bool value) {
  set_has_att21();
  att21_ = value;
}

// required bool att22 = 22;
inline bool Performance_innercomplexPerformance_4::has_att22() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void Performance_innercomplexPerformance_4::set_has_att22() {
  _has_bits_[0] |= 0x00200000u;
}
inline void Performance_innercomplexPerformance_4::clear_has_att22() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void Performance_innercomplexPerformance_4::clear_att22() {
  att22_ = false;
  clear_has_att22();
}
inline bool Performance_innercomplexPerformance_4::att22() const {
  return att22_;
}
inline void Performance_innercomplexPerformance_4::set_att22(bool value) {
  set_has_att22();
  att22_ = value;
}

// required bool att23 = 23;
inline bool Performance_innercomplexPerformance_4::has_att23() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void Performance_innercomplexPerformance_4::set_has_att23() {
  _has_bits_[0] |= 0x00400000u;
}
inline void Performance_innercomplexPerformance_4::clear_has_att23() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void Performance_innercomplexPerformance_4::clear_att23() {
  att23_ = false;
  clear_has_att23();
}
inline bool Performance_innercomplexPerformance_4::att23() const {
  return att23_;
}
inline void Performance_innercomplexPerformance_4::set_att23(bool value) {
  set_has_att23();
  att23_ = value;
}

// required bool att24 = 24;
inline bool Performance_innercomplexPerformance_4::has_att24() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void Performance_innercomplexPerformance_4::set_has_att24() {
  _has_bits_[0] |= 0x00800000u;
}
inline void Performance_innercomplexPerformance_4::clear_has_att24() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void Performance_innercomplexPerformance_4::clear_att24() {
  att24_ = false;
  clear_has_att24();
}
inline bool Performance_innercomplexPerformance_4::att24() const {
  return att24_;
}
inline void Performance_innercomplexPerformance_4::set_att24(bool value) {
  set_has_att24();
  att24_ = value;
}

// -------------------------------------------------------------------

// Performance_outercomplexPerformance_4

// required int32 att1 = 1;
inline bool Performance_outercomplexPerformance_4::has_att1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Performance_outercomplexPerformance_4::set_has_att1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Performance_outercomplexPerformance_4::clear_has_att1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Performance_outercomplexPerformance_4::clear_att1() {
  att1_ = 0;
  clear_has_att1();
}
inline ::google::protobuf::int32 Performance_outercomplexPerformance_4::att1() const {
  return att1_;
}
inline void Performance_outercomplexPerformance_4::set_att1(::google::protobuf::int32 value) {
  set_has_att1();
  att1_ = value;
}

// required int64 att2 = 2;
inline bool Performance_outercomplexPerformance_4::has_att2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Performance_outercomplexPerformance_4::set_has_att2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Performance_outercomplexPerformance_4::clear_has_att2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Performance_outercomplexPerformance_4::clear_att2() {
  att2_ = GOOGLE_LONGLONG(0);
  clear_has_att2();
}
inline ::google::protobuf::int64 Performance_outercomplexPerformance_4::att2() const {
  return att2_;
}
inline void Performance_outercomplexPerformance_4::set_att2(::google::protobuf::int64 value) {
  set_has_att2();
  att2_ = value;
}

// required string att3 = 3;
inline bool Performance_outercomplexPerformance_4::has_att3() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Performance_outercomplexPerformance_4::set_has_att3() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Performance_outercomplexPerformance_4::clear_has_att3() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Performance_outercomplexPerformance_4::clear_att3() {
  if (att3_ != &::google::protobuf::internal::kEmptyString) {
    att3_->clear();
  }
  clear_has_att3();
}
inline const ::std::string& Performance_outercomplexPerformance_4::att3() const {
  return *att3_;
}
inline void Performance_outercomplexPerformance_4::set_att3(const ::std::string& value) {
  set_has_att3();
  if (att3_ == &::google::protobuf::internal::kEmptyString) {
    att3_ = new ::std::string;
  }
  att3_->assign(value);
}
inline void Performance_outercomplexPerformance_4::set_att3(const char* value) {
  set_has_att3();
  if (att3_ == &::google::protobuf::internal::kEmptyString) {
    att3_ = new ::std::string;
  }
  att3_->assign(value);
}
inline void Performance_outercomplexPerformance_4::set_att3(const char* value, size_t size) {
  set_has_att3();
  if (att3_ == &::google::protobuf::internal::kEmptyString) {
    att3_ = new ::std::string;
  }
  att3_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Performance_outercomplexPerformance_4::mutable_att3() {
  set_has_att3();
  if (att3_ == &::google::protobuf::internal::kEmptyString) {
    att3_ = new ::std::string;
  }
  return att3_;
}
inline ::std::string* Performance_outercomplexPerformance_4::release_att3() {
  clear_has_att3();
  if (att3_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = att3_;
    att3_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Performance_outercomplexPerformance_4::set_allocated_att3(::std::string* att3) {
  if (att3_ != &::google::protobuf::internal::kEmptyString) {
    delete att3_;
  }
  if (att3) {
    set_has_att3();
    att3_ = att3;
  } else {
    clear_has_att3();
    att3_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required .performance.Performance.innercomplexPerformance_4 att4 = 4;
inline bool Performance_outercomplexPerformance_4::has_att4() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Performance_outercomplexPerformance_4::set_has_att4() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Performance_outercomplexPerformance_4::clear_has_att4() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Performance_outercomplexPerformance_4::clear_att4() {
  if (att4_ != NULL) att4_->::performance::Performance_innercomplexPerformance_4::Clear();
  clear_has_att4();
}
inline const ::performance::Performance_innercomplexPerformance_4& Performance_outercomplexPerformance_4::att4() const {
  return att4_ != NULL ? *att4_ : *default_instance_->att4_;
}
inline ::performance::Performance_innercomplexPerformance_4* Performance_outercomplexPerformance_4::mutable_att4() {
  set_has_att4();
  if (att4_ == NULL) att4_ = new ::performance::Performance_innercomplexPerformance_4;
  return att4_;
}
inline ::performance::Performance_innercomplexPerformance_4* Performance_outercomplexPerformance_4::release_att4() {
  clear_has_att4();
  ::performance::Performance_innercomplexPerformance_4* temp = att4_;
  att4_ = NULL;
  return temp;
}
inline void Performance_outercomplexPerformance_4::set_allocated_att4(::performance::Performance_innercomplexPerformance_4* att4) {
  delete att4_;
  att4_ = att4;
  if (att4) {
    set_has_att4();
  } else {
    clear_has_att4();
  }
}

// required float att5 = 5;
inline bool Performance_outercomplexPerformance_4::has_att5() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Performance_outercomplexPerformance_4::set_has_att5() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Performance_outercomplexPerformance_4::clear_has_att5() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Performance_outercomplexPerformance_4::clear_att5() {
  att5_ = 0;
  clear_has_att5();
}
inline float Performance_outercomplexPerformance_4::att5() const {
  return att5_;
}
inline void Performance_outercomplexPerformance_4::set_att5(float value) {
  set_has_att5();
  att5_ = value;
}

// required double att6 = 6;
inline bool Performance_outercomplexPerformance_4::has_att6() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Performance_outercomplexPerformance_4::set_has_att6() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Performance_outercomplexPerformance_4::clear_has_att6() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Performance_outercomplexPerformance_4::clear_att6() {
  att6_ = 0;
  clear_has_att6();
}
inline double Performance_outercomplexPerformance_4::att6() const {
  return att6_;
}
inline void Performance_outercomplexPerformance_4::set_att6(double value) {
  set_has_att6();
  att6_ = value;
}

// required bool att7 = 7;
inline bool Performance_outercomplexPerformance_4::has_att7() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Performance_outercomplexPerformance_4::set_has_att7() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Performance_outercomplexPerformance_4::clear_has_att7() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Performance_outercomplexPerformance_4::clear_att7() {
  att7_ = false;
  clear_has_att7();
}
inline bool Performance_outercomplexPerformance_4::att7() const {
  return att7_;
}
inline void Performance_outercomplexPerformance_4::set_att7(bool value) {
  set_has_att7();
  att7_ = value;
}

// required int64 att8 = 8;
inline bool Performance_outercomplexPerformance_4::has_att8() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Performance_outercomplexPerformance_4::set_has_att8() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Performance_outercomplexPerformance_4::clear_has_att8() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Performance_outercomplexPerformance_4::clear_att8() {
  att8_ = GOOGLE_LONGLONG(0);
  clear_has_att8();
}
inline ::google::protobuf::int64 Performance_outercomplexPerformance_4::att8() const {
  return att8_;
}
inline void Performance_outercomplexPerformance_4::set_att8(::google::protobuf::int64 value) {
  set_has_att8();
  att8_ = value;
}

// required string att9 = 9;
inline bool Performance_outercomplexPerformance_4::has_att9() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Performance_outercomplexPerformance_4::set_has_att9() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Performance_outercomplexPerformance_4::clear_has_att9() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Performance_outercomplexPerformance_4::clear_att9() {
  if (att9_ != &::google::protobuf::internal::kEmptyString) {
    att9_->clear();
  }
  clear_has_att9();
}
inline const ::std::string& Performance_outercomplexPerformance_4::att9() const {
  return *att9_;
}
inline void Performance_outercomplexPerformance_4::set_att9(const ::std::string& value) {
  set_has_att9();
  if (att9_ == &::google::protobuf::internal::kEmptyString) {
    att9_ = new ::std::string;
  }
  att9_->assign(value);
}
inline void Performance_outercomplexPerformance_4::set_att9(const char* value) {
  set_has_att9();
  if (att9_ == &::google::protobuf::internal::kEmptyString) {
    att9_ = new ::std::string;
  }
  att9_->assign(value);
}
inline void Performance_outercomplexPerformance_4::set_att9(const char* value, size_t size) {
  set_has_att9();
  if (att9_ == &::google::protobuf::internal::kEmptyString) {
    att9_ = new ::std::string;
  }
  att9_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Performance_outercomplexPerformance_4::mutable_att9() {
  set_has_att9();
  if (att9_ == &::google::protobuf::internal::kEmptyString) {
    att9_ = new ::std::string;
  }
  return att9_;
}
inline ::std::string* Performance_outercomplexPerformance_4::release_att9() {
  clear_has_att9();
  if (att9_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = att9_;
    att9_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Performance_outercomplexPerformance_4::set_allocated_att9(::std::string* att9) {
  if (att9_ != &::google::protobuf::internal::kEmptyString) {
    delete att9_;
  }
  if (att9) {
    set_has_att9();
    att9_ = att9;
  } else {
    clear_has_att9();
    att9_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required .performance.Performance.innercomplexPerformance_4 att10 = 10;
inline bool Performance_outercomplexPerformance_4::has_att10() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Performance_outercomplexPerformance_4::set_has_att10() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Performance_outercomplexPerformance_4::clear_has_att10() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Performance_outercomplexPerformance_4::clear_att10() {
  if (att10_ != NULL) att10_->::performance::Performance_innercomplexPerformance_4::Clear();
  clear_has_att10();
}
inline const ::performance::Performance_innercomplexPerformance_4& Performance_outercomplexPerformance_4::att10() const {
  return att10_ != NULL ? *att10_ : *default_instance_->att10_;
}
inline ::performance::Performance_innercomplexPerformance_4* Performance_outercomplexPerformance_4::mutable_att10() {
  set_has_att10();
  if (att10_ == NULL) att10_ = new ::performance::Performance_innercomplexPerformance_4;
  return att10_;
}
inline ::performance::Performance_innercomplexPerformance_4* Performance_outercomplexPerformance_4::release_att10() {
  clear_has_att10();
  ::performance::Performance_innercomplexPerformance_4* temp = att10_;
  att10_ = NULL;
  return temp;
}
inline void Performance_outercomplexPerformance_4::set_allocated_att10(::performance::Performance_innercomplexPerformance_4* att10) {
  delete att10_;
  att10_ = att10;
  if (att10) {
    set_has_att10();
  } else {
    clear_has_att10();
  }
}

// required float att11 = 11;
inline bool Performance_outercomplexPerformance_4::has_att11() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Performance_outercomplexPerformance_4::set_has_att11() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Performance_outercomplexPerformance_4::clear_has_att11() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Performance_outercomplexPerformance_4::clear_att11() {
  att11_ = 0;
  clear_has_att11();
}
inline float Performance_outercomplexPerformance_4::att11() const {
  return att11_;
}
inline void Performance_outercomplexPerformance_4::set_att11(float value) {
  set_has_att11();
  att11_ = value;
}

// required double att12 = 12;
inline bool Performance_outercomplexPerformance_4::has_att12() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Performance_outercomplexPerformance_4::set_has_att12() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Performance_outercomplexPerformance_4::clear_has_att12() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Performance_outercomplexPerformance_4::clear_att12() {
  att12_ = 0;
  clear_has_att12();
}
inline double Performance_outercomplexPerformance_4::att12() const {
  return att12_;
}
inline void Performance_outercomplexPerformance_4::set_att12(double value) {
  set_has_att12();
  att12_ = value;
}

// required bool att13 = 13;
inline bool Performance_outercomplexPerformance_4::has_att13() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Performance_outercomplexPerformance_4::set_has_att13() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Performance_outercomplexPerformance_4::clear_has_att13() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Performance_outercomplexPerformance_4::clear_att13() {
  att13_ = false;
  clear_has_att13();
}
inline bool Performance_outercomplexPerformance_4::att13() const {
  return att13_;
}
inline void Performance_outercomplexPerformance_4::set_att13(bool value) {
  set_has_att13();
  att13_ = value;
}

// required string att14 = 14;
inline bool Performance_outercomplexPerformance_4::has_att14() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void Performance_outercomplexPerformance_4::set_has_att14() {
  _has_bits_[0] |= 0x00002000u;
}
inline void Performance_outercomplexPerformance_4::clear_has_att14() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void Performance_outercomplexPerformance_4::clear_att14() {
  if (att14_ != &::google::protobuf::internal::kEmptyString) {
    att14_->clear();
  }
  clear_has_att14();
}
inline const ::std::string& Performance_outercomplexPerformance_4::att14() const {
  return *att14_;
}
inline void Performance_outercomplexPerformance_4::set_att14(const ::std::string& value) {
  set_has_att14();
  if (att14_ == &::google::protobuf::internal::kEmptyString) {
    att14_ = new ::std::string;
  }
  att14_->assign(value);
}
inline void Performance_outercomplexPerformance_4::set_att14(const char* value) {
  set_has_att14();
  if (att14_ == &::google::protobuf::internal::kEmptyString) {
    att14_ = new ::std::string;
  }
  att14_->assign(value);
}
inline void Performance_outercomplexPerformance_4::set_att14(const char* value, size_t size) {
  set_has_att14();
  if (att14_ == &::google::protobuf::internal::kEmptyString) {
    att14_ = new ::std::string;
  }
  att14_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Performance_outercomplexPerformance_4::mutable_att14() {
  set_has_att14();
  if (att14_ == &::google::protobuf::internal::kEmptyString) {
    att14_ = new ::std::string;
  }
  return att14_;
}
inline ::std::string* Performance_outercomplexPerformance_4::release_att14() {
  clear_has_att14();
  if (att14_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = att14_;
    att14_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Performance_outercomplexPerformance_4::set_allocated_att14(::std::string* att14) {
  if (att14_ != &::google::protobuf::internal::kEmptyString) {
    delete att14_;
  }
  if (att14) {
    set_has_att14();
    att14_ = att14;
  } else {
    clear_has_att14();
    att14_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required .performance.Performance.innercomplexPerformance_4 att15 = 15;
inline bool Performance_outercomplexPerformance_4::has_att15() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void Performance_outercomplexPerformance_4::set_has_att15() {
  _has_bits_[0] |= 0x00004000u;
}
inline void Performance_outercomplexPerformance_4::clear_has_att15() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void Performance_outercomplexPerformance_4::clear_att15() {
  if (att15_ != NULL) att15_->::performance::Performance_innercomplexPerformance_4::Clear();
  clear_has_att15();
}
inline const ::performance::Performance_innercomplexPerformance_4& Performance_outercomplexPerformance_4::att15() const {
  return att15_ != NULL ? *att15_ : *default_instance_->att15_;
}
inline ::performance::Performance_innercomplexPerformance_4* Performance_outercomplexPerformance_4::mutable_att15() {
  set_has_att15();
  if (att15_ == NULL) att15_ = new ::performance::Performance_innercomplexPerformance_4;
  return att15_;
}
inline ::performance::Performance_innercomplexPerformance_4* Performance_outercomplexPerformance_4::release_att15() {
  clear_has_att15();
  ::performance::Performance_innercomplexPerformance_4* temp = att15_;
  att15_ = NULL;
  return temp;
}
inline void Performance_outercomplexPerformance_4::set_allocated_att15(::performance::Performance_innercomplexPerformance_4* att15) {
  delete att15_;
  att15_ = att15;
  if (att15) {
    set_has_att15();
  } else {
    clear_has_att15();
  }
}

// required float att16 = 16;
inline bool Performance_outercomplexPerformance_4::has_att16() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void Performance_outercomplexPerformance_4::set_has_att16() {
  _has_bits_[0] |= 0x00008000u;
}
inline void Performance_outercomplexPerformance_4::clear_has_att16() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void Performance_outercomplexPerformance_4::clear_att16() {
  att16_ = 0;
  clear_has_att16();
}
inline float Performance_outercomplexPerformance_4::att16() const {
  return att16_;
}
inline void Performance_outercomplexPerformance_4::set_att16(float value) {
  set_has_att16();
  att16_ = value;
}

// required double att17 = 17;
inline bool Performance_outercomplexPerformance_4::has_att17() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void Performance_outercomplexPerformance_4::set_has_att17() {
  _has_bits_[0] |= 0x00010000u;
}
inline void Performance_outercomplexPerformance_4::clear_has_att17() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void Performance_outercomplexPerformance_4::clear_att17() {
  att17_ = 0;
  clear_has_att17();
}
inline double Performance_outercomplexPerformance_4::att17() const {
  return att17_;
}
inline void Performance_outercomplexPerformance_4::set_att17(double value) {
  set_has_att17();
  att17_ = value;
}

// required bool att18 = 18;
inline bool Performance_outercomplexPerformance_4::has_att18() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void Performance_outercomplexPerformance_4::set_has_att18() {
  _has_bits_[0] |= 0x00020000u;
}
inline void Performance_outercomplexPerformance_4::clear_has_att18() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void Performance_outercomplexPerformance_4::clear_att18() {
  att18_ = false;
  clear_has_att18();
}
inline bool Performance_outercomplexPerformance_4::att18() const {
  return att18_;
}
inline void Performance_outercomplexPerformance_4::set_att18(bool value) {
  set_has_att18();
  att18_ = value;
}

// required .performance.Performance.innercomplexPerformance_4 att19 = 19;
inline bool Performance_outercomplexPerformance_4::has_att19() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void Performance_outercomplexPerformance_4::set_has_att19() {
  _has_bits_[0] |= 0x00040000u;
}
inline void Performance_outercomplexPerformance_4::clear_has_att19() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void Performance_outercomplexPerformance_4::clear_att19() {
  if (att19_ != NULL) att19_->::performance::Performance_innercomplexPerformance_4::Clear();
  clear_has_att19();
}
inline const ::performance::Performance_innercomplexPerformance_4& Performance_outercomplexPerformance_4::att19() const {
  return att19_ != NULL ? *att19_ : *default_instance_->att19_;
}
inline ::performance::Performance_innercomplexPerformance_4* Performance_outercomplexPerformance_4::mutable_att19() {
  set_has_att19();
  if (att19_ == NULL) att19_ = new ::performance::Performance_innercomplexPerformance_4;
  return att19_;
}
inline ::performance::Performance_innercomplexPerformance_4* Performance_outercomplexPerformance_4::release_att19() {
  clear_has_att19();
  ::performance::Performance_innercomplexPerformance_4* temp = att19_;
  att19_ = NULL;
  return temp;
}
inline void Performance_outercomplexPerformance_4::set_allocated_att19(::performance::Performance_innercomplexPerformance_4* att19) {
  delete att19_;
  att19_ = att19;
  if (att19) {
    set_has_att19();
  } else {
    clear_has_att19();
  }
}

// required float att20 = 20;
inline bool Performance_outercomplexPerformance_4::has_att20() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void Performance_outercomplexPerformance_4::set_has_att20() {
  _has_bits_[0] |= 0x00080000u;
}
inline void Performance_outercomplexPerformance_4::clear_has_att20() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void Performance_outercomplexPerformance_4::clear_att20() {
  att20_ = 0;
  clear_has_att20();
}
inline float Performance_outercomplexPerformance_4::att20() const {
  return att20_;
}
inline void Performance_outercomplexPerformance_4::set_att20(float value) {
  set_has_att20();
  att20_ = value;
}

// required double att21 = 21;
inline bool Performance_outercomplexPerformance_4::has_att21() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void Performance_outercomplexPerformance_4::set_has_att21() {
  _has_bits_[0] |= 0x00100000u;
}
inline void Performance_outercomplexPerformance_4::clear_has_att21() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void Performance_outercomplexPerformance_4::clear_att21() {
  att21_ = 0;
  clear_has_att21();
}
inline double Performance_outercomplexPerformance_4::att21() const {
  return att21_;
}
inline void Performance_outercomplexPerformance_4::set_att21(double value) {
  set_has_att21();
  att21_ = value;
}

// required bool att22 = 22;
inline bool Performance_outercomplexPerformance_4::has_att22() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void Performance_outercomplexPerformance_4::set_has_att22() {
  _has_bits_[0] |= 0x00200000u;
}
inline void Performance_outercomplexPerformance_4::clear_has_att22() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void Performance_outercomplexPerformance_4::clear_att22() {
  att22_ = false;
  clear_has_att22();
}
inline bool Performance_outercomplexPerformance_4::att22() const {
  return att22_;
}
inline void Performance_outercomplexPerformance_4::set_att22(bool value) {
  set_has_att22();
  att22_ = value;
}

// -------------------------------------------------------------------

// Performance_innercomplexPerformance_5

// required int32 att1 = 1;
inline bool Performance_innercomplexPerformance_5::has_att1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Performance_innercomplexPerformance_5::set_has_att1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Performance_innercomplexPerformance_5::clear_has_att1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Performance_innercomplexPerformance_5::clear_att1() {
  att1_ = 0;
  clear_has_att1();
}
inline ::google::protobuf::int32 Performance_innercomplexPerformance_5::att1() const {
  return att1_;
}
inline void Performance_innercomplexPerformance_5::set_att1(::google::protobuf::int32 value) {
  set_has_att1();
  att1_ = value;
}

// required int32 att2 = 2;
inline bool Performance_innercomplexPerformance_5::has_att2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Performance_innercomplexPerformance_5::set_has_att2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Performance_innercomplexPerformance_5::clear_has_att2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Performance_innercomplexPerformance_5::clear_att2() {
  att2_ = 0;
  clear_has_att2();
}
inline ::google::protobuf::int32 Performance_innercomplexPerformance_5::att2() const {
  return att2_;
}
inline void Performance_innercomplexPerformance_5::set_att2(::google::protobuf::int32 value) {
  set_has_att2();
  att2_ = value;
}

// required int32 att3 = 3;
inline bool Performance_innercomplexPerformance_5::has_att3() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Performance_innercomplexPerformance_5::set_has_att3() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Performance_innercomplexPerformance_5::clear_has_att3() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Performance_innercomplexPerformance_5::clear_att3() {
  att3_ = 0;
  clear_has_att3();
}
inline ::google::protobuf::int32 Performance_innercomplexPerformance_5::att3() const {
  return att3_;
}
inline void Performance_innercomplexPerformance_5::set_att3(::google::protobuf::int32 value) {
  set_has_att3();
  att3_ = value;
}

// required int32 att4 = 4;
inline bool Performance_innercomplexPerformance_5::has_att4() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Performance_innercomplexPerformance_5::set_has_att4() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Performance_innercomplexPerformance_5::clear_has_att4() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Performance_innercomplexPerformance_5::clear_att4() {
  att4_ = 0;
  clear_has_att4();
}
inline ::google::protobuf::int32 Performance_innercomplexPerformance_5::att4() const {
  return att4_;
}
inline void Performance_innercomplexPerformance_5::set_att4(::google::protobuf::int32 value) {
  set_has_att4();
  att4_ = value;
}

// required int32 att5 = 5;
inline bool Performance_innercomplexPerformance_5::has_att5() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Performance_innercomplexPerformance_5::set_has_att5() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Performance_innercomplexPerformance_5::clear_has_att5() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Performance_innercomplexPerformance_5::clear_att5() {
  att5_ = 0;
  clear_has_att5();
}
inline ::google::protobuf::int32 Performance_innercomplexPerformance_5::att5() const {
  return att5_;
}
inline void Performance_innercomplexPerformance_5::set_att5(::google::protobuf::int32 value) {
  set_has_att5();
  att5_ = value;
}

// required int64 att6 = 6;
inline bool Performance_innercomplexPerformance_5::has_att6() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Performance_innercomplexPerformance_5::set_has_att6() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Performance_innercomplexPerformance_5::clear_has_att6() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Performance_innercomplexPerformance_5::clear_att6() {
  att6_ = GOOGLE_LONGLONG(0);
  clear_has_att6();
}
inline ::google::protobuf::int64 Performance_innercomplexPerformance_5::att6() const {
  return att6_;
}
inline void Performance_innercomplexPerformance_5::set_att6(::google::protobuf::int64 value) {
  set_has_att6();
  att6_ = value;
}

// required int64 att7 = 7;
inline bool Performance_innercomplexPerformance_5::has_att7() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Performance_innercomplexPerformance_5::set_has_att7() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Performance_innercomplexPerformance_5::clear_has_att7() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Performance_innercomplexPerformance_5::clear_att7() {
  att7_ = GOOGLE_LONGLONG(0);
  clear_has_att7();
}
inline ::google::protobuf::int64 Performance_innercomplexPerformance_5::att7() const {
  return att7_;
}
inline void Performance_innercomplexPerformance_5::set_att7(::google::protobuf::int64 value) {
  set_has_att7();
  att7_ = value;
}

// required int64 att8 = 8;
inline bool Performance_innercomplexPerformance_5::has_att8() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Performance_innercomplexPerformance_5::set_has_att8() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Performance_innercomplexPerformance_5::clear_has_att8() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Performance_innercomplexPerformance_5::clear_att8() {
  att8_ = GOOGLE_LONGLONG(0);
  clear_has_att8();
}
inline ::google::protobuf::int64 Performance_innercomplexPerformance_5::att8() const {
  return att8_;
}
inline void Performance_innercomplexPerformance_5::set_att8(::google::protobuf::int64 value) {
  set_has_att8();
  att8_ = value;
}

// required int64 att9 = 9;
inline bool Performance_innercomplexPerformance_5::has_att9() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Performance_innercomplexPerformance_5::set_has_att9() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Performance_innercomplexPerformance_5::clear_has_att9() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Performance_innercomplexPerformance_5::clear_att9() {
  att9_ = GOOGLE_LONGLONG(0);
  clear_has_att9();
}
inline ::google::protobuf::int64 Performance_innercomplexPerformance_5::att9() const {
  return att9_;
}
inline void Performance_innercomplexPerformance_5::set_att9(::google::protobuf::int64 value) {
  set_has_att9();
  att9_ = value;
}

// required int64 att10 = 10;
inline bool Performance_innercomplexPerformance_5::has_att10() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Performance_innercomplexPerformance_5::set_has_att10() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Performance_innercomplexPerformance_5::clear_has_att10() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Performance_innercomplexPerformance_5::clear_att10() {
  att10_ = GOOGLE_LONGLONG(0);
  clear_has_att10();
}
inline ::google::protobuf::int64 Performance_innercomplexPerformance_5::att10() const {
  return att10_;
}
inline void Performance_innercomplexPerformance_5::set_att10(::google::protobuf::int64 value) {
  set_has_att10();
  att10_ = value;
}

// required string att11 = 11;
inline bool Performance_innercomplexPerformance_5::has_att11() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Performance_innercomplexPerformance_5::set_has_att11() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Performance_innercomplexPerformance_5::clear_has_att11() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Performance_innercomplexPerformance_5::clear_att11() {
  if (att11_ != &::google::protobuf::internal::kEmptyString) {
    att11_->clear();
  }
  clear_has_att11();
}
inline const ::std::string& Performance_innercomplexPerformance_5::att11() const {
  return *att11_;
}
inline void Performance_innercomplexPerformance_5::set_att11(const ::std::string& value) {
  set_has_att11();
  if (att11_ == &::google::protobuf::internal::kEmptyString) {
    att11_ = new ::std::string;
  }
  att11_->assign(value);
}
inline void Performance_innercomplexPerformance_5::set_att11(const char* value) {
  set_has_att11();
  if (att11_ == &::google::protobuf::internal::kEmptyString) {
    att11_ = new ::std::string;
  }
  att11_->assign(value);
}
inline void Performance_innercomplexPerformance_5::set_att11(const char* value, size_t size) {
  set_has_att11();
  if (att11_ == &::google::protobuf::internal::kEmptyString) {
    att11_ = new ::std::string;
  }
  att11_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Performance_innercomplexPerformance_5::mutable_att11() {
  set_has_att11();
  if (att11_ == &::google::protobuf::internal::kEmptyString) {
    att11_ = new ::std::string;
  }
  return att11_;
}
inline ::std::string* Performance_innercomplexPerformance_5::release_att11() {
  clear_has_att11();
  if (att11_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = att11_;
    att11_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Performance_innercomplexPerformance_5::set_allocated_att11(::std::string* att11) {
  if (att11_ != &::google::protobuf::internal::kEmptyString) {
    delete att11_;
  }
  if (att11) {
    set_has_att11();
    att11_ = att11;
  } else {
    clear_has_att11();
    att11_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string att12 = 12;
inline bool Performance_innercomplexPerformance_5::has_att12() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Performance_innercomplexPerformance_5::set_has_att12() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Performance_innercomplexPerformance_5::clear_has_att12() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Performance_innercomplexPerformance_5::clear_att12() {
  if (att12_ != &::google::protobuf::internal::kEmptyString) {
    att12_->clear();
  }
  clear_has_att12();
}
inline const ::std::string& Performance_innercomplexPerformance_5::att12() const {
  return *att12_;
}
inline void Performance_innercomplexPerformance_5::set_att12(const ::std::string& value) {
  set_has_att12();
  if (att12_ == &::google::protobuf::internal::kEmptyString) {
    att12_ = new ::std::string;
  }
  att12_->assign(value);
}
inline void Performance_innercomplexPerformance_5::set_att12(const char* value) {
  set_has_att12();
  if (att12_ == &::google::protobuf::internal::kEmptyString) {
    att12_ = new ::std::string;
  }
  att12_->assign(value);
}
inline void Performance_innercomplexPerformance_5::set_att12(const char* value, size_t size) {
  set_has_att12();
  if (att12_ == &::google::protobuf::internal::kEmptyString) {
    att12_ = new ::std::string;
  }
  att12_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Performance_innercomplexPerformance_5::mutable_att12() {
  set_has_att12();
  if (att12_ == &::google::protobuf::internal::kEmptyString) {
    att12_ = new ::std::string;
  }
  return att12_;
}
inline ::std::string* Performance_innercomplexPerformance_5::release_att12() {
  clear_has_att12();
  if (att12_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = att12_;
    att12_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Performance_innercomplexPerformance_5::set_allocated_att12(::std::string* att12) {
  if (att12_ != &::google::protobuf::internal::kEmptyString) {
    delete att12_;
  }
  if (att12) {
    set_has_att12();
    att12_ = att12;
  } else {
    clear_has_att12();
    att12_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string att13 = 13;
inline bool Performance_innercomplexPerformance_5::has_att13() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Performance_innercomplexPerformance_5::set_has_att13() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Performance_innercomplexPerformance_5::clear_has_att13() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Performance_innercomplexPerformance_5::clear_att13() {
  if (att13_ != &::google::protobuf::internal::kEmptyString) {
    att13_->clear();
  }
  clear_has_att13();
}
inline const ::std::string& Performance_innercomplexPerformance_5::att13() const {
  return *att13_;
}
inline void Performance_innercomplexPerformance_5::set_att13(const ::std::string& value) {
  set_has_att13();
  if (att13_ == &::google::protobuf::internal::kEmptyString) {
    att13_ = new ::std::string;
  }
  att13_->assign(value);
}
inline void Performance_innercomplexPerformance_5::set_att13(const char* value) {
  set_has_att13();
  if (att13_ == &::google::protobuf::internal::kEmptyString) {
    att13_ = new ::std::string;
  }
  att13_->assign(value);
}
inline void Performance_innercomplexPerformance_5::set_att13(const char* value, size_t size) {
  set_has_att13();
  if (att13_ == &::google::protobuf::internal::kEmptyString) {
    att13_ = new ::std::string;
  }
  att13_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Performance_innercomplexPerformance_5::mutable_att13() {
  set_has_att13();
  if (att13_ == &::google::protobuf::internal::kEmptyString) {
    att13_ = new ::std::string;
  }
  return att13_;
}
inline ::std::string* Performance_innercomplexPerformance_5::release_att13() {
  clear_has_att13();
  if (att13_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = att13_;
    att13_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Performance_innercomplexPerformance_5::set_allocated_att13(::std::string* att13) {
  if (att13_ != &::google::protobuf::internal::kEmptyString) {
    delete att13_;
  }
  if (att13) {
    set_has_att13();
    att13_ = att13;
  } else {
    clear_has_att13();
    att13_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string att14 = 14;
inline bool Performance_innercomplexPerformance_5::has_att14() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void Performance_innercomplexPerformance_5::set_has_att14() {
  _has_bits_[0] |= 0x00002000u;
}
inline void Performance_innercomplexPerformance_5::clear_has_att14() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void Performance_innercomplexPerformance_5::clear_att14() {
  if (att14_ != &::google::protobuf::internal::kEmptyString) {
    att14_->clear();
  }
  clear_has_att14();
}
inline const ::std::string& Performance_innercomplexPerformance_5::att14() const {
  return *att14_;
}
inline void Performance_innercomplexPerformance_5::set_att14(const ::std::string& value) {
  set_has_att14();
  if (att14_ == &::google::protobuf::internal::kEmptyString) {
    att14_ = new ::std::string;
  }
  att14_->assign(value);
}
inline void Performance_innercomplexPerformance_5::set_att14(const char* value) {
  set_has_att14();
  if (att14_ == &::google::protobuf::internal::kEmptyString) {
    att14_ = new ::std::string;
  }
  att14_->assign(value);
}
inline void Performance_innercomplexPerformance_5::set_att14(const char* value, size_t size) {
  set_has_att14();
  if (att14_ == &::google::protobuf::internal::kEmptyString) {
    att14_ = new ::std::string;
  }
  att14_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Performance_innercomplexPerformance_5::mutable_att14() {
  set_has_att14();
  if (att14_ == &::google::protobuf::internal::kEmptyString) {
    att14_ = new ::std::string;
  }
  return att14_;
}
inline ::std::string* Performance_innercomplexPerformance_5::release_att14() {
  clear_has_att14();
  if (att14_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = att14_;
    att14_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Performance_innercomplexPerformance_5::set_allocated_att14(::std::string* att14) {
  if (att14_ != &::google::protobuf::internal::kEmptyString) {
    delete att14_;
  }
  if (att14) {
    set_has_att14();
    att14_ = att14;
  } else {
    clear_has_att14();
    att14_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string att15 = 15;
inline bool Performance_innercomplexPerformance_5::has_att15() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void Performance_innercomplexPerformance_5::set_has_att15() {
  _has_bits_[0] |= 0x00004000u;
}
inline void Performance_innercomplexPerformance_5::clear_has_att15() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void Performance_innercomplexPerformance_5::clear_att15() {
  if (att15_ != &::google::protobuf::internal::kEmptyString) {
    att15_->clear();
  }
  clear_has_att15();
}
inline const ::std::string& Performance_innercomplexPerformance_5::att15() const {
  return *att15_;
}
inline void Performance_innercomplexPerformance_5::set_att15(const ::std::string& value) {
  set_has_att15();
  if (att15_ == &::google::protobuf::internal::kEmptyString) {
    att15_ = new ::std::string;
  }
  att15_->assign(value);
}
inline void Performance_innercomplexPerformance_5::set_att15(const char* value) {
  set_has_att15();
  if (att15_ == &::google::protobuf::internal::kEmptyString) {
    att15_ = new ::std::string;
  }
  att15_->assign(value);
}
inline void Performance_innercomplexPerformance_5::set_att15(const char* value, size_t size) {
  set_has_att15();
  if (att15_ == &::google::protobuf::internal::kEmptyString) {
    att15_ = new ::std::string;
  }
  att15_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Performance_innercomplexPerformance_5::mutable_att15() {
  set_has_att15();
  if (att15_ == &::google::protobuf::internal::kEmptyString) {
    att15_ = new ::std::string;
  }
  return att15_;
}
inline ::std::string* Performance_innercomplexPerformance_5::release_att15() {
  clear_has_att15();
  if (att15_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = att15_;
    att15_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Performance_innercomplexPerformance_5::set_allocated_att15(::std::string* att15) {
  if (att15_ != &::google::protobuf::internal::kEmptyString) {
    delete att15_;
  }
  if (att15) {
    set_has_att15();
    att15_ = att15;
  } else {
    clear_has_att15();
    att15_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required float att16 = 16;
inline bool Performance_innercomplexPerformance_5::has_att16() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void Performance_innercomplexPerformance_5::set_has_att16() {
  _has_bits_[0] |= 0x00008000u;
}
inline void Performance_innercomplexPerformance_5::clear_has_att16() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void Performance_innercomplexPerformance_5::clear_att16() {
  att16_ = 0;
  clear_has_att16();
}
inline float Performance_innercomplexPerformance_5::att16() const {
  return att16_;
}
inline void Performance_innercomplexPerformance_5::set_att16(float value) {
  set_has_att16();
  att16_ = value;
}

// required float att17 = 17;
inline bool Performance_innercomplexPerformance_5::has_att17() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void Performance_innercomplexPerformance_5::set_has_att17() {
  _has_bits_[0] |= 0x00010000u;
}
inline void Performance_innercomplexPerformance_5::clear_has_att17() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void Performance_innercomplexPerformance_5::clear_att17() {
  att17_ = 0;
  clear_has_att17();
}
inline float Performance_innercomplexPerformance_5::att17() const {
  return att17_;
}
inline void Performance_innercomplexPerformance_5::set_att17(float value) {
  set_has_att17();
  att17_ = value;
}

// required float att18 = 18;
inline bool Performance_innercomplexPerformance_5::has_att18() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void Performance_innercomplexPerformance_5::set_has_att18() {
  _has_bits_[0] |= 0x00020000u;
}
inline void Performance_innercomplexPerformance_5::clear_has_att18() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void Performance_innercomplexPerformance_5::clear_att18() {
  att18_ = 0;
  clear_has_att18();
}
inline float Performance_innercomplexPerformance_5::att18() const {
  return att18_;
}
inline void Performance_innercomplexPerformance_5::set_att18(float value) {
  set_has_att18();
  att18_ = value;
}

// required float att19 = 19;
inline bool Performance_innercomplexPerformance_5::has_att19() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void Performance_innercomplexPerformance_5::set_has_att19() {
  _has_bits_[0] |= 0x00040000u;
}
inline void Performance_innercomplexPerformance_5::clear_has_att19() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void Performance_innercomplexPerformance_5::clear_att19() {
  att19_ = 0;
  clear_has_att19();
}
inline float Performance_innercomplexPerformance_5::att19() const {
  return att19_;
}
inline void Performance_innercomplexPerformance_5::set_att19(float value) {
  set_has_att19();
  att19_ = value;
}

// required float att20 = 20;
inline bool Performance_innercomplexPerformance_5::has_att20() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void Performance_innercomplexPerformance_5::set_has_att20() {
  _has_bits_[0] |= 0x00080000u;
}
inline void Performance_innercomplexPerformance_5::clear_has_att20() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void Performance_innercomplexPerformance_5::clear_att20() {
  att20_ = 0;
  clear_has_att20();
}
inline float Performance_innercomplexPerformance_5::att20() const {
  return att20_;
}
inline void Performance_innercomplexPerformance_5::set_att20(float value) {
  set_has_att20();
  att20_ = value;
}

// required double att21 = 21;
inline bool Performance_innercomplexPerformance_5::has_att21() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void Performance_innercomplexPerformance_5::set_has_att21() {
  _has_bits_[0] |= 0x00100000u;
}
inline void Performance_innercomplexPerformance_5::clear_has_att21() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void Performance_innercomplexPerformance_5::clear_att21() {
  att21_ = 0;
  clear_has_att21();
}
inline double Performance_innercomplexPerformance_5::att21() const {
  return att21_;
}
inline void Performance_innercomplexPerformance_5::set_att21(double value) {
  set_has_att21();
  att21_ = value;
}

// required double att22 = 22;
inline bool Performance_innercomplexPerformance_5::has_att22() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void Performance_innercomplexPerformance_5::set_has_att22() {
  _has_bits_[0] |= 0x00200000u;
}
inline void Performance_innercomplexPerformance_5::clear_has_att22() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void Performance_innercomplexPerformance_5::clear_att22() {
  att22_ = 0;
  clear_has_att22();
}
inline double Performance_innercomplexPerformance_5::att22() const {
  return att22_;
}
inline void Performance_innercomplexPerformance_5::set_att22(double value) {
  set_has_att22();
  att22_ = value;
}

// required double att23 = 23;
inline bool Performance_innercomplexPerformance_5::has_att23() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void Performance_innercomplexPerformance_5::set_has_att23() {
  _has_bits_[0] |= 0x00400000u;
}
inline void Performance_innercomplexPerformance_5::clear_has_att23() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void Performance_innercomplexPerformance_5::clear_att23() {
  att23_ = 0;
  clear_has_att23();
}
inline double Performance_innercomplexPerformance_5::att23() const {
  return att23_;
}
inline void Performance_innercomplexPerformance_5::set_att23(double value) {
  set_has_att23();
  att23_ = value;
}

// required double att24 = 24;
inline bool Performance_innercomplexPerformance_5::has_att24() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void Performance_innercomplexPerformance_5::set_has_att24() {
  _has_bits_[0] |= 0x00800000u;
}
inline void Performance_innercomplexPerformance_5::clear_has_att24() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void Performance_innercomplexPerformance_5::clear_att24() {
  att24_ = 0;
  clear_has_att24();
}
inline double Performance_innercomplexPerformance_5::att24() const {
  return att24_;
}
inline void Performance_innercomplexPerformance_5::set_att24(double value) {
  set_has_att24();
  att24_ = value;
}

// required double att25 = 25;
inline bool Performance_innercomplexPerformance_5::has_att25() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void Performance_innercomplexPerformance_5::set_has_att25() {
  _has_bits_[0] |= 0x01000000u;
}
inline void Performance_innercomplexPerformance_5::clear_has_att25() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void Performance_innercomplexPerformance_5::clear_att25() {
  att25_ = 0;
  clear_has_att25();
}
inline double Performance_innercomplexPerformance_5::att25() const {
  return att25_;
}
inline void Performance_innercomplexPerformance_5::set_att25(double value) {
  set_has_att25();
  att25_ = value;
}

// required bool att26 = 26;
inline bool Performance_innercomplexPerformance_5::has_att26() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void Performance_innercomplexPerformance_5::set_has_att26() {
  _has_bits_[0] |= 0x02000000u;
}
inline void Performance_innercomplexPerformance_5::clear_has_att26() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void Performance_innercomplexPerformance_5::clear_att26() {
  att26_ = false;
  clear_has_att26();
}
inline bool Performance_innercomplexPerformance_5::att26() const {
  return att26_;
}
inline void Performance_innercomplexPerformance_5::set_att26(bool value) {
  set_has_att26();
  att26_ = value;
}

// required bool att27 = 27;
inline bool Performance_innercomplexPerformance_5::has_att27() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void Performance_innercomplexPerformance_5::set_has_att27() {
  _has_bits_[0] |= 0x04000000u;
}
inline void Performance_innercomplexPerformance_5::clear_has_att27() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void Performance_innercomplexPerformance_5::clear_att27() {
  att27_ = false;
  clear_has_att27();
}
inline bool Performance_innercomplexPerformance_5::att27() const {
  return att27_;
}
inline void Performance_innercomplexPerformance_5::set_att27(bool value) {
  set_has_att27();
  att27_ = value;
}

// required bool att28 = 28;
inline bool Performance_innercomplexPerformance_5::has_att28() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void Performance_innercomplexPerformance_5::set_has_att28() {
  _has_bits_[0] |= 0x08000000u;
}
inline void Performance_innercomplexPerformance_5::clear_has_att28() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void Performance_innercomplexPerformance_5::clear_att28() {
  att28_ = false;
  clear_has_att28();
}
inline bool Performance_innercomplexPerformance_5::att28() const {
  return att28_;
}
inline void Performance_innercomplexPerformance_5::set_att28(bool value) {
  set_has_att28();
  att28_ = value;
}

// required bool att29 = 29;
inline bool Performance_innercomplexPerformance_5::has_att29() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void Performance_innercomplexPerformance_5::set_has_att29() {
  _has_bits_[0] |= 0x10000000u;
}
inline void Performance_innercomplexPerformance_5::clear_has_att29() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void Performance_innercomplexPerformance_5::clear_att29() {
  att29_ = false;
  clear_has_att29();
}
inline bool Performance_innercomplexPerformance_5::att29() const {
  return att29_;
}
inline void Performance_innercomplexPerformance_5::set_att29(bool value) {
  set_has_att29();
  att29_ = value;
}

// required bool att30 = 30;
inline bool Performance_innercomplexPerformance_5::has_att30() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void Performance_innercomplexPerformance_5::set_has_att30() {
  _has_bits_[0] |= 0x20000000u;
}
inline void Performance_innercomplexPerformance_5::clear_has_att30() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void Performance_innercomplexPerformance_5::clear_att30() {
  att30_ = false;
  clear_has_att30();
}
inline bool Performance_innercomplexPerformance_5::att30() const {
  return att30_;
}
inline void Performance_innercomplexPerformance_5::set_att30(bool value) {
  set_has_att30();
  att30_ = value;
}

// -------------------------------------------------------------------

// Performance_outercomplexPerformance_5

// required int32 att1 = 1;
inline bool Performance_outercomplexPerformance_5::has_att1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Performance_outercomplexPerformance_5::set_has_att1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Performance_outercomplexPerformance_5::clear_has_att1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Performance_outercomplexPerformance_5::clear_att1() {
  att1_ = 0;
  clear_has_att1();
}
inline ::google::protobuf::int32 Performance_outercomplexPerformance_5::att1() const {
  return att1_;
}
inline void Performance_outercomplexPerformance_5::set_att1(::google::protobuf::int32 value) {
  set_has_att1();
  att1_ = value;
}

// required int64 att2 = 2;
inline bool Performance_outercomplexPerformance_5::has_att2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Performance_outercomplexPerformance_5::set_has_att2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Performance_outercomplexPerformance_5::clear_has_att2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Performance_outercomplexPerformance_5::clear_att2() {
  att2_ = GOOGLE_LONGLONG(0);
  clear_has_att2();
}
inline ::google::protobuf::int64 Performance_outercomplexPerformance_5::att2() const {
  return att2_;
}
inline void Performance_outercomplexPerformance_5::set_att2(::google::protobuf::int64 value) {
  set_has_att2();
  att2_ = value;
}

// required string att3 = 3;
inline bool Performance_outercomplexPerformance_5::has_att3() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Performance_outercomplexPerformance_5::set_has_att3() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Performance_outercomplexPerformance_5::clear_has_att3() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Performance_outercomplexPerformance_5::clear_att3() {
  if (att3_ != &::google::protobuf::internal::kEmptyString) {
    att3_->clear();
  }
  clear_has_att3();
}
inline const ::std::string& Performance_outercomplexPerformance_5::att3() const {
  return *att3_;
}
inline void Performance_outercomplexPerformance_5::set_att3(const ::std::string& value) {
  set_has_att3();
  if (att3_ == &::google::protobuf::internal::kEmptyString) {
    att3_ = new ::std::string;
  }
  att3_->assign(value);
}
inline void Performance_outercomplexPerformance_5::set_att3(const char* value) {
  set_has_att3();
  if (att3_ == &::google::protobuf::internal::kEmptyString) {
    att3_ = new ::std::string;
  }
  att3_->assign(value);
}
inline void Performance_outercomplexPerformance_5::set_att3(const char* value, size_t size) {
  set_has_att3();
  if (att3_ == &::google::protobuf::internal::kEmptyString) {
    att3_ = new ::std::string;
  }
  att3_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Performance_outercomplexPerformance_5::mutable_att3() {
  set_has_att3();
  if (att3_ == &::google::protobuf::internal::kEmptyString) {
    att3_ = new ::std::string;
  }
  return att3_;
}
inline ::std::string* Performance_outercomplexPerformance_5::release_att3() {
  clear_has_att3();
  if (att3_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = att3_;
    att3_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Performance_outercomplexPerformance_5::set_allocated_att3(::std::string* att3) {
  if (att3_ != &::google::protobuf::internal::kEmptyString) {
    delete att3_;
  }
  if (att3) {
    set_has_att3();
    att3_ = att3;
  } else {
    clear_has_att3();
    att3_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required .performance.Performance.innercomplexPerformance_5 att4 = 4;
inline bool Performance_outercomplexPerformance_5::has_att4() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Performance_outercomplexPerformance_5::set_has_att4() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Performance_outercomplexPerformance_5::clear_has_att4() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Performance_outercomplexPerformance_5::clear_att4() {
  if (att4_ != NULL) att4_->::performance::Performance_innercomplexPerformance_5::Clear();
  clear_has_att4();
}
inline const ::performance::Performance_innercomplexPerformance_5& Performance_outercomplexPerformance_5::att4() const {
  return att4_ != NULL ? *att4_ : *default_instance_->att4_;
}
inline ::performance::Performance_innercomplexPerformance_5* Performance_outercomplexPerformance_5::mutable_att4() {
  set_has_att4();
  if (att4_ == NULL) att4_ = new ::performance::Performance_innercomplexPerformance_5;
  return att4_;
}
inline ::performance::Performance_innercomplexPerformance_5* Performance_outercomplexPerformance_5::release_att4() {
  clear_has_att4();
  ::performance::Performance_innercomplexPerformance_5* temp = att4_;
  att4_ = NULL;
  return temp;
}
inline void Performance_outercomplexPerformance_5::set_allocated_att4(::performance::Performance_innercomplexPerformance_5* att4) {
  delete att4_;
  att4_ = att4;
  if (att4) {
    set_has_att4();
  } else {
    clear_has_att4();
  }
}

// required float att5 = 5;
inline bool Performance_outercomplexPerformance_5::has_att5() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Performance_outercomplexPerformance_5::set_has_att5() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Performance_outercomplexPerformance_5::clear_has_att5() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Performance_outercomplexPerformance_5::clear_att5() {
  att5_ = 0;
  clear_has_att5();
}
inline float Performance_outercomplexPerformance_5::att5() const {
  return att5_;
}
inline void Performance_outercomplexPerformance_5::set_att5(float value) {
  set_has_att5();
  att5_ = value;
}

// required double att6 = 6;
inline bool Performance_outercomplexPerformance_5::has_att6() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Performance_outercomplexPerformance_5::set_has_att6() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Performance_outercomplexPerformance_5::clear_has_att6() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Performance_outercomplexPerformance_5::clear_att6() {
  att6_ = 0;
  clear_has_att6();
}
inline double Performance_outercomplexPerformance_5::att6() const {
  return att6_;
}
inline void Performance_outercomplexPerformance_5::set_att6(double value) {
  set_has_att6();
  att6_ = value;
}

// required bool att7 = 7;
inline bool Performance_outercomplexPerformance_5::has_att7() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Performance_outercomplexPerformance_5::set_has_att7() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Performance_outercomplexPerformance_5::clear_has_att7() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Performance_outercomplexPerformance_5::clear_att7() {
  att7_ = false;
  clear_has_att7();
}
inline bool Performance_outercomplexPerformance_5::att7() const {
  return att7_;
}
inline void Performance_outercomplexPerformance_5::set_att7(bool value) {
  set_has_att7();
  att7_ = value;
}

// required int64 att8 = 8;
inline bool Performance_outercomplexPerformance_5::has_att8() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Performance_outercomplexPerformance_5::set_has_att8() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Performance_outercomplexPerformance_5::clear_has_att8() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Performance_outercomplexPerformance_5::clear_att8() {
  att8_ = GOOGLE_LONGLONG(0);
  clear_has_att8();
}
inline ::google::protobuf::int64 Performance_outercomplexPerformance_5::att8() const {
  return att8_;
}
inline void Performance_outercomplexPerformance_5::set_att8(::google::protobuf::int64 value) {
  set_has_att8();
  att8_ = value;
}

// required string att9 = 9;
inline bool Performance_outercomplexPerformance_5::has_att9() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Performance_outercomplexPerformance_5::set_has_att9() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Performance_outercomplexPerformance_5::clear_has_att9() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Performance_outercomplexPerformance_5::clear_att9() {
  if (att9_ != &::google::protobuf::internal::kEmptyString) {
    att9_->clear();
  }
  clear_has_att9();
}
inline const ::std::string& Performance_outercomplexPerformance_5::att9() const {
  return *att9_;
}
inline void Performance_outercomplexPerformance_5::set_att9(const ::std::string& value) {
  set_has_att9();
  if (att9_ == &::google::protobuf::internal::kEmptyString) {
    att9_ = new ::std::string;
  }
  att9_->assign(value);
}
inline void Performance_outercomplexPerformance_5::set_att9(const char* value) {
  set_has_att9();
  if (att9_ == &::google::protobuf::internal::kEmptyString) {
    att9_ = new ::std::string;
  }
  att9_->assign(value);
}
inline void Performance_outercomplexPerformance_5::set_att9(const char* value, size_t size) {
  set_has_att9();
  if (att9_ == &::google::protobuf::internal::kEmptyString) {
    att9_ = new ::std::string;
  }
  att9_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Performance_outercomplexPerformance_5::mutable_att9() {
  set_has_att9();
  if (att9_ == &::google::protobuf::internal::kEmptyString) {
    att9_ = new ::std::string;
  }
  return att9_;
}
inline ::std::string* Performance_outercomplexPerformance_5::release_att9() {
  clear_has_att9();
  if (att9_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = att9_;
    att9_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Performance_outercomplexPerformance_5::set_allocated_att9(::std::string* att9) {
  if (att9_ != &::google::protobuf::internal::kEmptyString) {
    delete att9_;
  }
  if (att9) {
    set_has_att9();
    att9_ = att9;
  } else {
    clear_has_att9();
    att9_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required .performance.Performance.innercomplexPerformance_5 att10 = 10;
inline bool Performance_outercomplexPerformance_5::has_att10() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Performance_outercomplexPerformance_5::set_has_att10() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Performance_outercomplexPerformance_5::clear_has_att10() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Performance_outercomplexPerformance_5::clear_att10() {
  if (att10_ != NULL) att10_->::performance::Performance_innercomplexPerformance_5::Clear();
  clear_has_att10();
}
inline const ::performance::Performance_innercomplexPerformance_5& Performance_outercomplexPerformance_5::att10() const {
  return att10_ != NULL ? *att10_ : *default_instance_->att10_;
}
inline ::performance::Performance_innercomplexPerformance_5* Performance_outercomplexPerformance_5::mutable_att10() {
  set_has_att10();
  if (att10_ == NULL) att10_ = new ::performance::Performance_innercomplexPerformance_5;
  return att10_;
}
inline ::performance::Performance_innercomplexPerformance_5* Performance_outercomplexPerformance_5::release_att10() {
  clear_has_att10();
  ::performance::Performance_innercomplexPerformance_5* temp = att10_;
  att10_ = NULL;
  return temp;
}
inline void Performance_outercomplexPerformance_5::set_allocated_att10(::performance::Performance_innercomplexPerformance_5* att10) {
  delete att10_;
  att10_ = att10;
  if (att10) {
    set_has_att10();
  } else {
    clear_has_att10();
  }
}

// required float att11 = 11;
inline bool Performance_outercomplexPerformance_5::has_att11() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Performance_outercomplexPerformance_5::set_has_att11() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Performance_outercomplexPerformance_5::clear_has_att11() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Performance_outercomplexPerformance_5::clear_att11() {
  att11_ = 0;
  clear_has_att11();
}
inline float Performance_outercomplexPerformance_5::att11() const {
  return att11_;
}
inline void Performance_outercomplexPerformance_5::set_att11(float value) {
  set_has_att11();
  att11_ = value;
}

// required double att12 = 12;
inline bool Performance_outercomplexPerformance_5::has_att12() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Performance_outercomplexPerformance_5::set_has_att12() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Performance_outercomplexPerformance_5::clear_has_att12() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Performance_outercomplexPerformance_5::clear_att12() {
  att12_ = 0;
  clear_has_att12();
}
inline double Performance_outercomplexPerformance_5::att12() const {
  return att12_;
}
inline void Performance_outercomplexPerformance_5::set_att12(double value) {
  set_has_att12();
  att12_ = value;
}

// required bool att13 = 13;
inline bool Performance_outercomplexPerformance_5::has_att13() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Performance_outercomplexPerformance_5::set_has_att13() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Performance_outercomplexPerformance_5::clear_has_att13() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Performance_outercomplexPerformance_5::clear_att13() {
  att13_ = false;
  clear_has_att13();
}
inline bool Performance_outercomplexPerformance_5::att13() const {
  return att13_;
}
inline void Performance_outercomplexPerformance_5::set_att13(bool value) {
  set_has_att13();
  att13_ = value;
}

// required string att14 = 14;
inline bool Performance_outercomplexPerformance_5::has_att14() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void Performance_outercomplexPerformance_5::set_has_att14() {
  _has_bits_[0] |= 0x00002000u;
}
inline void Performance_outercomplexPerformance_5::clear_has_att14() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void Performance_outercomplexPerformance_5::clear_att14() {
  if (att14_ != &::google::protobuf::internal::kEmptyString) {
    att14_->clear();
  }
  clear_has_att14();
}
inline const ::std::string& Performance_outercomplexPerformance_5::att14() const {
  return *att14_;
}
inline void Performance_outercomplexPerformance_5::set_att14(const ::std::string& value) {
  set_has_att14();
  if (att14_ == &::google::protobuf::internal::kEmptyString) {
    att14_ = new ::std::string;
  }
  att14_->assign(value);
}
inline void Performance_outercomplexPerformance_5::set_att14(const char* value) {
  set_has_att14();
  if (att14_ == &::google::protobuf::internal::kEmptyString) {
    att14_ = new ::std::string;
  }
  att14_->assign(value);
}
inline void Performance_outercomplexPerformance_5::set_att14(const char* value, size_t size) {
  set_has_att14();
  if (att14_ == &::google::protobuf::internal::kEmptyString) {
    att14_ = new ::std::string;
  }
  att14_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Performance_outercomplexPerformance_5::mutable_att14() {
  set_has_att14();
  if (att14_ == &::google::protobuf::internal::kEmptyString) {
    att14_ = new ::std::string;
  }
  return att14_;
}
inline ::std::string* Performance_outercomplexPerformance_5::release_att14() {
  clear_has_att14();
  if (att14_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = att14_;
    att14_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Performance_outercomplexPerformance_5::set_allocated_att14(::std::string* att14) {
  if (att14_ != &::google::protobuf::internal::kEmptyString) {
    delete att14_;
  }
  if (att14) {
    set_has_att14();
    att14_ = att14;
  } else {
    clear_has_att14();
    att14_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required .performance.Performance.innercomplexPerformance_5 att15 = 15;
inline bool Performance_outercomplexPerformance_5::has_att15() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void Performance_outercomplexPerformance_5::set_has_att15() {
  _has_bits_[0] |= 0x00004000u;
}
inline void Performance_outercomplexPerformance_5::clear_has_att15() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void Performance_outercomplexPerformance_5::clear_att15() {
  if (att15_ != NULL) att15_->::performance::Performance_innercomplexPerformance_5::Clear();
  clear_has_att15();
}
inline const ::performance::Performance_innercomplexPerformance_5& Performance_outercomplexPerformance_5::att15() const {
  return att15_ != NULL ? *att15_ : *default_instance_->att15_;
}
inline ::performance::Performance_innercomplexPerformance_5* Performance_outercomplexPerformance_5::mutable_att15() {
  set_has_att15();
  if (att15_ == NULL) att15_ = new ::performance::Performance_innercomplexPerformance_5;
  return att15_;
}
inline ::performance::Performance_innercomplexPerformance_5* Performance_outercomplexPerformance_5::release_att15() {
  clear_has_att15();
  ::performance::Performance_innercomplexPerformance_5* temp = att15_;
  att15_ = NULL;
  return temp;
}
inline void Performance_outercomplexPerformance_5::set_allocated_att15(::performance::Performance_innercomplexPerformance_5* att15) {
  delete att15_;
  att15_ = att15;
  if (att15) {
    set_has_att15();
  } else {
    clear_has_att15();
  }
}

// required float att16 = 16;
inline bool Performance_outercomplexPerformance_5::has_att16() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void Performance_outercomplexPerformance_5::set_has_att16() {
  _has_bits_[0] |= 0x00008000u;
}
inline void Performance_outercomplexPerformance_5::clear_has_att16() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void Performance_outercomplexPerformance_5::clear_att16() {
  att16_ = 0;
  clear_has_att16();
}
inline float Performance_outercomplexPerformance_5::att16() const {
  return att16_;
}
inline void Performance_outercomplexPerformance_5::set_att16(float value) {
  set_has_att16();
  att16_ = value;
}

// required double att17 = 17;
inline bool Performance_outercomplexPerformance_5::has_att17() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void Performance_outercomplexPerformance_5::set_has_att17() {
  _has_bits_[0] |= 0x00010000u;
}
inline void Performance_outercomplexPerformance_5::clear_has_att17() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void Performance_outercomplexPerformance_5::clear_att17() {
  att17_ = 0;
  clear_has_att17();
}
inline double Performance_outercomplexPerformance_5::att17() const {
  return att17_;
}
inline void Performance_outercomplexPerformance_5::set_att17(double value) {
  set_has_att17();
  att17_ = value;
}

// required bool att18 = 18;
inline bool Performance_outercomplexPerformance_5::has_att18() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void Performance_outercomplexPerformance_5::set_has_att18() {
  _has_bits_[0] |= 0x00020000u;
}
inline void Performance_outercomplexPerformance_5::clear_has_att18() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void Performance_outercomplexPerformance_5::clear_att18() {
  att18_ = false;
  clear_has_att18();
}
inline bool Performance_outercomplexPerformance_5::att18() const {
  return att18_;
}
inline void Performance_outercomplexPerformance_5::set_att18(bool value) {
  set_has_att18();
  att18_ = value;
}

// required .performance.Performance.innercomplexPerformance_5 att19 = 19;
inline bool Performance_outercomplexPerformance_5::has_att19() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void Performance_outercomplexPerformance_5::set_has_att19() {
  _has_bits_[0] |= 0x00040000u;
}
inline void Performance_outercomplexPerformance_5::clear_has_att19() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void Performance_outercomplexPerformance_5::clear_att19() {
  if (att19_ != NULL) att19_->::performance::Performance_innercomplexPerformance_5::Clear();
  clear_has_att19();
}
inline const ::performance::Performance_innercomplexPerformance_5& Performance_outercomplexPerformance_5::att19() const {
  return att19_ != NULL ? *att19_ : *default_instance_->att19_;
}
inline ::performance::Performance_innercomplexPerformance_5* Performance_outercomplexPerformance_5::mutable_att19() {
  set_has_att19();
  if (att19_ == NULL) att19_ = new ::performance::Performance_innercomplexPerformance_5;
  return att19_;
}
inline ::performance::Performance_innercomplexPerformance_5* Performance_outercomplexPerformance_5::release_att19() {
  clear_has_att19();
  ::performance::Performance_innercomplexPerformance_5* temp = att19_;
  att19_ = NULL;
  return temp;
}
inline void Performance_outercomplexPerformance_5::set_allocated_att19(::performance::Performance_innercomplexPerformance_5* att19) {
  delete att19_;
  att19_ = att19;
  if (att19) {
    set_has_att19();
  } else {
    clear_has_att19();
  }
}

// required float att20 = 20;
inline bool Performance_outercomplexPerformance_5::has_att20() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void Performance_outercomplexPerformance_5::set_has_att20() {
  _has_bits_[0] |= 0x00080000u;
}
inline void Performance_outercomplexPerformance_5::clear_has_att20() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void Performance_outercomplexPerformance_5::clear_att20() {
  att20_ = 0;
  clear_has_att20();
}
inline float Performance_outercomplexPerformance_5::att20() const {
  return att20_;
}
inline void Performance_outercomplexPerformance_5::set_att20(float value) {
  set_has_att20();
  att20_ = value;
}

// required double att21 = 21;
inline bool Performance_outercomplexPerformance_5::has_att21() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void Performance_outercomplexPerformance_5::set_has_att21() {
  _has_bits_[0] |= 0x00100000u;
}
inline void Performance_outercomplexPerformance_5::clear_has_att21() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void Performance_outercomplexPerformance_5::clear_att21() {
  att21_ = 0;
  clear_has_att21();
}
inline double Performance_outercomplexPerformance_5::att21() const {
  return att21_;
}
inline void Performance_outercomplexPerformance_5::set_att21(double value) {
  set_has_att21();
  att21_ = value;
}

// required bool att22 = 22;
inline bool Performance_outercomplexPerformance_5::has_att22() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void Performance_outercomplexPerformance_5::set_has_att22() {
  _has_bits_[0] |= 0x00200000u;
}
inline void Performance_outercomplexPerformance_5::clear_has_att22() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void Performance_outercomplexPerformance_5::clear_att22() {
  att22_ = false;
  clear_has_att22();
}
inline bool Performance_outercomplexPerformance_5::att22() const {
  return att22_;
}
inline void Performance_outercomplexPerformance_5::set_att22(bool value) {
  set_has_att22();
  att22_ = value;
}

// required float att23 = 23;
inline bool Performance_outercomplexPerformance_5::has_att23() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void Performance_outercomplexPerformance_5::set_has_att23() {
  _has_bits_[0] |= 0x00400000u;
}
inline void Performance_outercomplexPerformance_5::clear_has_att23() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void Performance_outercomplexPerformance_5::clear_att23() {
  att23_ = 0;
  clear_has_att23();
}
inline float Performance_outercomplexPerformance_5::att23() const {
  return att23_;
}
inline void Performance_outercomplexPerformance_5::set_att23(float value) {
  set_has_att23();
  att23_ = value;
}

// required double att24 = 24;
inline bool Performance_outercomplexPerformance_5::has_att24() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void Performance_outercomplexPerformance_5::set_has_att24() {
  _has_bits_[0] |= 0x00800000u;
}
inline void Performance_outercomplexPerformance_5::clear_has_att24() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void Performance_outercomplexPerformance_5::clear_att24() {
  att24_ = 0;
  clear_has_att24();
}
inline double Performance_outercomplexPerformance_5::att24() const {
  return att24_;
}
inline void Performance_outercomplexPerformance_5::set_att24(double value) {
  set_has_att24();
  att24_ = value;
}

// required bool att25 = 25;
inline bool Performance_outercomplexPerformance_5::has_att25() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void Performance_outercomplexPerformance_5::set_has_att25() {
  _has_bits_[0] |= 0x01000000u;
}
inline void Performance_outercomplexPerformance_5::clear_has_att25() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void Performance_outercomplexPerformance_5::clear_att25() {
  att25_ = false;
  clear_has_att25();
}
inline bool Performance_outercomplexPerformance_5::att25() const {
  return att25_;
}
inline void Performance_outercomplexPerformance_5::set_att25(bool value) {
  set_has_att25();
  att25_ = value;
}

// -------------------------------------------------------------------

// Performance


// @@protoc_insertion_point(namespace_scope)

}  // namespace performance

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_PerformanceTest_2eproto__INCLUDED
